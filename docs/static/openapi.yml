openapi: 3.0.0
info:
  title: StreamPay
  version: v0.1.0
paths:
  /cosmos/tx/v1beta1/simulate:
    post:
      summary: Simulate simulates executing a transaction for estimating gas usage.
      operationId: Simulate_HNVSO_K5VQO_3V3DF_N8VDS
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  gas_info:
                    description: gas_info is the information about gas used in the simulation.
                    type: object
                    properties:
                      gas_wanted:
                        type: string
                        format: uint64
                        description: GasWanted is the maximum units of work we allow this tx to perform.
                      gas_used:
                        type: string
                        format: uint64
                        description: GasUsed is the amount of gas actually consumed.
                  result:
                    description: result is the result of the simulation.
                    type: object
                    properties:
                      data:
                        type: string
                        format: byte
                        description: >-
                          Data is any data returned from message or handler
                          execution. It MUST be

                          length prefixed in order to separate data from multiple message executions.
                      log:
                        type: string
                        description: Log contains the log information from message or handler execution.
                      events:
                        type: array
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                            attributes:
                              type: array
                              items:
                                type: object
                                properties:
                                  key:
                                    type: string
                                    format: byte
                                  value:
                                    type: string
                                    format: byte
                                  index:
                                    type: boolean
                                description: EventAttribute is a single key-value pair, associated with an
                                  event.
                          description: >-
                            Event allows application developers to attach
                            additional information to

                            ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.

                            Later, transactions may be queried using these events.
                        description: >-
                          Events contains a slice of Event objects that were
                          emitted during message

                          or handler execution.
                description: |-
                  SimulateResponse is the response type for the
                  Service.SimulateRPC method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tx:
                  description: |-
                    tx is the transaction to simulate.
                    Deprecated. Send raw tx bytes instead.
                  type: object
                  properties:
                    body:
                      title: body is the processable content of the transaction
                      type: object
                      properties:
                        messages:
                          type: array
                          items:
                            type: object
                            properties:
                              type_url:
                                type: string
                              value:
                                type: string
                                format: byte
                          description: >-
                            messages is a list of messages to be executed. The
                            required signers of

                            those messages define the number and order of elements in AuthInfo's

                            signer_infos and Tx's signatures. Each required signer address is added to

                            the list only the first time it occurs.

                            By convention, the first required signer (usually from the first message)

                            is referred to as the primary signer and pays the fee for the whole

                            transaction.
                        memo:
                          type: string
                          description: >-
                            memo is any arbitrary note/comment to be added to
                            the transaction.

                            WARNING: in clients, any publicly exposed text should not be called memo,

                            but should be called `note` instead (see https://github.com/cosmos/cosmos-sdk/issues/9122).
                        timeout_height:
                          type: string
                          format: uint64
                          title: >-
                            timeout is the block height after which this
                            transaction will not

                            be processed by the chain
                        extension_options:
                          type: array
                          items:
                            type: object
                            properties:
                              type_url:
                                type: string
                              value:
                                type: string
                                format: byte
                          title: >-
                            extension_options are arbitrary options that can be
                            added by chains

                            when the default options are not sufficient. If any of these are present

                            and can't be handled, the transaction will be rejected
                        non_critical_extension_options:
                          type: array
                          items:
                            type: object
                            properties:
                              type_url:
                                type: string
                              value:
                                type: string
                                format: byte
                          title: >-
                            extension_options are arbitrary options that can be
                            added by chains

                            when the default options are not sufficient. If any of these are present

                            and can't be handled, they will be ignored
                      description: TxBody is the body of a transaction that all signers sign over.
                    auth_info:
                      title: >-
                        auth_info is the authorization related content of the
                        transaction,

                        specifically signers, signer modes and fee
                      type: object
                      properties:
                        signer_infos:
                          type: array
                          items:
                            type: object
                            properties:
                              public_key:
                                type: object
                                properties:
                                  type_url:
                                    type: string
                                  value:
                                    type: string
                                    format: byte
                                description: >-
                                  public_key is the public key of the signer. It
                                  is optional for accounts

                                  that already exist in state. If unset, the verifier can use the required \

                                  signer address for this position and lookup the public key.
                              mode_info:
                                title: >-
                                  mode_info describes the signing mode of the
                                  signer and is a nested

                                  structure to support nested multisig pubkey's
                                type: object
                                properties:
                                  single:
                                    title: single represents a single signer
                                    type: object
                                    properties:
                                      mode:
                                        title: mode is the signing mode of the single signer
                                        type: string
                                        enum:
                                          - SIGN_MODE_UNSPECIFIED
                                          - SIGN_MODE_DIRECT
                                          - SIGN_MODE_TEXTUAL
                                          - SIGN_MODE_LEGACY_AMINO_JSON
                                          - SIGN_MODE_EIP_191
                                        default: SIGN_MODE_UNSPECIFIED
                                        description: >-
                                          SignMode represents a signing mode
                                          with its own security guarantees.

                                           - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
                                          rejected
                                           - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
                                          verified with raw bytes from Tx
                                           - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
                                          human-readable textual representation on top of the binary representation

                                          from SIGN_MODE_DIRECT
                                           - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
                                          Amino JSON and will be removed in the future
                                           - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
                                          SDK. Ref: https://eips.ethereum.org/EIPS/eip-191


                                          Currently, SIGN_MODE_EIP_191 is registered as a SignMode enum variant,

                                          but is not implemented on the SDK by default. To enable EIP-191, you need

                                          to pass a custom `TxConfig` that has an implementation of

                                          `SignModeHandler` for EIP-191. The SDK may decide to fully support

                                          EIP-191 in the future.


                                          Since: cosmos-sdk 0.45.2
                                  multi:
                                    title: multi represents a nested multisig signer
                                    type: object
                                    properties:
                                      bitarray:
                                        title: bitarray specifies which keys within the multisig are signing
                                        type: object
                                        properties:
                                          extra_bits_stored:
                                            type: integer
                                            format: int64
                                          elems:
                                            type: string
                                            format: byte
                                        description: >-
                                          CompactBitArray is an implementation
                                          of a space efficient bit array.

                                          This is used to ensure that the encoded data takes up a minimal amount of

                                          space after proto encoding.

                                          This is not thread safe, and is not intended for concurrent usage.
                                      mode_infos:
                                        type: array
                                        items: {}
                                        title: >-
                                          mode_infos is the corresponding modes
                                          of the signers of the multisig

                                          which could include nested multisig public keys
                                description: ModeInfo describes the signing mode of a single or nested multisig
                                  signer.
                              sequence:
                                type: string
                                format: uint64
                                description: >-
                                  sequence is the sequence of the account, which
                                  describes the

                                  number of committed transactions signed by a given address. It is used to

                                  prevent replay attacks.
                            description: >-
                              SignerInfo describes the public key and signing
                              mode of a single top-level

                              signer.
                          description: >-
                            signer_infos defines the signing modes for the
                            required signers. The number

                            and order of elements must match the required signers from TxBody's

                            messages. The first element is the primary signer and the one which pays

                            the fee.
                        fee:
                          description: >-
                            Fee is the fee and gas limit for the transaction.
                            The first signer is the

                            primary signer and the one which pays the fee. The fee can be calculated

                            based on the cost of evaluating the body and doing signature verification

                            of the signers. This can be estimated via simulation.
                          type: object
                          properties:
                            amount:
                              type: array
                              items:
                                type: object
                                properties:
                                  denom:
                                    type: string
                                  amount:
                                    type: string
                                description: >-
                                  Coin defines a token with a denomination and
                                  an amount.


                                  NOTE: The amount field is an Int which implements the custom method

                                  signatures required by gogoproto.
                              title: amount is the amount of coins to be paid as a fee
                            gas_limit:
                              type: string
                              format: uint64
                              title: >-
                                gas_limit is the maximum gas that can be used in
                                transaction processing

                                before an out of gas error occurs
                            payer:
                              type: string
                              description: >-
                                if unset, the first signer is responsible for
                                paying the fees. If set, the specified account
                                must pay the fees.

                                the payer must be a tx signer (and thus have signed this field in AuthInfo).

                                setting this field does *not* change the ordering of required signers for the transaction.
                            granter:
                              type: string
                              title: >-
                                if set, the fee payer (either the first signer
                                or the value of the payer field) requests that a
                                fee grant be used

                                to pay fees instead of the fee payer's own balance. If an appropriate fee grant does not exist or the chain does

                                not support fee grants, this will fail
                      description: >-
                        AuthInfo describes the fee and signer modes that are
                        used to sign a

                        transaction.
                    signatures:
                      type: array
                      items:
                        type: string
                        format: byte
                      description: >-
                        signatures is a list of signatures that matches the
                        length and order of

                        AuthInfo's signer_infos to allow connecting signature meta information like

                        public key and signing mode by position.
                tx_bytes:
                  type: string
                  format: byte
                  description: |-
                    tx_bytes is the raw transaction.

                    Since: cosmos-sdk 0.43
              description: |-
                SimulateRequest is the request type for the Service.Simulate
                RPC method.
        required: true
      tags:
        - gRPC Gateway API
  /cosmos/tx/v1beta1/txs:
    get:
      summary: GetTxsEvent fetches txs by event.
      operationId: GetTxsEvent_LPESG_JXDU0_1T5SH_1QHHJ
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  txs:
                    type: array
                    items:
                      type: object
                      properties:
                        body:
                          title: body is the processable content of the transaction
                          type: object
                          properties:
                            messages:
                              type: array
                              items:
                                type: object
                                properties:
                                  type_url:
                                    type: string
                                  value:
                                    type: string
                                    format: byte
                              description: >-
                                messages is a list of messages to be executed.
                                The required signers of

                                those messages define the number and order of elements in AuthInfo's

                                signer_infos and Tx's signatures. Each required signer address is added to

                                the list only the first time it occurs.

                                By convention, the first required signer (usually from the first message)

                                is referred to as the primary signer and pays the fee for the whole

                                transaction.
                            memo:
                              type: string
                              description: >-
                                memo is any arbitrary note/comment to be added
                                to the transaction.

                                WARNING: in clients, any publicly exposed text should not be called memo,

                                but should be called `note` instead (see https://github.com/cosmos/cosmos-sdk/issues/9122).
                            timeout_height:
                              type: string
                              format: uint64
                              title: >-
                                timeout is the block height after which this
                                transaction will not

                                be processed by the chain
                            extension_options:
                              type: array
                              items:
                                type: object
                                properties:
                                  type_url:
                                    type: string
                                  value:
                                    type: string
                                    format: byte
                              title: >-
                                extension_options are arbitrary options that can
                                be added by chains

                                when the default options are not sufficient. If any of these are present

                                and can't be handled, the transaction will be rejected
                            non_critical_extension_options:
                              type: array
                              items:
                                type: object
                                properties:
                                  type_url:
                                    type: string
                                  value:
                                    type: string
                                    format: byte
                              title: >-
                                extension_options are arbitrary options that can
                                be added by chains

                                when the default options are not sufficient. If any of these are present

                                and can't be handled, they will be ignored
                          description: TxBody is the body of a transaction that all signers sign over.
                        auth_info:
                          title: >-
                            auth_info is the authorization related content of
                            the transaction,

                            specifically signers, signer modes and fee
                          type: object
                          properties:
                            signer_infos:
                              type: array
                              items:
                                type: object
                                properties:
                                  public_key:
                                    type: object
                                    properties:
                                      type_url:
                                        type: string
                                      value:
                                        type: string
                                        format: byte
                                    description: >-
                                      public_key is the public key of the
                                      signer. It is optional for accounts

                                      that already exist in state. If unset, the verifier can use the required \

                                      signer address for this position and lookup the public key.
                                  mode_info:
                                    title: >-
                                      mode_info describes the signing mode of
                                      the signer and is a nested

                                      structure to support nested multisig pubkey's
                                    type: object
                                    properties:
                                      single:
                                        title: single represents a single signer
                                        type: object
                                        properties:
                                          mode:
                                            title: mode is the signing mode of the single signer
                                            type: string
                                            enum:
                                              - SIGN_MODE_UNSPECIFIED
                                              - SIGN_MODE_DIRECT
                                              - SIGN_MODE_TEXTUAL
                                              - SIGN_MODE_LEGACY_AMINO_JSON
                                              - SIGN_MODE_EIP_191
                                            default: SIGN_MODE_UNSPECIFIED
                                            description: >-
                                              SignMode represents a signing mode
                                              with its own security guarantees.

                                               - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
                                              rejected
                                               - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
                                              verified with raw bytes from Tx
                                               - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
                                              human-readable textual representation on top of the binary representation

                                              from SIGN_MODE_DIRECT
                                               - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
                                              Amino JSON and will be removed in the future
                                               - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
                                              SDK. Ref: https://eips.ethereum.org/EIPS/eip-191


                                              Currently, SIGN_MODE_EIP_191 is registered as a SignMode enum variant,

                                              but is not implemented on the SDK by default. To enable EIP-191, you need

                                              to pass a custom `TxConfig` that has an implementation of

                                              `SignModeHandler` for EIP-191. The SDK may decide to fully support

                                              EIP-191 in the future.


                                              Since: cosmos-sdk 0.45.2
                                      multi:
                                        title: multi represents a nested multisig signer
                                        type: object
                                        properties:
                                          bitarray:
                                            title: bitarray specifies which keys within the multisig are signing
                                            type: object
                                            properties:
                                              extra_bits_stored:
                                                type: integer
                                                format: int64
                                              elems:
                                                type: string
                                                format: byte
                                            description: >-
                                              CompactBitArray is an
                                              implementation of a space
                                              efficient bit array.

                                              This is used to ensure that the encoded data takes up a minimal amount of

                                              space after proto encoding.

                                              This is not thread safe, and is not intended for concurrent usage.
                                          mode_infos:
                                            type: array
                                            items: {}
                                            title: >-
                                              mode_infos is the corresponding
                                              modes of the signers of the
                                              multisig

                                              which could include nested multisig public keys
                                    description: ModeInfo describes the signing mode of a single or nested multisig
                                      signer.
                                  sequence:
                                    type: string
                                    format: uint64
                                    description: >-
                                      sequence is the sequence of the account,
                                      which describes the

                                      number of committed transactions signed by a given address. It is used to

                                      prevent replay attacks.
                                description: >-
                                  SignerInfo describes the public key and
                                  signing mode of a single top-level

                                  signer.
                              description: >-
                                signer_infos defines the signing modes for the
                                required signers. The number

                                and order of elements must match the required signers from TxBody's

                                messages. The first element is the primary signer and the one which pays

                                the fee.
                            fee:
                              description: >-
                                Fee is the fee and gas limit for the
                                transaction. The first signer is the

                                primary signer and the one which pays the fee. The fee can be calculated

                                based on the cost of evaluating the body and doing signature verification

                                of the signers. This can be estimated via simulation.
                              type: object
                              properties:
                                amount:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      denom:
                                        type: string
                                      amount:
                                        type: string
                                    description: >-
                                      Coin defines a token with a denomination
                                      and an amount.


                                      NOTE: The amount field is an Int which implements the custom method

                                      signatures required by gogoproto.
                                  title: amount is the amount of coins to be paid as a fee
                                gas_limit:
                                  type: string
                                  format: uint64
                                  title: >-
                                    gas_limit is the maximum gas that can be
                                    used in transaction processing

                                    before an out of gas error occurs
                                payer:
                                  type: string
                                  description: >-
                                    if unset, the first signer is responsible
                                    for paying the fees. If set, the specified
                                    account must pay the fees.

                                    the payer must be a tx signer (and thus have signed this field in AuthInfo).

                                    setting this field does *not* change the ordering of required signers for the transaction.
                                granter:
                                  type: string
                                  title: >-
                                    if set, the fee payer (either the first
                                    signer or the value of the payer field)
                                    requests that a fee grant be used

                                    to pay fees instead of the fee payer's own balance. If an appropriate fee grant does not exist or the chain does

                                    not support fee grants, this will fail
                          description: >-
                            AuthInfo describes the fee and signer modes that are
                            used to sign a

                            transaction.
                        signatures:
                          type: array
                          items:
                            type: string
                            format: byte
                          description: >-
                            signatures is a list of signatures that matches the
                            length and order of

                            AuthInfo's signer_infos to allow connecting signature meta information like

                            public key and signing mode by position.
                      description: Tx is the standard type used for broadcasting transactions.
                    description: txs is the list of queried transactions.
                  tx_responses:
                    type: array
                    items:
                      type: object
                      properties:
                        height:
                          type: string
                          format: int64
                          title: The block height
                        txhash:
                          type: string
                          description: The transaction hash.
                        codespace:
                          type: string
                          title: Namespace for the Code
                        code:
                          type: integer
                          format: int64
                          description: Response code.
                        data:
                          type: string
                          description: Result bytes, if any.
                        raw_log:
                          type: string
                          description: >-
                            The output of the application's logger (raw string).
                            May be

                            non-deterministic.
                        logs:
                          type: array
                          items:
                            type: object
                            properties:
                              msg_index:
                                type: integer
                                format: int64
                              log:
                                type: string
                              events:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    type:
                                      type: string
                                    attributes:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          key:
                                            type: string
                                          value:
                                            type: string
                                        description: >-
                                          Attribute defines an attribute wrapper
                                          where the key and value are

                                          strings instead of raw bytes.
                                  description: >-
                                    StringEvent defines en Event object wrapper
                                    where all the attributes

                                    contain key/value pairs that are strings instead of raw bytes.
                                description: >-
                                  Events contains a slice of Event objects that
                                  were emitted during some

                                  execution.
                            description: ABCIMessageLog defines a structure containing an indexed tx ABCI
                              message log.
                          description: The output of the application's logger (typed). May be
                            non-deterministic.
                        info:
                          type: string
                          description: Additional information. May be non-deterministic.
                        gas_wanted:
                          type: string
                          format: int64
                          description: Amount of gas requested for transaction.
                        gas_used:
                          type: string
                          format: int64
                          description: Amount of gas consumed by transaction.
                        tx:
                          type: object
                          properties:
                            type_url:
                              type: string
                            value:
                              type: string
                              format: byte
                          description: The request transaction bytes.
                        timestamp:
                          type: string
                          description: >-
                            Time of the previous block. For heights > 1, it's
                            the weighted median of

                            the timestamps of the valid votes in the block.LastCommit. For height == 1,

                            it's genesis time.
                        events:
                          type: array
                          items:
                            type: object
                            properties:
                              type:
                                type: string
                              attributes:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    key:
                                      type: string
                                      format: byte
                                    value:
                                      type: string
                                      format: byte
                                    index:
                                      type: boolean
                                  description: EventAttribute is a single key-value pair, associated with an
                                    event.
                            description: >-
                              Event allows application developers to attach
                              additional information to

                              ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.

                              Later, transactions may be queried using these events.
                          description: >-
                            Events defines all the events emitted by processing
                            a transaction. Note,

                            these events include those emitted by processing all the messages and those

                            emitted from the ante handler. Whereas Logs contains the events, with

                            additional metadata, emitted only by processing the messages.


                            Since: cosmos-sdk 0.42.11, 0.44.5, 0.45
                      description: >-
                        TxResponse defines a structure containing relevant tx
                        data and metadata. The

                        tags are stringified and the log is JSON decoded.
                    description: tx_responses is the list of queried TxResponses.
                  pagination:
                    description: pagination defines a pagination for the response.
                    type: object
                    properties:
                      next_key:
                        type: string
                        format: byte
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                      total:
                        type: string
                        format: uint64
                        title: >-
                          total is total number of results available if
                          PageRequest.count_total

                          was set, its value is undefined otherwise
                description: >-
                  GetTxsEventResponse is the response type for the
                  Service.TxsByEvents

                  RPC method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: events
          description: events is the list of transaction event type.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key should

            be set.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in UIs.

            count_total is only respected when offset is used. It is ignored when key

            is set.
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          schema:
            type: boolean
        - name: order_by
          description: >-2
             - ORDER_BY_UNSPECIFIED: ORDER_BY_UNSPECIFIED specifies an unknown sorting order. OrderBy defaults to ASC in this case.
             - ORDER_BY_ASC: ORDER_BY_ASC defines ascending order
             - ORDER_BY_DESC: ORDER_BY_DESC defines descending order
          in: query
          required: false
          schema:
            type: string
            enum:
              - ORDER_BY_UNSPECIFIED
              - ORDER_BY_ASC
              - ORDER_BY_DESC
            default: ORDER_BY_UNSPECIFIED
      tags:
        - gRPC Gateway API
    post:
      summary: BroadcastTx broadcast transaction.
      operationId: BroadcastTx_D0FLG_E89CT_WVNSR_F3H73
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  tx_response:
                    type: object
                    properties:
                      height:
                        type: string
                        format: int64
                        title: The block height
                      txhash:
                        type: string
                        description: The transaction hash.
                      codespace:
                        type: string
                        title: Namespace for the Code
                      code:
                        type: integer
                        format: int64
                        description: Response code.
                      data:
                        type: string
                        description: Result bytes, if any.
                      raw_log:
                        type: string
                        description: >-
                          The output of the application's logger (raw string).
                          May be

                          non-deterministic.
                      logs:
                        type: array
                        items:
                          type: object
                          properties:
                            msg_index:
                              type: integer
                              format: int64
                            log:
                              type: string
                            events:
                              type: array
                              items:
                                type: object
                                properties:
                                  type:
                                    type: string
                                  attributes:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        key:
                                          type: string
                                        value:
                                          type: string
                                      description: >-
                                        Attribute defines an attribute wrapper
                                        where the key and value are

                                        strings instead of raw bytes.
                                description: >-
                                  StringEvent defines en Event object wrapper
                                  where all the attributes

                                  contain key/value pairs that are strings instead of raw bytes.
                              description: >-
                                Events contains a slice of Event objects that
                                were emitted during some

                                execution.
                          description: ABCIMessageLog defines a structure containing an indexed tx ABCI
                            message log.
                        description: The output of the application's logger (typed). May be
                          non-deterministic.
                      info:
                        type: string
                        description: Additional information. May be non-deterministic.
                      gas_wanted:
                        type: string
                        format: int64
                        description: Amount of gas requested for transaction.
                      gas_used:
                        type: string
                        format: int64
                        description: Amount of gas consumed by transaction.
                      tx:
                        type: object
                        properties:
                          type_url:
                            type: string
                          value:
                            type: string
                            format: byte
                        description: The request transaction bytes.
                      timestamp:
                        type: string
                        description: >-
                          Time of the previous block. For heights > 1, it's the
                          weighted median of

                          the timestamps of the valid votes in the block.LastCommit. For height == 1,

                          it's genesis time.
                      events:
                        type: array
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                            attributes:
                              type: array
                              items:
                                type: object
                                properties:
                                  key:
                                    type: string
                                    format: byte
                                  value:
                                    type: string
                                    format: byte
                                  index:
                                    type: boolean
                                description: EventAttribute is a single key-value pair, associated with an
                                  event.
                          description: >-
                            Event allows application developers to attach
                            additional information to

                            ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.

                            Later, transactions may be queried using these events.
                        description: >-
                          Events defines all the events emitted by processing a
                          transaction. Note,

                          these events include those emitted by processing all the messages and those

                          emitted from the ante handler. Whereas Logs contains the events, with

                          additional metadata, emitted only by processing the messages.


                          Since: cosmos-sdk 0.42.11, 0.44.5, 0.45
                    description: >-
                      TxResponse defines a structure containing relevant tx data
                      and metadata. The

                      tags are stringified and the log is JSON decoded.
                description: |-
                  BroadcastTxResponse is the response type for the
                  Service.BroadcastTx method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tx_bytes:
                  type: string
                  format: byte
                  description: tx_bytes is the raw transaction.
                mode:
                  type: string
                  enum:
                    - BROADCAST_MODE_UNSPECIFIED
                    - BROADCAST_MODE_BLOCK
                    - BROADCAST_MODE_SYNC
                    - BROADCAST_MODE_ASYNC
                  default: BROADCAST_MODE_UNSPECIFIED
                  description: >-
                    BroadcastMode specifies the broadcast mode for the
                    TxService.Broadcast RPC method.

                     - BROADCAST_MODE_UNSPECIFIED: zero-value for mode ordering
                     - BROADCAST_MODE_BLOCK: BROADCAST_MODE_BLOCK defines a tx broadcasting mode where the client waits for
                    the tx to be committed in a block.
                     - BROADCAST_MODE_SYNC: BROADCAST_MODE_SYNC defines a tx broadcasting mode where the client waits for
                    a CheckTx execution response only.
                     - BROADCAST_MODE_ASYNC: BROADCAST_MODE_ASYNC defines a tx broadcasting mode where the client returns
                    immediately.
              description: >-
                BroadcastTxRequest is the request type for the
                Service.BroadcastTxRequest

                RPC method.
        required: true
      tags:
        - gRPC Gateway API
  "/cosmos/tx/v1beta1/txs/block/{height}":
    get:
      summary: GetBlockWithTxs fetches a block with decoded txs.
      description: "Since: cosmos-sdk 0.45.2"
      operationId: GetBlockWithTxs_ZAGZJ_11U9Z_WV2EO_GOBWS
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  txs:
                    type: array
                    items:
                      type: object
                      properties:
                        body:
                          title: body is the processable content of the transaction
                          type: object
                          properties:
                            messages:
                              type: array
                              items:
                                type: object
                                properties:
                                  type_url:
                                    type: string
                                  value:
                                    type: string
                                    format: byte
                              description: >-
                                messages is a list of messages to be executed.
                                The required signers of

                                those messages define the number and order of elements in AuthInfo's

                                signer_infos and Tx's signatures. Each required signer address is added to

                                the list only the first time it occurs.

                                By convention, the first required signer (usually from the first message)

                                is referred to as the primary signer and pays the fee for the whole

                                transaction.
                            memo:
                              type: string
                              description: >-
                                memo is any arbitrary note/comment to be added
                                to the transaction.

                                WARNING: in clients, any publicly exposed text should not be called memo,

                                but should be called `note` instead (see https://github.com/cosmos/cosmos-sdk/issues/9122).
                            timeout_height:
                              type: string
                              format: uint64
                              title: >-
                                timeout is the block height after which this
                                transaction will not

                                be processed by the chain
                            extension_options:
                              type: array
                              items:
                                type: object
                                properties:
                                  type_url:
                                    type: string
                                  value:
                                    type: string
                                    format: byte
                              title: >-
                                extension_options are arbitrary options that can
                                be added by chains

                                when the default options are not sufficient. If any of these are present

                                and can't be handled, the transaction will be rejected
                            non_critical_extension_options:
                              type: array
                              items:
                                type: object
                                properties:
                                  type_url:
                                    type: string
                                  value:
                                    type: string
                                    format: byte
                              title: >-
                                extension_options are arbitrary options that can
                                be added by chains

                                when the default options are not sufficient. If any of these are present

                                and can't be handled, they will be ignored
                          description: TxBody is the body of a transaction that all signers sign over.
                        auth_info:
                          title: >-
                            auth_info is the authorization related content of
                            the transaction,

                            specifically signers, signer modes and fee
                          type: object
                          properties:
                            signer_infos:
                              type: array
                              items:
                                type: object
                                properties:
                                  public_key:
                                    type: object
                                    properties:
                                      type_url:
                                        type: string
                                      value:
                                        type: string
                                        format: byte
                                    description: >-
                                      public_key is the public key of the
                                      signer. It is optional for accounts

                                      that already exist in state. If unset, the verifier can use the required \

                                      signer address for this position and lookup the public key.
                                  mode_info:
                                    title: >-
                                      mode_info describes the signing mode of
                                      the signer and is a nested

                                      structure to support nested multisig pubkey's
                                    type: object
                                    properties:
                                      single:
                                        title: single represents a single signer
                                        type: object
                                        properties:
                                          mode:
                                            title: mode is the signing mode of the single signer
                                            type: string
                                            enum:
                                              - SIGN_MODE_UNSPECIFIED
                                              - SIGN_MODE_DIRECT
                                              - SIGN_MODE_TEXTUAL
                                              - SIGN_MODE_LEGACY_AMINO_JSON
                                              - SIGN_MODE_EIP_191
                                            default: SIGN_MODE_UNSPECIFIED
                                            description: >-
                                              SignMode represents a signing mode
                                              with its own security guarantees.

                                               - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
                                              rejected
                                               - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
                                              verified with raw bytes from Tx
                                               - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
                                              human-readable textual representation on top of the binary representation

                                              from SIGN_MODE_DIRECT
                                               - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
                                              Amino JSON and will be removed in the future
                                               - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
                                              SDK. Ref: https://eips.ethereum.org/EIPS/eip-191


                                              Currently, SIGN_MODE_EIP_191 is registered as a SignMode enum variant,

                                              but is not implemented on the SDK by default. To enable EIP-191, you need

                                              to pass a custom `TxConfig` that has an implementation of

                                              `SignModeHandler` for EIP-191. The SDK may decide to fully support

                                              EIP-191 in the future.


                                              Since: cosmos-sdk 0.45.2
                                      multi:
                                        title: multi represents a nested multisig signer
                                        type: object
                                        properties:
                                          bitarray:
                                            title: bitarray specifies which keys within the multisig are signing
                                            type: object
                                            properties:
                                              extra_bits_stored:
                                                type: integer
                                                format: int64
                                              elems:
                                                type: string
                                                format: byte
                                            description: >-
                                              CompactBitArray is an
                                              implementation of a space
                                              efficient bit array.

                                              This is used to ensure that the encoded data takes up a minimal amount of

                                              space after proto encoding.

                                              This is not thread safe, and is not intended for concurrent usage.
                                          mode_infos:
                                            type: array
                                            items: {}
                                            title: >-
                                              mode_infos is the corresponding
                                              modes of the signers of the
                                              multisig

                                              which could include nested multisig public keys
                                    description: ModeInfo describes the signing mode of a single or nested multisig
                                      signer.
                                  sequence:
                                    type: string
                                    format: uint64
                                    description: >-
                                      sequence is the sequence of the account,
                                      which describes the

                                      number of committed transactions signed by a given address. It is used to

                                      prevent replay attacks.
                                description: >-
                                  SignerInfo describes the public key and
                                  signing mode of a single top-level

                                  signer.
                              description: >-
                                signer_infos defines the signing modes for the
                                required signers. The number

                                and order of elements must match the required signers from TxBody's

                                messages. The first element is the primary signer and the one which pays

                                the fee.
                            fee:
                              description: >-
                                Fee is the fee and gas limit for the
                                transaction. The first signer is the

                                primary signer and the one which pays the fee. The fee can be calculated

                                based on the cost of evaluating the body and doing signature verification

                                of the signers. This can be estimated via simulation.
                              type: object
                              properties:
                                amount:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      denom:
                                        type: string
                                      amount:
                                        type: string
                                    description: >-
                                      Coin defines a token with a denomination
                                      and an amount.


                                      NOTE: The amount field is an Int which implements the custom method

                                      signatures required by gogoproto.
                                  title: amount is the amount of coins to be paid as a fee
                                gas_limit:
                                  type: string
                                  format: uint64
                                  title: >-
                                    gas_limit is the maximum gas that can be
                                    used in transaction processing

                                    before an out of gas error occurs
                                payer:
                                  type: string
                                  description: >-
                                    if unset, the first signer is responsible
                                    for paying the fees. If set, the specified
                                    account must pay the fees.

                                    the payer must be a tx signer (and thus have signed this field in AuthInfo).

                                    setting this field does *not* change the ordering of required signers for the transaction.
                                granter:
                                  type: string
                                  title: >-
                                    if set, the fee payer (either the first
                                    signer or the value of the payer field)
                                    requests that a fee grant be used

                                    to pay fees instead of the fee payer's own balance. If an appropriate fee grant does not exist or the chain does

                                    not support fee grants, this will fail
                          description: >-
                            AuthInfo describes the fee and signer modes that are
                            used to sign a

                            transaction.
                        signatures:
                          type: array
                          items:
                            type: string
                            format: byte
                          description: >-
                            signatures is a list of signatures that matches the
                            length and order of

                            AuthInfo's signer_infos to allow connecting signature meta information like

                            public key and signing mode by position.
                      description: Tx is the standard type used for broadcasting transactions.
                    description: txs are the transactions in the block.
                  block_id:
                    type: object
                    properties:
                      hash:
                        type: string
                        format: byte
                      part_set_header:
                        type: object
                        properties:
                          total:
                            type: integer
                            format: int64
                          hash:
                            type: string
                            format: byte
                        title: PartsetHeader
                    title: BlockID
                  block:
                    type: object
                    properties:
                      header:
                        type: object
                        properties:
                          version:
                            title: basic block info
                            type: object
                            properties:
                              block:
                                type: string
                                format: uint64
                              app:
                                type: string
                                format: uint64
                            description: >-
                              Consensus captures the consensus rules for
                              processing a block in the blockchain,

                              including all blockchain data structures and the rules of the application's

                              state transition machine.
                          chain_id:
                            type: string
                          height:
                            type: string
                            format: int64
                          time:
                            type: string
                            format: date-time
                          last_block_id:
                            type: object
                            properties:
                              hash:
                                type: string
                                format: byte
                              part_set_header:
                                type: object
                                properties:
                                  total:
                                    type: integer
                                    format: int64
                                  hash:
                                    type: string
                                    format: byte
                                title: PartsetHeader
                            title: BlockID
                          last_commit_hash:
                            type: string
                            format: byte
                            title: hashes of block data
                          data_hash:
                            type: string
                            format: byte
                          validators_hash:
                            type: string
                            format: byte
                            title: hashes from the app output from the prev block
                          next_validators_hash:
                            type: string
                            format: byte
                          consensus_hash:
                            type: string
                            format: byte
                          app_hash:
                            type: string
                            format: byte
                          last_results_hash:
                            type: string
                            format: byte
                          evidence_hash:
                            type: string
                            format: byte
                            title: consensus info
                          proposer_address:
                            type: string
                            format: byte
                        description: Header defines the structure of a block header.
                      data:
                        type: object
                        properties:
                          txs:
                            type: array
                            items:
                              type: string
                              format: byte
                            description: >-
                              Txs that will be applied by state @
                              block.Height+1.

                              NOTE: not all txs here are valid.  We're just agreeing on the order first.

                              This means that block.AppHash does not include these txs.
                        title: Data contains the set of transactions included in the block
                      evidence:
                        type: object
                        properties:
                          evidence:
                            type: array
                            items:
                              type: object
                              properties:
                                duplicate_vote_evidence:
                                  type: object
                                  properties:
                                    vote_a:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          enum:
                                            - SIGNED_MSG_TYPE_UNKNOWN
                                            - SIGNED_MSG_TYPE_PREVOTE
                                            - SIGNED_MSG_TYPE_PRECOMMIT
                                            - SIGNED_MSG_TYPE_PROPOSAL
                                          default: SIGNED_MSG_TYPE_UNKNOWN
                                          description: >-
                                            SignedMsgType is a type of signed
                                            message in the consensus.

                                             - SIGNED_MSG_TYPE_PREVOTE: Votes
                                             - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                        height:
                                          type: string
                                          format: int64
                                        round:
                                          type: integer
                                          format: int32
                                        block_id:
                                          type: object
                                          properties:
                                            hash:
                                              type: string
                                              format: byte
                                            part_set_header:
                                              type: object
                                              properties:
                                                total:
                                                  type: integer
                                                  format: int64
                                                hash:
                                                  type: string
                                                  format: byte
                                              title: PartsetHeader
                                          title: BlockID
                                        timestamp:
                                          type: string
                                          format: date-time
                                        validator_address:
                                          type: string
                                          format: byte
                                        validator_index:
                                          type: integer
                                          format: int32
                                        signature:
                                          type: string
                                          format: byte
                                      description: >-
                                        Vote represents a prevote, precommit, or
                                        commit vote from validators for

                                        consensus.
                                    vote_b:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          enum:
                                            - SIGNED_MSG_TYPE_UNKNOWN
                                            - SIGNED_MSG_TYPE_PREVOTE
                                            - SIGNED_MSG_TYPE_PRECOMMIT
                                            - SIGNED_MSG_TYPE_PROPOSAL
                                          default: SIGNED_MSG_TYPE_UNKNOWN
                                          description: >-
                                            SignedMsgType is a type of signed
                                            message in the consensus.

                                             - SIGNED_MSG_TYPE_PREVOTE: Votes
                                             - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                        height:
                                          type: string
                                          format: int64
                                        round:
                                          type: integer
                                          format: int32
                                        block_id:
                                          type: object
                                          properties:
                                            hash:
                                              type: string
                                              format: byte
                                            part_set_header:
                                              type: object
                                              properties:
                                                total:
                                                  type: integer
                                                  format: int64
                                                hash:
                                                  type: string
                                                  format: byte
                                              title: PartsetHeader
                                          title: BlockID
                                        timestamp:
                                          type: string
                                          format: date-time
                                        validator_address:
                                          type: string
                                          format: byte
                                        validator_index:
                                          type: integer
                                          format: int32
                                        signature:
                                          type: string
                                          format: byte
                                      description: >-
                                        Vote represents a prevote, precommit, or
                                        commit vote from validators for

                                        consensus.
                                    total_voting_power:
                                      type: string
                                      format: int64
                                    validator_power:
                                      type: string
                                      format: int64
                                    timestamp:
                                      type: string
                                      format: date-time
                                  description: DuplicateVoteEvidence contains evidence of a validator signed two
                                    conflicting votes.
                                light_client_attack_evidence:
                                  type: object
                                  properties:
                                    conflicting_block:
                                      type: object
                                      properties:
                                        signed_header:
                                          type: object
                                          properties:
                                            header:
                                              type: object
                                              properties:
                                                version:
                                                  title: basic block info
                                                  type: object
                                                  properties:
                                                    block:
                                                      type: string
                                                      format: uint64
                                                    app:
                                                      type: string
                                                      format: uint64
                                                  description: >-
                                                    Consensus captures the
                                                    consensus rules for
                                                    processing a block in the
                                                    blockchain,

                                                    including all blockchain data structures and the rules of the application's

                                                    state transition machine.
                                                chain_id:
                                                  type: string
                                                height:
                                                  type: string
                                                  format: int64
                                                time:
                                                  type: string
                                                  format: date-time
                                                last_block_id:
                                                  type: object
                                                  properties:
                                                    hash:
                                                      type: string
                                                      format: byte
                                                    part_set_header:
                                                      type: object
                                                      properties:
                                                        total:
                                                          type: integer
                                                          format: int64
                                                        hash:
                                                          type: string
                                                          format: byte
                                                      title: PartsetHeader
                                                  title: BlockID
                                                last_commit_hash:
                                                  type: string
                                                  format: byte
                                                  title: hashes of block data
                                                data_hash:
                                                  type: string
                                                  format: byte
                                                validators_hash:
                                                  type: string
                                                  format: byte
                                                  title: hashes from the app output from the prev block
                                                next_validators_hash:
                                                  type: string
                                                  format: byte
                                                consensus_hash:
                                                  type: string
                                                  format: byte
                                                app_hash:
                                                  type: string
                                                  format: byte
                                                last_results_hash:
                                                  type: string
                                                  format: byte
                                                evidence_hash:
                                                  type: string
                                                  format: byte
                                                  title: consensus info
                                                proposer_address:
                                                  type: string
                                                  format: byte
                                              description: Header defines the structure of a block header.
                                            commit:
                                              type: object
                                              properties:
                                                height:
                                                  type: string
                                                  format: int64
                                                round:
                                                  type: integer
                                                  format: int32
                                                block_id:
                                                  type: object
                                                  properties:
                                                    hash:
                                                      type: string
                                                      format: byte
                                                    part_set_header:
                                                      type: object
                                                      properties:
                                                        total:
                                                          type: integer
                                                          format: int64
                                                        hash:
                                                          type: string
                                                          format: byte
                                                      title: PartsetHeader
                                                  title: BlockID
                                                signatures:
                                                  type: array
                                                  items:
                                                    type: object
                                                    properties:
                                                      block_id_flag:
                                                        type: string
                                                        enum:
                                                          - BLOCK_ID_FLAG_UNKNOWN
                                                          - BLOCK_ID_FLAG_ABSENT
                                                          - BLOCK_ID_FLAG_COMMIT
                                                          - BLOCK_ID_FLAG_NIL
                                                        default: BLOCK_ID_FLAG_UNKNOWN
                                                        title: BlockIdFlag indicates which BlcokID the signature is for
                                                      validator_address:
                                                        type: string
                                                        format: byte
                                                      timestamp:
                                                        type: string
                                                        format: date-time
                                                      signature:
                                                        type: string
                                                        format: byte
                                                    description: CommitSig is a part of the Vote included in a Commit.
                                              description: Commit contains the evidence that a block was committed by a set of
                                                validators.
                                        validator_set:
                                          type: object
                                          properties:
                                            validators:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  address:
                                                    type: string
                                                    format: byte
                                                  pub_key:
                                                    type: object
                                                    properties:
                                                      ed25519:
                                                        type: string
                                                        format: byte
                                                      secp256k1:
                                                        type: string
                                                        format: byte
                                                    title: PublicKey defines the keys available for use with Validators
                                                  voting_power:
                                                    type: string
                                                    format: int64
                                                  proposer_priority:
                                                    type: string
                                                    format: int64
                                            proposer:
                                              type: object
                                              properties:
                                                address:
                                                  type: string
                                                  format: byte
                                                pub_key:
                                                  type: object
                                                  properties:
                                                    ed25519:
                                                      type: string
                                                      format: byte
                                                    secp256k1:
                                                      type: string
                                                      format: byte
                                                  title: PublicKey defines the keys available for use with Validators
                                                voting_power:
                                                  type: string
                                                  format: int64
                                                proposer_priority:
                                                  type: string
                                                  format: int64
                                            total_voting_power:
                                              type: string
                                              format: int64
                                    common_height:
                                      type: string
                                      format: int64
                                    byzantine_validators:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          address:
                                            type: string
                                            format: byte
                                          pub_key:
                                            type: object
                                            properties:
                                              ed25519:
                                                type: string
                                                format: byte
                                              secp256k1:
                                                type: string
                                                format: byte
                                            title: PublicKey defines the keys available for use with Validators
                                          voting_power:
                                            type: string
                                            format: int64
                                          proposer_priority:
                                            type: string
                                            format: int64
                                    total_voting_power:
                                      type: string
                                      format: int64
                                    timestamp:
                                      type: string
                                      format: date-time
                                  description: LightClientAttackEvidence contains evidence of a set of validators
                                    attempting to mislead a light client.
                      last_commit:
                        type: object
                        properties:
                          height:
                            type: string
                            format: int64
                          round:
                            type: integer
                            format: int32
                          block_id:
                            type: object
                            properties:
                              hash:
                                type: string
                                format: byte
                              part_set_header:
                                type: object
                                properties:
                                  total:
                                    type: integer
                                    format: int64
                                  hash:
                                    type: string
                                    format: byte
                                title: PartsetHeader
                            title: BlockID
                          signatures:
                            type: array
                            items:
                              type: object
                              properties:
                                block_id_flag:
                                  type: string
                                  enum:
                                    - BLOCK_ID_FLAG_UNKNOWN
                                    - BLOCK_ID_FLAG_ABSENT
                                    - BLOCK_ID_FLAG_COMMIT
                                    - BLOCK_ID_FLAG_NIL
                                  default: BLOCK_ID_FLAG_UNKNOWN
                                  title: BlockIdFlag indicates which BlcokID the signature is for
                                validator_address:
                                  type: string
                                  format: byte
                                timestamp:
                                  type: string
                                  format: date-time
                                signature:
                                  type: string
                                  format: byte
                              description: CommitSig is a part of the Vote included in a Commit.
                        description: Commit contains the evidence that a block was committed by a set of
                          validators.
                  pagination:
                    description: pagination defines a pagination for the response.
                    type: object
                    properties:
                      next_key:
                        type: string
                        format: byte
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                      total:
                        type: string
                        format: uint64
                        title: >-
                          total is total number of results available if
                          PageRequest.count_total

                          was set, its value is undefined otherwise
                description: >-
                  GetBlockWithTxsResponse is the response type for the
                  Service.GetBlockWithTxs method.


                  Since: cosmos-sdk 0.45.2
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: height
          description: height is the height of the block to query.
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key should

            be set.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in UIs.

            count_total is only respected when offset is used. It is ignored when key

            is set.
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - gRPC Gateway API
  "/cosmos/tx/v1beta1/txs/{hash}":
    get:
      summary: GetTx fetches a tx by hash.
      operationId: GetTx_6DDRF_CTAGC_MKVVB_O0N8F
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  tx:
                    type: object
                    properties:
                      body:
                        title: body is the processable content of the transaction
                        type: object
                        properties:
                          messages:
                            type: array
                            items:
                              type: object
                              properties:
                                type_url:
                                  type: string
                                value:
                                  type: string
                                  format: byte
                            description: >-
                              messages is a list of messages to be executed. The
                              required signers of

                              those messages define the number and order of elements in AuthInfo's

                              signer_infos and Tx's signatures. Each required signer address is added to

                              the list only the first time it occurs.

                              By convention, the first required signer (usually from the first message)

                              is referred to as the primary signer and pays the fee for the whole

                              transaction.
                          memo:
                            type: string
                            description: >-
                              memo is any arbitrary note/comment to be added to
                              the transaction.

                              WARNING: in clients, any publicly exposed text should not be called memo,

                              but should be called `note` instead (see https://github.com/cosmos/cosmos-sdk/issues/9122).
                          timeout_height:
                            type: string
                            format: uint64
                            title: >-
                              timeout is the block height after which this
                              transaction will not

                              be processed by the chain
                          extension_options:
                            type: array
                            items:
                              type: object
                              properties:
                                type_url:
                                  type: string
                                value:
                                  type: string
                                  format: byte
                            title: >-
                              extension_options are arbitrary options that can
                              be added by chains

                              when the default options are not sufficient. If any of these are present

                              and can't be handled, the transaction will be rejected
                          non_critical_extension_options:
                            type: array
                            items:
                              type: object
                              properties:
                                type_url:
                                  type: string
                                value:
                                  type: string
                                  format: byte
                            title: >-
                              extension_options are arbitrary options that can
                              be added by chains

                              when the default options are not sufficient. If any of these are present

                              and can't be handled, they will be ignored
                        description: TxBody is the body of a transaction that all signers sign over.
                      auth_info:
                        title: >-
                          auth_info is the authorization related content of the
                          transaction,

                          specifically signers, signer modes and fee
                        type: object
                        properties:
                          signer_infos:
                            type: array
                            items:
                              type: object
                              properties:
                                public_key:
                                  type: object
                                  properties:
                                    type_url:
                                      type: string
                                    value:
                                      type: string
                                      format: byte
                                  description: >-
                                    public_key is the public key of the signer.
                                    It is optional for accounts

                                    that already exist in state. If unset, the verifier can use the required \

                                    signer address for this position and lookup the public key.
                                mode_info:
                                  title: >-
                                    mode_info describes the signing mode of the
                                    signer and is a nested

                                    structure to support nested multisig pubkey's
                                  type: object
                                  properties:
                                    single:
                                      title: single represents a single signer
                                      type: object
                                      properties:
                                        mode:
                                          title: mode is the signing mode of the single signer
                                          type: string
                                          enum:
                                            - SIGN_MODE_UNSPECIFIED
                                            - SIGN_MODE_DIRECT
                                            - SIGN_MODE_TEXTUAL
                                            - SIGN_MODE_LEGACY_AMINO_JSON
                                            - SIGN_MODE_EIP_191
                                          default: SIGN_MODE_UNSPECIFIED
                                          description: >-
                                            SignMode represents a signing mode
                                            with its own security guarantees.

                                             - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
                                            rejected
                                             - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
                                            verified with raw bytes from Tx
                                             - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
                                            human-readable textual representation on top of the binary representation

                                            from SIGN_MODE_DIRECT
                                             - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
                                            Amino JSON and will be removed in the future
                                             - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
                                            SDK. Ref: https://eips.ethereum.org/EIPS/eip-191


                                            Currently, SIGN_MODE_EIP_191 is registered as a SignMode enum variant,

                                            but is not implemented on the SDK by default. To enable EIP-191, you need

                                            to pass a custom `TxConfig` that has an implementation of

                                            `SignModeHandler` for EIP-191. The SDK may decide to fully support

                                            EIP-191 in the future.


                                            Since: cosmos-sdk 0.45.2
                                    multi:
                                      title: multi represents a nested multisig signer
                                      type: object
                                      properties:
                                        bitarray:
                                          title: bitarray specifies which keys within the multisig are signing
                                          type: object
                                          properties:
                                            extra_bits_stored:
                                              type: integer
                                              format: int64
                                            elems:
                                              type: string
                                              format: byte
                                          description: >-
                                            CompactBitArray is an implementation
                                            of a space efficient bit array.

                                            This is used to ensure that the encoded data takes up a minimal amount of

                                            space after proto encoding.

                                            This is not thread safe, and is not intended for concurrent usage.
                                        mode_infos:
                                          type: array
                                          items: {}
                                          title: >-
                                            mode_infos is the corresponding
                                            modes of the signers of the multisig

                                            which could include nested multisig public keys
                                  description: ModeInfo describes the signing mode of a single or nested multisig
                                    signer.
                                sequence:
                                  type: string
                                  format: uint64
                                  description: >-
                                    sequence is the sequence of the account,
                                    which describes the

                                    number of committed transactions signed by a given address. It is used to

                                    prevent replay attacks.
                              description: >-
                                SignerInfo describes the public key and signing
                                mode of a single top-level

                                signer.
                            description: >-
                              signer_infos defines the signing modes for the
                              required signers. The number

                              and order of elements must match the required signers from TxBody's

                              messages. The first element is the primary signer and the one which pays

                              the fee.
                          fee:
                            description: >-
                              Fee is the fee and gas limit for the transaction.
                              The first signer is the

                              primary signer and the one which pays the fee. The fee can be calculated

                              based on the cost of evaluating the body and doing signature verification

                              of the signers. This can be estimated via simulation.
                            type: object
                            properties:
                              amount:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    denom:
                                      type: string
                                    amount:
                                      type: string
                                  description: >-
                                    Coin defines a token with a denomination and
                                    an amount.


                                    NOTE: The amount field is an Int which implements the custom method

                                    signatures required by gogoproto.
                                title: amount is the amount of coins to be paid as a fee
                              gas_limit:
                                type: string
                                format: uint64
                                title: >-
                                  gas_limit is the maximum gas that can be used
                                  in transaction processing

                                  before an out of gas error occurs
                              payer:
                                type: string
                                description: >-
                                  if unset, the first signer is responsible for
                                  paying the fees. If set, the specified account
                                  must pay the fees.

                                  the payer must be a tx signer (and thus have signed this field in AuthInfo).

                                  setting this field does *not* change the ordering of required signers for the transaction.
                              granter:
                                type: string
                                title: >-
                                  if set, the fee payer (either the first signer
                                  or the value of the payer field) requests that
                                  a fee grant be used

                                  to pay fees instead of the fee payer's own balance. If an appropriate fee grant does not exist or the chain does

                                  not support fee grants, this will fail
                        description: >-
                          AuthInfo describes the fee and signer modes that are
                          used to sign a

                          transaction.
                      signatures:
                        type: array
                        items:
                          type: string
                          format: byte
                        description: >-
                          signatures is a list of signatures that matches the
                          length and order of

                          AuthInfo's signer_infos to allow connecting signature meta information like

                          public key and signing mode by position.
                    description: Tx is the standard type used for broadcasting transactions.
                  tx_response:
                    type: object
                    properties:
                      height:
                        type: string
                        format: int64
                        title: The block height
                      txhash:
                        type: string
                        description: The transaction hash.
                      codespace:
                        type: string
                        title: Namespace for the Code
                      code:
                        type: integer
                        format: int64
                        description: Response code.
                      data:
                        type: string
                        description: Result bytes, if any.
                      raw_log:
                        type: string
                        description: >-
                          The output of the application's logger (raw string).
                          May be

                          non-deterministic.
                      logs:
                        type: array
                        items:
                          type: object
                          properties:
                            msg_index:
                              type: integer
                              format: int64
                            log:
                              type: string
                            events:
                              type: array
                              items:
                                type: object
                                properties:
                                  type:
                                    type: string
                                  attributes:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        key:
                                          type: string
                                        value:
                                          type: string
                                      description: >-
                                        Attribute defines an attribute wrapper
                                        where the key and value are

                                        strings instead of raw bytes.
                                description: >-
                                  StringEvent defines en Event object wrapper
                                  where all the attributes

                                  contain key/value pairs that are strings instead of raw bytes.
                              description: >-
                                Events contains a slice of Event objects that
                                were emitted during some

                                execution.
                          description: ABCIMessageLog defines a structure containing an indexed tx ABCI
                            message log.
                        description: The output of the application's logger (typed). May be
                          non-deterministic.
                      info:
                        type: string
                        description: Additional information. May be non-deterministic.
                      gas_wanted:
                        type: string
                        format: int64
                        description: Amount of gas requested for transaction.
                      gas_used:
                        type: string
                        format: int64
                        description: Amount of gas consumed by transaction.
                      tx:
                        type: object
                        properties:
                          type_url:
                            type: string
                          value:
                            type: string
                            format: byte
                        description: The request transaction bytes.
                      timestamp:
                        type: string
                        description: >-
                          Time of the previous block. For heights > 1, it's the
                          weighted median of

                          the timestamps of the valid votes in the block.LastCommit. For height == 1,

                          it's genesis time.
                      events:
                        type: array
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                            attributes:
                              type: array
                              items:
                                type: object
                                properties:
                                  key:
                                    type: string
                                    format: byte
                                  value:
                                    type: string
                                    format: byte
                                  index:
                                    type: boolean
                                description: EventAttribute is a single key-value pair, associated with an
                                  event.
                          description: >-
                            Event allows application developers to attach
                            additional information to

                            ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.

                            Later, transactions may be queried using these events.
                        description: >-
                          Events defines all the events emitted by processing a
                          transaction. Note,

                          these events include those emitted by processing all the messages and those

                          emitted from the ante handler. Whereas Logs contains the events, with

                          additional metadata, emitted only by processing the messages.


                          Since: cosmos-sdk 0.42.11, 0.44.5, 0.45
                    description: >-
                      TxResponse defines a structure containing relevant tx data
                      and metadata. The

                      tags are stringified and the log is JSON decoded.
                description: GetTxResponse is the response type for the Service.GetTx method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: hash
          description: hash is the tx hash to query, encoded as a hex string.
          in: path
          required: true
          schema:
            type: string
      tags:
        - gRPC Gateway API
  /cosmos/params/v1beta1/params:
    get:
      summary: |-
        Params queries a specific parameter of a module, given its subspace and
        key.
      operationId: Params_O859C_A2YUT_MQGVP_APP8N
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  param:
                    description: param defines the queried parameter.
                    type: object
                    properties:
                      subspace:
                        type: string
                      key:
                        type: string
                      value:
                        type: string
                description: QueryParamsResponse is response type for the Query/Params RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: subspace
          description: subspace defines the module to query the parameter for.
          in: query
          required: false
          schema:
            type: string
        - name: key
          description: key defines the key of the parameter in the subspace.
          in: query
          required: false
          schema:
            type: string
      tags:
        - gRPC Gateway API
  /cosmos/evidence/v1beta1/evidence:
    get:
      summary: AllEvidence queries all evidence.
      operationId: AllEvidence_HXQVR_A33CR_A6BYY_6TVJ1
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  evidence:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
                    description: evidence returns all evidences.
                  pagination:
                    description: pagination defines the pagination in the response.
                    type: object
                    properties:
                      next_key:
                        type: string
                        format: byte
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                      total:
                        type: string
                        format: uint64
                        title: >-
                          total is total number of results available if
                          PageRequest.count_total

                          was set, its value is undefined otherwise
                description: >-
                  QueryAllEvidenceResponse is the response type for the
                  Query/AllEvidence RPC

                  method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key should

            be set.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in UIs.

            count_total is only respected when offset is used. It is ignored when key

            is set.
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - gRPC Gateway API
  "/cosmos/evidence/v1beta1/evidence/{evidence_hash}":
    get:
      summary: Evidence queries evidence based on evidence hash.
      operationId: Evidence_XK3BN_13C9U_V73Z8_85LA3
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  evidence:
                    type: object
                    properties:
                      type_url:
                        type: string
                      value:
                        type: string
                        format: byte
                    description: evidence returns the requested evidence.
                description: QueryEvidenceResponse is the response type for the Query/Evidence
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: evidence_hash
          description: evidence_hash defines the hash of the requested evidence.
          in: path
          required: true
          schema:
            type: string
            format: byte
      tags:
        - gRPC Gateway API
  "/ibc/apps/interchain_accounts/controller/v1/owners/{owner}/connections/{connection_id}":
    get:
      summary: InterchainAccount returns the interchain account address for a given
        owner address on a given connection
      operationId: InterchainAccount_JJURK_XLUG0
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  address:
                    type: string
                description: QueryInterchainAccountResponse the response type for the
                  Query/InterchainAccount RPC method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
        - name: connection_id
          in: path
          required: true
          schema:
            type: string
      tags:
        - gRPC Gateway API
  /ibc/apps/interchain_accounts/controller/v1/params:
    get:
      summary: Params queries all parameters of the ICA controller submodule.
      operationId: Params_AMIPO_7L6RR
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  params:
                    description: params defines the parameters of the module.
                    type: object
                    properties:
                      controller_enabled:
                        type: boolean
                        description: controller_enabled enables or disables the controller submodule.
                description: QueryParamsResponse is the response type for the Query/Params RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      tags:
        - gRPC Gateway API
  /ibc/core/channel/v1/channels:
    get:
      summary: Channels queries all the IBC channels of a chain.
      operationId: Channels_1U1O0_BA5YH
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  channels:
                    type: array
                    items:
                      type: object
                      properties:
                        state:
                          title: current state of the channel end
                          type: string
                          enum:
                            - STATE_UNINITIALIZED_UNSPECIFIED
                            - STATE_INIT
                            - STATE_TRYOPEN
                            - STATE_OPEN
                            - STATE_CLOSED
                          default: STATE_UNINITIALIZED_UNSPECIFIED
                          description: >-
                            State defines if a channel is in one of the
                            following states:

                            CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.

                             - STATE_UNINITIALIZED_UNSPECIFIED: Default State
                             - STATE_INIT: A channel has just started the opening handshake.
                             - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
                             - STATE_OPEN: A channel has completed the handshake. Open channels are
                            ready to send and receive packets.
                             - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
                            packets.
                        ordering:
                          title: whether the channel is ordered or unordered
                          type: string
                          enum:
                            - ORDER_NONE_UNSPECIFIED
                            - ORDER_UNORDERED
                            - ORDER_ORDERED
                          default: ORDER_NONE_UNSPECIFIED
                          description: >-
                            - ORDER_NONE_UNSPECIFIED: zero-value for channel
                            ordering
                             - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
                            which they were sent.
                             - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
                        counterparty:
                          title: counterparty channel end
                          type: object
                          properties:
                            port_id:
                              type: string
                              description: port on the counterparty chain which owns the other end of the
                                channel.
                            channel_id:
                              type: string
                              title: channel end on the counterparty chain
                        connection_hops:
                          type: array
                          items:
                            type: string
                          title: >-
                            list of connection identifiers, in order, along
                            which packets sent on

                            this channel will travel
                        version:
                          type: string
                          title: opaque channel version, which is agreed upon during the handshake
                        port_id:
                          type: string
                          title: port identifier
                        channel_id:
                          type: string
                          title: channel identifier
                      description: >-
                        IdentifiedChannel defines a channel with additional port
                        and channel

                        identifier fields.
                    description: list of stored channels of the chain.
                  pagination:
                    title: pagination response
                    type: object
                    properties:
                      next_key:
                        type: string
                        format: byte
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                      total:
                        type: string
                        format: uint64
                        title: >-
                          total is total number of results available if
                          PageRequest.count_total

                          was set, its value is undefined otherwise
                    description: >-
                      PageResponse is to be embedded in gRPC response messages
                      where the

                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
                  height:
                    title: query block height
                    type: object
                    properties:
                      revision_number:
                        type: string
                        format: uint64
                        title: the revision that the client is currently on
                      revision_height:
                        type: string
                        format: uint64
                        title: the height within the given revision
                    description: >-
                      Normally the RevisionHeight is incremented at each height
                      while keeping

                      RevisionNumber the same. However some consensus algorithms may choose to

                      reset the height in certain conditions e.g. hard forks, state-machine

                      breaking changes In these cases, the RevisionNumber is incremented so that

                      height continues to be monitonically increasing even as the RevisionHeight

                      gets reset
                description: QueryChannelsResponse is the response type for the Query/Channels
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key should

            be set.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in UIs.

            count_total is only respected when offset is used. It is ignored when key

            is set.
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - gRPC Gateway API
  "/ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}":
    get:
      summary: Channel queries an IBC Channel.
      operationId: Channel_5OMB2_T3LL6
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  channel:
                    title: channel associated with the request identifiers
                    type: object
                    properties:
                      state:
                        title: current state of the channel end
                        type: string
                        enum:
                          - STATE_UNINITIALIZED_UNSPECIFIED
                          - STATE_INIT
                          - STATE_TRYOPEN
                          - STATE_OPEN
                          - STATE_CLOSED
                        default: STATE_UNINITIALIZED_UNSPECIFIED
                        description: >-
                          State defines if a channel is in one of the following
                          states:

                          CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.

                           - STATE_UNINITIALIZED_UNSPECIFIED: Default State
                           - STATE_INIT: A channel has just started the opening handshake.
                           - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
                           - STATE_OPEN: A channel has completed the handshake. Open channels are
                          ready to send and receive packets.
                           - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
                          packets.
                      ordering:
                        title: whether the channel is ordered or unordered
                        type: string
                        enum:
                          - ORDER_NONE_UNSPECIFIED
                          - ORDER_UNORDERED
                          - ORDER_ORDERED
                        default: ORDER_NONE_UNSPECIFIED
                        description: >-
                          - ORDER_NONE_UNSPECIFIED: zero-value for channel
                          ordering
                           - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
                          which they were sent.
                           - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
                      counterparty:
                        title: counterparty channel end
                        type: object
                        properties:
                          port_id:
                            type: string
                            description: port on the counterparty chain which owns the other end of the
                              channel.
                          channel_id:
                            type: string
                            title: channel end on the counterparty chain
                      connection_hops:
                        type: array
                        items:
                          type: string
                        title: >-
                          list of connection identifiers, in order, along which
                          packets sent on

                          this channel will travel
                      version:
                        type: string
                        title: opaque channel version, which is agreed upon during the handshake
                    description: >-
                      Channel defines pipeline for exactly-once packet delivery
                      between specific

                      modules on separate blockchains, which has at least one end capable of

                      sending packets and one end capable of receiving packets.
                  proof:
                    type: string
                    format: byte
                    title: merkle proof of existence
                  proof_height:
                    title: height at which the proof was retrieved
                    type: object
                    properties:
                      revision_number:
                        type: string
                        format: uint64
                        title: the revision that the client is currently on
                      revision_height:
                        type: string
                        format: uint64
                        title: the height within the given revision
                    description: >-
                      Normally the RevisionHeight is incremented at each height
                      while keeping

                      RevisionNumber the same. However some consensus algorithms may choose to

                      reset the height in certain conditions e.g. hard forks, state-machine

                      breaking changes In these cases, the RevisionNumber is incremented so that

                      height continues to be monitonically increasing even as the RevisionHeight

                      gets reset
                description: >-
                  QueryChannelResponse is the response type for the
                  Query/Channel RPC method.

                  Besides the Channel end, it includes a proof and the height from which the

                  proof was retrieved.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: channel_id
          description: channel unique identifier
          in: path
          required: true
          schema:
            type: string
        - name: port_id
          description: port unique identifier
          in: path
          required: true
          schema:
            type: string
      tags:
        - gRPC Gateway API
  "/ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/client_state":
    get:
      summary: >-
        ChannelClientState queries for the client state for the channel
        associated

        with the provided channel identifiers.
      operationId: ChannelClientState_C4QB6_MV57V
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  identified_client_state:
                    title: client state associated with the channel
                    type: object
                    properties:
                      client_id:
                        type: string
                        title: client identifier
                      client_state:
                        type: object
                        properties:
                          type_url:
                            type: string
                          value:
                            type: string
                            format: byte
                        title: client state
                    description: >-
                      IdentifiedClientState defines a client state with an
                      additional client

                      identifier field.
                  proof:
                    type: string
                    format: byte
                    title: merkle proof of existence
                  proof_height:
                    title: height at which the proof was retrieved
                    type: object
                    properties:
                      revision_number:
                        type: string
                        format: uint64
                        title: the revision that the client is currently on
                      revision_height:
                        type: string
                        format: uint64
                        title: the height within the given revision
                    description: >-
                      Normally the RevisionHeight is incremented at each height
                      while keeping

                      RevisionNumber the same. However some consensus algorithms may choose to

                      reset the height in certain conditions e.g. hard forks, state-machine

                      breaking changes In these cases, the RevisionNumber is incremented so that

                      height continues to be monitonically increasing even as the RevisionHeight

                      gets reset
                title: |-
                  QueryChannelClientStateResponse is the Response type for the
                  Query/QueryChannelClientState RPC method
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: channel_id
          description: channel unique identifier
          in: path
          required: true
          schema:
            type: string
        - name: port_id
          description: port unique identifier
          in: path
          required: true
          schema:
            type: string
      tags:
        - gRPC Gateway API
  "/ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/consensus_state/revision/{revision_number}/height/{revision_height}":
    get:
      summary: |-
        ChannelConsensusState queries for the consensus state for the channel
        associated with the provided channel identifiers.
      operationId: ChannelConsensusState_4GWWF_SBJG6
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  consensus_state:
                    type: object
                    properties:
                      type_url:
                        type: string
                      value:
                        type: string
                        format: byte
                    title: consensus state associated with the channel
                  client_id:
                    type: string
                    title: client ID associated with the consensus state
                  proof:
                    type: string
                    format: byte
                    title: merkle proof of existence
                  proof_height:
                    title: height at which the proof was retrieved
                    type: object
                    properties:
                      revision_number:
                        type: string
                        format: uint64
                        title: the revision that the client is currently on
                      revision_height:
                        type: string
                        format: uint64
                        title: the height within the given revision
                    description: >-
                      Normally the RevisionHeight is incremented at each height
                      while keeping

                      RevisionNumber the same. However some consensus algorithms may choose to

                      reset the height in certain conditions e.g. hard forks, state-machine

                      breaking changes In these cases, the RevisionNumber is incremented so that

                      height continues to be monitonically increasing even as the RevisionHeight

                      gets reset
                title: |-
                  QueryChannelClientStateResponse is the Response type for the
                  Query/QueryChannelClientState RPC method
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: channel_id
          description: channel unique identifier
          in: path
          required: true
          schema:
            type: string
        - name: port_id
          description: port unique identifier
          in: path
          required: true
          schema:
            type: string
        - name: revision_number
          description: revision number of the consensus state
          in: path
          required: true
          schema:
            type: string
            format: uint64
        - name: revision_height
          description: revision height of the consensus state
          in: path
          required: true
          schema:
            type: string
            format: uint64
      tags:
        - gRPC Gateway API
  "/ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/next_sequence":
    get:
      summary: NextSequenceReceive returns the next receive sequence for a given
        channel.
      operationId: NextSequenceReceive_D7ND4_IML2K
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  next_sequence_receive:
                    type: string
                    format: uint64
                    title: next sequence receive number
                  proof:
                    type: string
                    format: byte
                    title: merkle proof of existence
                  proof_height:
                    title: height at which the proof was retrieved
                    type: object
                    properties:
                      revision_number:
                        type: string
                        format: uint64
                        title: the revision that the client is currently on
                      revision_height:
                        type: string
                        format: uint64
                        title: the height within the given revision
                    description: >-
                      Normally the RevisionHeight is incremented at each height
                      while keeping

                      RevisionNumber the same. However some consensus algorithms may choose to

                      reset the height in certain conditions e.g. hard forks, state-machine

                      breaking changes In these cases, the RevisionNumber is incremented so that

                      height continues to be monitonically increasing even as the RevisionHeight

                      gets reset
                title: |-
                  QuerySequenceResponse is the request type for the
                  Query/QueryNextSequenceReceiveResponse RPC method
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: channel_id
          description: channel unique identifier
          in: path
          required: true
          schema:
            type: string
        - name: port_id
          description: port unique identifier
          in: path
          required: true
          schema:
            type: string
      tags:
        - gRPC Gateway API
  "/ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_acknowledgements":
    get:
      summary: >-
        PacketAcknowledgements returns all the packet acknowledgements
        associated

        with a channel.
      operationId: PacketAcknowledgements_6MWQM_5Z7XR
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  acknowledgements:
                    type: array
                    items:
                      type: object
                      properties:
                        port_id:
                          type: string
                          description: channel port identifier.
                        channel_id:
                          type: string
                          description: channel unique identifier.
                        sequence:
                          type: string
                          format: uint64
                          description: packet sequence.
                        data:
                          type: string
                          format: byte
                          description: embedded data that represents packet state.
                      description: >-
                        PacketState defines the generic type necessary to
                        retrieve and store

                        packet commitments, acknowledgements, and receipts.

                        Caller is responsible for knowing the context necessary to interpret this

                        state as a commitment, acknowledgement, or a receipt.
                  pagination:
                    title: pagination response
                    type: object
                    properties:
                      next_key:
                        type: string
                        format: byte
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                      total:
                        type: string
                        format: uint64
                        title: >-
                          total is total number of results available if
                          PageRequest.count_total

                          was set, its value is undefined otherwise
                    description: >-
                      PageResponse is to be embedded in gRPC response messages
                      where the

                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
                  height:
                    title: query block height
                    type: object
                    properties:
                      revision_number:
                        type: string
                        format: uint64
                        title: the revision that the client is currently on
                      revision_height:
                        type: string
                        format: uint64
                        title: the height within the given revision
                    description: >-
                      Normally the RevisionHeight is incremented at each height
                      while keeping

                      RevisionNumber the same. However some consensus algorithms may choose to

                      reset the height in certain conditions e.g. hard forks, state-machine

                      breaking changes In these cases, the RevisionNumber is incremented so that

                      height continues to be monitonically increasing even as the RevisionHeight

                      gets reset
                title: |-
                  QueryPacketAcknowledgemetsResponse is the request type for the
                  Query/QueryPacketAcknowledgements RPC method
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: channel_id
          description: channel unique identifier
          in: path
          required: true
          schema:
            type: string
        - name: port_id
          description: port unique identifier
          in: path
          required: true
          schema:
            type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key should

            be set.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in UIs.

            count_total is only respected when offset is used. It is ignored when key

            is set.
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          schema:
            type: boolean
        - name: packet_commitment_sequences
          description: list of packet sequences.
          in: query
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
              format: uint64
      tags:
        - gRPC Gateway API
  "/ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_acks/{sequence}":
    get:
      summary: PacketAcknowledgement queries a stored packet acknowledgement hash.
      operationId: PacketAcknowledgement_O87IK_Q61CZ
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  acknowledgement:
                    type: string
                    format: byte
                    title: packet associated with the request fields
                  proof:
                    type: string
                    format: byte
                    title: merkle proof of existence
                  proof_height:
                    title: height at which the proof was retrieved
                    type: object
                    properties:
                      revision_number:
                        type: string
                        format: uint64
                        title: the revision that the client is currently on
                      revision_height:
                        type: string
                        format: uint64
                        title: the height within the given revision
                    description: >-
                      Normally the RevisionHeight is incremented at each height
                      while keeping

                      RevisionNumber the same. However some consensus algorithms may choose to

                      reset the height in certain conditions e.g. hard forks, state-machine

                      breaking changes In these cases, the RevisionNumber is incremented so that

                      height continues to be monitonically increasing even as the RevisionHeight

                      gets reset
                title: >-
                  QueryPacketAcknowledgementResponse defines the client query
                  response for a

                  packet which also includes a proof and the height from which the

                  proof was retrieved
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: channel_id
          description: channel unique identifier
          in: path
          required: true
          schema:
            type: string
        - name: port_id
          description: port unique identifier
          in: path
          required: true
          schema:
            type: string
        - name: sequence
          description: packet sequence
          in: path
          required: true
          schema:
            type: string
            format: uint64
      tags:
        - gRPC Gateway API
  "/ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_commitments":
    get:
      summary: |-
        PacketCommitments returns all the packet commitments hashes associated
        with a channel.
      operationId: PacketCommitments_THFZT_ND48R
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  commitments:
                    type: array
                    items:
                      type: object
                      properties:
                        port_id:
                          type: string
                          description: channel port identifier.
                        channel_id:
                          type: string
                          description: channel unique identifier.
                        sequence:
                          type: string
                          format: uint64
                          description: packet sequence.
                        data:
                          type: string
                          format: byte
                          description: embedded data that represents packet state.
                      description: >-
                        PacketState defines the generic type necessary to
                        retrieve and store

                        packet commitments, acknowledgements, and receipts.

                        Caller is responsible for knowing the context necessary to interpret this

                        state as a commitment, acknowledgement, or a receipt.
                  pagination:
                    title: pagination response
                    type: object
                    properties:
                      next_key:
                        type: string
                        format: byte
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                      total:
                        type: string
                        format: uint64
                        title: >-
                          total is total number of results available if
                          PageRequest.count_total

                          was set, its value is undefined otherwise
                    description: >-
                      PageResponse is to be embedded in gRPC response messages
                      where the

                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
                  height:
                    title: query block height
                    type: object
                    properties:
                      revision_number:
                        type: string
                        format: uint64
                        title: the revision that the client is currently on
                      revision_height:
                        type: string
                        format: uint64
                        title: the height within the given revision
                    description: >-
                      Normally the RevisionHeight is incremented at each height
                      while keeping

                      RevisionNumber the same. However some consensus algorithms may choose to

                      reset the height in certain conditions e.g. hard forks, state-machine

                      breaking changes In these cases, the RevisionNumber is incremented so that

                      height continues to be monitonically increasing even as the RevisionHeight

                      gets reset
                title: |-
                  QueryPacketCommitmentsResponse is the request type for the
                  Query/QueryPacketCommitments RPC method
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: channel_id
          description: channel unique identifier
          in: path
          required: true
          schema:
            type: string
        - name: port_id
          description: port unique identifier
          in: path
          required: true
          schema:
            type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key should

            be set.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in UIs.

            count_total is only respected when offset is used. It is ignored when key

            is set.
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - gRPC Gateway API
  "/ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_commitments/{packet_ack_sequences}/unreceived_acks":
    get:
      summary: >-
        UnreceivedAcks returns all the unreceived IBC acknowledgements
        associated

        with a channel and sequences.
      operationId: UnreceivedAcks_JN7QN_OT4YZ
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  sequences:
                    type: array
                    items:
                      type: string
                      format: uint64
                    title: list of unreceived acknowledgement sequences
                  height:
                    title: query block height
                    type: object
                    properties:
                      revision_number:
                        type: string
                        format: uint64
                        title: the revision that the client is currently on
                      revision_height:
                        type: string
                        format: uint64
                        title: the height within the given revision
                    description: >-
                      Normally the RevisionHeight is incremented at each height
                      while keeping

                      RevisionNumber the same. However some consensus algorithms may choose to

                      reset the height in certain conditions e.g. hard forks, state-machine

                      breaking changes In these cases, the RevisionNumber is incremented so that

                      height continues to be monitonically increasing even as the RevisionHeight

                      gets reset
                title: |-
                  QueryUnreceivedAcksResponse is the response type for the
                  Query/UnreceivedAcks RPC method
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: channel_id
          description: channel unique identifier
          in: path
          required: true
          schema:
            type: string
        - name: port_id
          description: port unique identifier
          in: path
          required: true
          schema:
            type: string
        - name: packet_ack_sequences
          description: list of acknowledgement sequences
          in: path
          required: true
          style: simple
          schema:
            type: array
            items:
              type: string
              format: uint64
            minItems: 1
      tags:
        - gRPC Gateway API
  "/ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_commitments/{packet_commitment_sequences}/unreceived_packets":
    get:
      summary: >-
        UnreceivedPackets returns all the unreceived IBC packets associated with
        a

        channel and sequences.
      operationId: UnreceivedPackets_WID20_T3THR
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  sequences:
                    type: array
                    items:
                      type: string
                      format: uint64
                    title: list of unreceived packet sequences
                  height:
                    title: query block height
                    type: object
                    properties:
                      revision_number:
                        type: string
                        format: uint64
                        title: the revision that the client is currently on
                      revision_height:
                        type: string
                        format: uint64
                        title: the height within the given revision
                    description: >-
                      Normally the RevisionHeight is incremented at each height
                      while keeping

                      RevisionNumber the same. However some consensus algorithms may choose to

                      reset the height in certain conditions e.g. hard forks, state-machine

                      breaking changes In these cases, the RevisionNumber is incremented so that

                      height continues to be monitonically increasing even as the RevisionHeight

                      gets reset
                title: |-
                  QueryUnreceivedPacketsResponse is the response type for the
                  Query/UnreceivedPacketCommitments RPC method
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: channel_id
          description: channel unique identifier
          in: path
          required: true
          schema:
            type: string
        - name: port_id
          description: port unique identifier
          in: path
          required: true
          schema:
            type: string
        - name: packet_commitment_sequences
          description: list of packet sequences
          in: path
          required: true
          style: simple
          schema:
            type: array
            items:
              type: string
              format: uint64
            minItems: 1
      tags:
        - gRPC Gateway API
  "/ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_commitments/{sequence}":
    get:
      summary: PacketCommitment queries a stored packet commitment hash.
      operationId: PacketCommitment_F3YPY_XZ54E
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  commitment:
                    type: string
                    format: byte
                    title: packet associated with the request fields
                  proof:
                    type: string
                    format: byte
                    title: merkle proof of existence
                  proof_height:
                    title: height at which the proof was retrieved
                    type: object
                    properties:
                      revision_number:
                        type: string
                        format: uint64
                        title: the revision that the client is currently on
                      revision_height:
                        type: string
                        format: uint64
                        title: the height within the given revision
                    description: >-
                      Normally the RevisionHeight is incremented at each height
                      while keeping

                      RevisionNumber the same. However some consensus algorithms may choose to

                      reset the height in certain conditions e.g. hard forks, state-machine

                      breaking changes In these cases, the RevisionNumber is incremented so that

                      height continues to be monitonically increasing even as the RevisionHeight

                      gets reset
                title: >-
                  QueryPacketCommitmentResponse defines the client query
                  response for a packet

                  which also includes a proof and the height from which the proof was

                  retrieved
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: channel_id
          description: channel unique identifier
          in: path
          required: true
          schema:
            type: string
        - name: port_id
          description: port unique identifier
          in: path
          required: true
          schema:
            type: string
        - name: sequence
          description: packet sequence
          in: path
          required: true
          schema:
            type: string
            format: uint64
      tags:
        - gRPC Gateway API
  "/ibc/core/channel/v1/channels/{channel_id}/ports/{port_id}/packet_receipts/{sequence}":
    get:
      summary: >-
        PacketReceipt queries if a given packet sequence has been received on
        the

        queried chain
      operationId: PacketReceipt_URTC3_TAJ1X
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  received:
                    type: boolean
                    title: success flag for if receipt exists
                  proof:
                    type: string
                    format: byte
                    title: merkle proof of existence
                  proof_height:
                    title: height at which the proof was retrieved
                    type: object
                    properties:
                      revision_number:
                        type: string
                        format: uint64
                        title: the revision that the client is currently on
                      revision_height:
                        type: string
                        format: uint64
                        title: the height within the given revision
                    description: >-
                      Normally the RevisionHeight is incremented at each height
                      while keeping

                      RevisionNumber the same. However some consensus algorithms may choose to

                      reset the height in certain conditions e.g. hard forks, state-machine

                      breaking changes In these cases, the RevisionNumber is incremented so that

                      height continues to be monitonically increasing even as the RevisionHeight

                      gets reset
                title: >-
                  QueryPacketReceiptResponse defines the client query response
                  for a packet

                  receipt which also includes a proof, and the height from which the proof was

                  retrieved
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: channel_id
          description: channel unique identifier
          in: path
          required: true
          schema:
            type: string
        - name: port_id
          description: port unique identifier
          in: path
          required: true
          schema:
            type: string
        - name: sequence
          description: packet sequence
          in: path
          required: true
          schema:
            type: string
            format: uint64
      tags:
        - gRPC Gateway API
  "/ibc/core/channel/v1/connections/{connection}/channels":
    get:
      summary: |-
        ConnectionChannels queries all the channels associated with a connection
        end.
      operationId: ConnectionChannels_79ZWK_DA8FJ
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  channels:
                    type: array
                    items:
                      type: object
                      properties:
                        state:
                          title: current state of the channel end
                          type: string
                          enum:
                            - STATE_UNINITIALIZED_UNSPECIFIED
                            - STATE_INIT
                            - STATE_TRYOPEN
                            - STATE_OPEN
                            - STATE_CLOSED
                          default: STATE_UNINITIALIZED_UNSPECIFIED
                          description: >-
                            State defines if a channel is in one of the
                            following states:

                            CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.

                             - STATE_UNINITIALIZED_UNSPECIFIED: Default State
                             - STATE_INIT: A channel has just started the opening handshake.
                             - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
                             - STATE_OPEN: A channel has completed the handshake. Open channels are
                            ready to send and receive packets.
                             - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
                            packets.
                        ordering:
                          title: whether the channel is ordered or unordered
                          type: string
                          enum:
                            - ORDER_NONE_UNSPECIFIED
                            - ORDER_UNORDERED
                            - ORDER_ORDERED
                          default: ORDER_NONE_UNSPECIFIED
                          description: >-
                            - ORDER_NONE_UNSPECIFIED: zero-value for channel
                            ordering
                             - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
                            which they were sent.
                             - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
                        counterparty:
                          title: counterparty channel end
                          type: object
                          properties:
                            port_id:
                              type: string
                              description: port on the counterparty chain which owns the other end of the
                                channel.
                            channel_id:
                              type: string
                              title: channel end on the counterparty chain
                        connection_hops:
                          type: array
                          items:
                            type: string
                          title: >-
                            list of connection identifiers, in order, along
                            which packets sent on

                            this channel will travel
                        version:
                          type: string
                          title: opaque channel version, which is agreed upon during the handshake
                        port_id:
                          type: string
                          title: port identifier
                        channel_id:
                          type: string
                          title: channel identifier
                      description: >-
                        IdentifiedChannel defines a channel with additional port
                        and channel

                        identifier fields.
                    description: list of channels associated with a connection.
                  pagination:
                    title: pagination response
                    type: object
                    properties:
                      next_key:
                        type: string
                        format: byte
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                      total:
                        type: string
                        format: uint64
                        title: >-
                          total is total number of results available if
                          PageRequest.count_total

                          was set, its value is undefined otherwise
                    description: >-
                      PageResponse is to be embedded in gRPC response messages
                      where the

                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
                  height:
                    title: query block height
                    type: object
                    properties:
                      revision_number:
                        type: string
                        format: uint64
                        title: the revision that the client is currently on
                      revision_height:
                        type: string
                        format: uint64
                        title: the height within the given revision
                    description: >-
                      Normally the RevisionHeight is incremented at each height
                      while keeping

                      RevisionNumber the same. However some consensus algorithms may choose to

                      reset the height in certain conditions e.g. hard forks, state-machine

                      breaking changes In these cases, the RevisionNumber is incremented so that

                      height continues to be monitonically increasing even as the RevisionHeight

                      gets reset
                title: |-
                  QueryConnectionChannelsResponse is the Response type for the
                  Query/QueryConnectionChannels RPC method
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: connection
          description: connection unique identifier
          in: path
          required: true
          schema:
            type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key should

            be set.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in UIs.

            count_total is only respected when offset is used. It is ignored when key

            is set.
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - gRPC Gateway API
  /ibc/client/v1/params:
    get:
      summary: ClientParams queries all parameters of the ibc client.
      operationId: ClientParams_PBDXM_9T19M
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  params:
                    description: params defines the parameters of the module.
                    type: object
                    properties:
                      allowed_clients:
                        type: array
                        items:
                          type: string
                        description: allowed_clients defines the list of allowed client state types.
                description: >-
                  QueryClientParamsResponse is the response type for the
                  Query/ClientParams RPC

                  method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      tags:
        - gRPC Gateway API
  /ibc/core/client/v1/client_states:
    get:
      summary: ClientStates queries all the IBC light clients of a chain.
      operationId: ClientStates_A29HK_CHM59
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  client_states:
                    type: array
                    items:
                      type: object
                      properties:
                        client_id:
                          type: string
                          title: client identifier
                        client_state:
                          type: object
                          properties:
                            type_url:
                              type: string
                            value:
                              type: string
                              format: byte
                          title: client state
                      description: >-
                        IdentifiedClientState defines a client state with an
                        additional client

                        identifier field.
                    description: list of stored ClientStates of the chain.
                  pagination:
                    title: pagination response
                    type: object
                    properties:
                      next_key:
                        type: string
                        format: byte
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                      total:
                        type: string
                        format: uint64
                        title: >-
                          total is total number of results available if
                          PageRequest.count_total

                          was set, its value is undefined otherwise
                    description: >-
                      PageResponse is to be embedded in gRPC response messages
                      where the

                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
                description: >-
                  QueryClientStatesResponse is the response type for the
                  Query/ClientStates RPC

                  method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key should

            be set.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in UIs.

            count_total is only respected when offset is used. It is ignored when key

            is set.
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - gRPC Gateway API
  "/ibc/core/client/v1/client_states/{client_id}":
    get:
      summary: ClientState queries an IBC light client.
      operationId: ClientState_HHM72_PB53W
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  client_state:
                    type: object
                    properties:
                      type_url:
                        type: string
                      value:
                        type: string
                        format: byte
                    title: client state associated with the request identifier
                  proof:
                    type: string
                    format: byte
                    title: merkle proof of existence
                  proof_height:
                    title: height at which the proof was retrieved
                    type: object
                    properties:
                      revision_number:
                        type: string
                        format: uint64
                        title: the revision that the client is currently on
                      revision_height:
                        type: string
                        format: uint64
                        title: the height within the given revision
                    description: >-
                      Normally the RevisionHeight is incremented at each height
                      while keeping

                      RevisionNumber the same. However some consensus algorithms may choose to

                      reset the height in certain conditions e.g. hard forks, state-machine

                      breaking changes In these cases, the RevisionNumber is incremented so that

                      height continues to be monitonically increasing even as the RevisionHeight

                      gets reset
                description: >-
                  QueryClientStateResponse is the response type for the
                  Query/ClientState RPC

                  method. Besides the client state, it includes a proof and the height from

                  which the proof was retrieved.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: client_id
          description: client state unique identifier
          in: path
          required: true
          schema:
            type: string
      tags:
        - gRPC Gateway API
  "/ibc/core/client/v1/client_status/{client_id}":
    get:
      summary: Status queries the status of an IBC client.
      operationId: ClientStatus_X9VWD_5ANAF
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                description: >-
                  QueryClientStatusResponse is the response type for the
                  Query/ClientStatus RPC

                  method. It returns the current status of the IBC client.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: client_id
          description: client unique identifier
          in: path
          required: true
          schema:
            type: string
      tags:
        - gRPC Gateway API
  "/ibc/core/client/v1/consensus_states/{client_id}":
    get:
      summary: |-
        ConsensusStates queries all the consensus state associated with a given
        client.
      operationId: ConsensusStates_S2BJO_RJYME
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  consensus_states:
                    type: array
                    items:
                      type: object
                      properties:
                        height:
                          title: consensus state height
                          type: object
                          properties:
                            revision_number:
                              type: string
                              format: uint64
                              title: the revision that the client is currently on
                            revision_height:
                              type: string
                              format: uint64
                              title: the height within the given revision
                          description: >-
                            Normally the RevisionHeight is incremented at each
                            height while keeping

                            RevisionNumber the same. However some consensus algorithms may choose to

                            reset the height in certain conditions e.g. hard forks, state-machine

                            breaking changes In these cases, the RevisionNumber is incremented so that

                            height continues to be monitonically increasing even as the RevisionHeight

                            gets reset
                        consensus_state:
                          type: object
                          properties:
                            type_url:
                              type: string
                            value:
                              type: string
                              format: byte
                          title: consensus state
                      description: >-
                        ConsensusStateWithHeight defines a consensus state with
                        an additional height

                        field.
                    title: consensus states associated with the identifier
                  pagination:
                    title: pagination response
                    type: object
                    properties:
                      next_key:
                        type: string
                        format: byte
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                      total:
                        type: string
                        format: uint64
                        title: >-
                          total is total number of results available if
                          PageRequest.count_total

                          was set, its value is undefined otherwise
                    description: >-
                      PageResponse is to be embedded in gRPC response messages
                      where the

                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
                title: |-
                  QueryConsensusStatesResponse is the response type for the
                  Query/ConsensusStates RPC method
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: client_id
          description: client identifier
          in: path
          required: true
          schema:
            type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key should

            be set.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in UIs.

            count_total is only respected when offset is used. It is ignored when key

            is set.
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - gRPC Gateway API
  "/ibc/core/client/v1/consensus_states/{client_id}/heights":
    get:
      summary: ConsensusStateHeights queries the height of every consensus states
        associated with a given client.
      operationId: ConsensusStateHeights_376EP_PO41T
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  consensus_state_heights:
                    type: array
                    items:
                      type: object
                      properties:
                        revision_number:
                          type: string
                          format: uint64
                          title: the revision that the client is currently on
                        revision_height:
                          type: string
                          format: uint64
                          title: the height within the given revision
                      description: >-
                        Normally the RevisionHeight is incremented at each
                        height while keeping

                        RevisionNumber the same. However some consensus algorithms may choose to

                        reset the height in certain conditions e.g. hard forks, state-machine

                        breaking changes In these cases, the RevisionNumber is incremented so that

                        height continues to be monitonically increasing even as the RevisionHeight

                        gets reset
                      title: >-
                        Height is a monotonically increasing data type

                        that can be compared against another Height for the purposes of updating and

                        freezing clients
                    title: consensus state heights
                  pagination:
                    title: pagination response
                    type: object
                    properties:
                      next_key:
                        type: string
                        format: byte
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                      total:
                        type: string
                        format: uint64
                        title: >-
                          total is total number of results available if
                          PageRequest.count_total

                          was set, its value is undefined otherwise
                    description: >-
                      PageResponse is to be embedded in gRPC response messages
                      where the

                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
                title: >-
                  QueryConsensusStateHeightsResponse is the response type for
                  the

                  Query/ConsensusStateHeights RPC method
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: client_id
          description: client identifier
          in: path
          required: true
          schema:
            type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key should

            be set.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in UIs.

            count_total is only respected when offset is used. It is ignored when key

            is set.
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - gRPC Gateway API
  "/ibc/core/client/v1/consensus_states/{client_id}/revision/{revision_number}/height/{revision_height}":
    get:
      summary: >-
        ConsensusState queries a consensus state associated with a client state
        at

        a given height.
      operationId: ConsensusState_M2MTX_71ISD
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  consensus_state:
                    type: object
                    properties:
                      type_url:
                        type: string
                      value:
                        type: string
                        format: byte
                    title: consensus state associated with the client identifier at the given height
                  proof:
                    type: string
                    format: byte
                    title: merkle proof of existence
                  proof_height:
                    type: object
                    properties:
                      revision_number:
                        type: string
                        format: uint64
                        title: the revision that the client is currently on
                      revision_height:
                        type: string
                        format: uint64
                        title: the height within the given revision
                    description: >-
                      Normally the RevisionHeight is incremented at each height
                      while keeping

                      RevisionNumber the same. However some consensus algorithms may choose to

                      reset the height in certain conditions e.g. hard forks, state-machine

                      breaking changes In these cases, the RevisionNumber is incremented so that

                      height continues to be monitonically increasing even as the RevisionHeight

                      gets reset
                    title: >-
                      Height is a monotonically increasing data type

                      that can be compared against another Height for the purposes of updating and

                      freezing clients
                title: >-
                  QueryConsensusStateResponse is the response type for the
                  Query/ConsensusState

                  RPC method
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: client_id
          description: client identifier
          in: path
          required: true
          schema:
            type: string
        - name: revision_number
          description: consensus state revision number
          in: path
          required: true
          schema:
            type: string
            format: uint64
        - name: revision_height
          description: consensus state revision height
          in: path
          required: true
          schema:
            type: string
            format: uint64
        - name: latest_height
          description: >-
            latest_height overrrides the height field and queries the latest
            stored

            ConsensusState.
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - gRPC Gateway API
  /ibc/core/client/v1/upgraded_client_states:
    get:
      summary: UpgradedClientState queries an Upgraded IBC light client.
      operationId: UpgradedClientState_7M6UO_JLSFW
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  upgraded_client_state:
                    type: object
                    properties:
                      type_url:
                        type: string
                      value:
                        type: string
                        format: byte
                    title: client state associated with the request identifier
                description: |-
                  QueryUpgradedClientStateResponse is the response type for the
                  Query/UpgradedClientState RPC method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      tags:
        - gRPC Gateway API
  /ibc/core/client/v1/upgraded_consensus_states:
    get:
      summary: UpgradedConsensusState queries an Upgraded IBC consensus state.
      operationId: UpgradedConsensusState_8Q9KM_9F0EE
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  upgraded_consensus_state:
                    type: object
                    properties:
                      type_url:
                        type: string
                      value:
                        type: string
                        format: byte
                    title: Consensus state associated with the request identifier
                description: >-
                  QueryUpgradedConsensusStateResponse is the response type for
                  the

                  Query/UpgradedConsensusState RPC method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      tags:
        - gRPC Gateway API
  /cosmos/mint/v1beta1/annual_provisions:
    get:
      summary: AnnualProvisions current minting annual provisions value.
      operationId: AnnualProvisions_ZXWN4_H6A1B_CQW6V_F4IAS
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  annual_provisions:
                    type: string
                    format: byte
                    description: annual_provisions is the current minting annual provisions value.
                description: |-
                  QueryAnnualProvisionsResponse is the response type for the
                  Query/AnnualProvisions RPC method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      tags:
        - gRPC Gateway API
  /cosmos/mint/v1beta1/inflation:
    get:
      summary: Inflation returns the current minting inflation value.
      operationId: Inflation_TQ2TF_U4CPF_3ARXU_9VW0J
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  inflation:
                    type: string
                    format: byte
                    description: inflation is the current minting inflation value.
                description: >-
                  QueryInflationResponse is the response type for the
                  Query/Inflation RPC

                  method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      tags:
        - gRPC Gateway API
  /cosmos/mint/v1beta1/params:
    get:
      summary: Params returns the total set of minting parameters.
      operationId: Params_66VBC_GOKFL_JJ7PV_VD7L8
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  params:
                    description: params defines the parameters of the module.
                    type: object
                    properties:
                      mint_denom:
                        type: string
                        title: type of coin to mint
                      inflation_rate_change:
                        type: string
                        title: maximum annual change in inflation rate
                      inflation_max:
                        type: string
                        title: maximum inflation rate
                      inflation_min:
                        type: string
                        title: minimum inflation rate
                      goal_bonded:
                        type: string
                        title: goal of percent bonded atoms
                      blocks_per_year:
                        type: string
                        format: uint64
                        title: expected blocks per year
                description: QueryParamsResponse is the response type for the Query/Params RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      tags:
        - gRPC Gateway API
  "/cosmos/staking/v1beta1/delegations/{delegator_addr}":
    get:
      summary: DelegatorDelegations queries all delegations of a given delegator
        address.
      operationId: DelegatorDelegations_DO9UK_0M3W8_US3ZW_57NPV
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  delegation_responses:
                    type: array
                    items:
                      type: object
                      properties:
                        delegation:
                          type: object
                          properties:
                            delegator_address:
                              type: string
                              description: delegator_address is the bech32-encoded address of the delegator.
                            validator_address:
                              type: string
                              description: validator_address is the bech32-encoded address of the validator.
                            shares:
                              type: string
                              description: shares define the delegation shares received.
                          description: >-
                            Delegation represents the bond with tokens held by
                            an account. It is

                            owned by one delegator, and is associated with the voting power of one

                            validator.
                        balance:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: >-
                            Coin defines a token with a denomination and an
                            amount.


                            NOTE: The amount field is an Int which implements the custom method

                            signatures required by gogoproto.
                      description: >-
                        DelegationResponse is equivalent to Delegation except
                        that it contains a

                        balance in addition to shares which is more suitable for client responses.
                    description: delegation_responses defines all the delegations' info of a
                      delegator.
                  pagination:
                    description: pagination defines the pagination in the response.
                    type: object
                    properties:
                      next_key:
                        type: string
                        format: byte
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                      total:
                        type: string
                        format: uint64
                        title: >-
                          total is total number of results available if
                          PageRequest.count_total

                          was set, its value is undefined otherwise
                description: |-
                  QueryDelegatorDelegationsResponse is response type for the
                  Query/DelegatorDelegations RPC method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: delegator_addr
          description: delegator_addr defines the delegator address to query for.
          in: path
          required: true
          schema:
            type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key should

            be set.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in UIs.

            count_total is only respected when offset is used. It is ignored when key

            is set.
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - gRPC Gateway API
  "/cosmos/staking/v1beta1/delegators/{delegator_addr}/redelegations":
    get:
      summary: Redelegations queries redelegations of given address.
      operationId: Redelegations_HB23K_NLYC0_JSSTK_1WIYZ
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  redelegation_responses:
                    type: array
                    items:
                      type: object
                      properties:
                        redelegation:
                          type: object
                          properties:
                            delegator_address:
                              type: string
                              description: delegator_address is the bech32-encoded address of the delegator.
                            validator_src_address:
                              type: string
                              description: validator_src_address is the validator redelegation source operator
                                address.
                            validator_dst_address:
                              type: string
                              description: validator_dst_address is the validator redelegation destination
                                operator address.
                            entries:
                              type: array
                              items:
                                type: object
                                properties:
                                  creation_height:
                                    type: string
                                    format: int64
                                    description: creation_height  defines the height which the redelegation took
                                      place.
                                  completion_time:
                                    type: string
                                    format: date-time
                                    description: completion_time defines the unix time for redelegation completion.
                                  initial_balance:
                                    type: string
                                    description: initial_balance defines the initial balance when redelegation
                                      started.
                                  shares_dst:
                                    type: string
                                    description: shares_dst is the amount of destination-validator shares created by
                                      redelegation.
                                description: RedelegationEntry defines a redelegation object with relevant
                                  metadata.
                              description: entries are the redelegation entries.
                          description: >-
                            Redelegation contains the list of a particular
                            delegator's redelegating bonds

                            from a particular source validator to a particular destination validator.
                        entries:
                          type: array
                          items:
                            type: object
                            properties:
                              redelegation_entry:
                                type: object
                                properties:
                                  creation_height:
                                    type: string
                                    format: int64
                                    description: creation_height  defines the height which the redelegation took
                                      place.
                                  completion_time:
                                    type: string
                                    format: date-time
                                    description: completion_time defines the unix time for redelegation completion.
                                  initial_balance:
                                    type: string
                                    description: initial_balance defines the initial balance when redelegation
                                      started.
                                  shares_dst:
                                    type: string
                                    description: shares_dst is the amount of destination-validator shares created by
                                      redelegation.
                                description: RedelegationEntry defines a redelegation object with relevant
                                  metadata.
                              balance:
                                type: string
                            description: >-
                              RedelegationEntryResponse is equivalent to a
                              RedelegationEntry except that it

                              contains a balance in addition to shares which is more suitable for client

                              responses.
                      description: >-
                        RedelegationResponse is equivalent to a Redelegation
                        except that its entries

                        contain a balance in addition to shares which is more suitable for client

                        responses.
                  pagination:
                    description: pagination defines the pagination in the response.
                    type: object
                    properties:
                      next_key:
                        type: string
                        format: byte
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                      total:
                        type: string
                        format: uint64
                        title: >-
                          total is total number of results available if
                          PageRequest.count_total

                          was set, its value is undefined otherwise
                description: >-
                  QueryRedelegationsResponse is response type for the
                  Query/Redelegations RPC

                  method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: delegator_addr
          description: delegator_addr defines the delegator address to query for.
          in: path
          required: true
          schema:
            type: string
        - name: src_validator_addr
          description: src_validator_addr defines the validator address to redelegate from.
          in: query
          required: false
          schema:
            type: string
        - name: dst_validator_addr
          description: dst_validator_addr defines the validator address to redelegate to.
          in: query
          required: false
          schema:
            type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key should

            be set.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in UIs.

            count_total is only respected when offset is used. It is ignored when key

            is set.
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - gRPC Gateway API
  "/cosmos/staking/v1beta1/delegators/{delegator_addr}/unbonding_delegations":
    get:
      summary: >-
        DelegatorUnbondingDelegations queries all unbonding delegations of a
        given

        delegator address.
      operationId: DelegatorUnbondingDelegations_M8LUQ_0B0I3_09IGW_2YOH1
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  unbonding_responses:
                    type: array
                    items:
                      type: object
                      properties:
                        delegator_address:
                          type: string
                          description: delegator_address is the bech32-encoded address of the delegator.
                        validator_address:
                          type: string
                          description: validator_address is the bech32-encoded address of the validator.
                        entries:
                          type: array
                          items:
                            type: object
                            properties:
                              creation_height:
                                type: string
                                format: int64
                                description: creation_height is the height which the unbonding took place.
                              completion_time:
                                type: string
                                format: date-time
                                description: completion_time is the unix time for unbonding completion.
                              initial_balance:
                                type: string
                                description: initial_balance defines the tokens initially scheduled to receive
                                  at completion.
                              balance:
                                type: string
                                description: balance defines the tokens to receive at completion.
                            description: UnbondingDelegationEntry defines an unbonding object with relevant
                              metadata.
                          description: entries are the unbonding delegation entries.
                      description: >-
                        UnbondingDelegation stores all of a single delegator's
                        unbonding bonds

                        for a single validator in an time-ordered list.
                  pagination:
                    description: pagination defines the pagination in the response.
                    type: object
                    properties:
                      next_key:
                        type: string
                        format: byte
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                      total:
                        type: string
                        format: uint64
                        title: >-
                          total is total number of results available if
                          PageRequest.count_total

                          was set, its value is undefined otherwise
                description: >-
                  QueryUnbondingDelegatorDelegationsResponse is response type
                  for the

                  Query/UnbondingDelegatorDelegations RPC method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: delegator_addr
          description: delegator_addr defines the delegator address to query for.
          in: path
          required: true
          schema:
            type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key should

            be set.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in UIs.

            count_total is only respected when offset is used. It is ignored when key

            is set.
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - gRPC Gateway API
  "/cosmos/staking/v1beta1/delegators/{delegator_addr}/validators":
    get:
      summary: |-
        DelegatorValidators queries all validators info for given delegator
        address.
      operationId: DelegatorValidators_0RZH4_H6LO2_A0OSO_NID1I
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  validators:
                    type: array
                    items:
                      type: object
                      properties:
                        operator_address:
                          type: string
                          description: operator_address defines the address of the validator's operator;
                            bech encoded in JSON.
                        consensus_pubkey:
                          type: object
                          properties:
                            type_url:
                              type: string
                            value:
                              type: string
                              format: byte
                          description: consensus_pubkey is the consensus public key of the validator, as a
                            Protobuf Any.
                        jailed:
                          type: boolean
                          description: jailed defined whether the validator has been jailed from bonded
                            status or not.
                        status:
                          description: status is the validator status (bonded/unbonding/unbonded).
                          type: string
                          enum:
                            - BOND_STATUS_UNSPECIFIED
                            - BOND_STATUS_UNBONDED
                            - BOND_STATUS_UNBONDING
                            - BOND_STATUS_BONDED
                          default: BOND_STATUS_UNSPECIFIED
                        tokens:
                          type: string
                          description: tokens define the delegated tokens (incl. self-delegation).
                        delegator_shares:
                          type: string
                          description: delegator_shares defines total shares issued to a validator's
                            delegators.
                        description:
                          description: description defines the description terms for the validator.
                          type: object
                          properties:
                            moniker:
                              type: string
                              description: moniker defines a human-readable name for the validator.
                            identity:
                              type: string
                              description: identity defines an optional identity signature (ex. UPort or
                                Keybase).
                            website:
                              type: string
                              description: website defines an optional website link.
                            security_contact:
                              type: string
                              description: security_contact defines an optional email for security contact.
                            details:
                              type: string
                              description: details define other optional details.
                        unbonding_height:
                          type: string
                          format: int64
                          description: unbonding_height defines, if unbonding, the height at which this
                            validator has begun unbonding.
                        unbonding_time:
                          type: string
                          format: date-time
                          description: unbonding_time defines, if unbonding, the min time for the
                            validator to complete unbonding.
                        commission:
                          description: commission defines the commission parameters.
                          type: object
                          properties:
                            commission_rates:
                              description: commission_rates defines the initial commission rates to be used
                                for creating a validator.
                              type: object
                              properties:
                                rate:
                                  type: string
                                  description: rate is the commission rate charged to delegators, as a fraction.
                                max_rate:
                                  type: string
                                  description: max_rate defines the maximum commission rate which validator can
                                    ever charge, as a fraction.
                                max_change_rate:
                                  type: string
                                  description: max_change_rate defines the maximum daily increase of the validator
                                    commission, as a fraction.
                            update_time:
                              type: string
                              format: date-time
                              description: update_time is the last time the commission rate was changed.
                        min_self_delegation:
                          type: string
                          description: min_self_delegation is the validator's self declared minimum self
                            delegation.
                      description: >-
                        Validator defines a validator, together with the total
                        amount of the

                        Validator's bond shares and their exchange rate to coins. Slashing results in

                        a decrease in the exchange rate, allowing correct calculation of future

                        undelegations without iterating over delegators. When coins are delegated to

                        this validator, the validator is credited with a delegation whose number of

                        bond shares is based on the amount of coins delegated divided by the current

                        exchange rate. Voting power can be calculated as total bonded shares

                        multiplied by exchange rate.
                    description: validators defines the the validators' info of a delegator.
                  pagination:
                    description: pagination defines the pagination in the response.
                    type: object
                    properties:
                      next_key:
                        type: string
                        format: byte
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                      total:
                        type: string
                        format: uint64
                        title: >-
                          total is total number of results available if
                          PageRequest.count_total

                          was set, its value is undefined otherwise
                description: |-
                  QueryDelegatorValidatorsResponse is response type for the
                  Query/DelegatorValidators RPC method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: delegator_addr
          description: delegator_addr defines the delegator address to query for.
          in: path
          required: true
          schema:
            type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key should

            be set.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in UIs.

            count_total is only respected when offset is used. It is ignored when key

            is set.
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - gRPC Gateway API
  "/cosmos/staking/v1beta1/delegators/{delegator_addr}/validators/{validator_addr}":
    get:
      summary: |-
        DelegatorValidator queries validator info for given delegator validator
        pair.
      operationId: DelegatorValidator_81FQT_LKC5D_OWFYV_UJDZ9
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  validator:
                    type: object
                    properties:
                      operator_address:
                        type: string
                        description: operator_address defines the address of the validator's operator;
                          bech encoded in JSON.
                      consensus_pubkey:
                        type: object
                        properties:
                          type_url:
                            type: string
                          value:
                            type: string
                            format: byte
                        description: consensus_pubkey is the consensus public key of the validator, as a
                          Protobuf Any.
                      jailed:
                        type: boolean
                        description: jailed defined whether the validator has been jailed from bonded
                          status or not.
                      status:
                        description: status is the validator status (bonded/unbonding/unbonded).
                        type: string
                        enum:
                          - BOND_STATUS_UNSPECIFIED
                          - BOND_STATUS_UNBONDED
                          - BOND_STATUS_UNBONDING
                          - BOND_STATUS_BONDED
                        default: BOND_STATUS_UNSPECIFIED
                      tokens:
                        type: string
                        description: tokens define the delegated tokens (incl. self-delegation).
                      delegator_shares:
                        type: string
                        description: delegator_shares defines total shares issued to a validator's
                          delegators.
                      description:
                        description: description defines the description terms for the validator.
                        type: object
                        properties:
                          moniker:
                            type: string
                            description: moniker defines a human-readable name for the validator.
                          identity:
                            type: string
                            description: identity defines an optional identity signature (ex. UPort or
                              Keybase).
                          website:
                            type: string
                            description: website defines an optional website link.
                          security_contact:
                            type: string
                            description: security_contact defines an optional email for security contact.
                          details:
                            type: string
                            description: details define other optional details.
                      unbonding_height:
                        type: string
                        format: int64
                        description: unbonding_height defines, if unbonding, the height at which this
                          validator has begun unbonding.
                      unbonding_time:
                        type: string
                        format: date-time
                        description: unbonding_time defines, if unbonding, the min time for the
                          validator to complete unbonding.
                      commission:
                        description: commission defines the commission parameters.
                        type: object
                        properties:
                          commission_rates:
                            description: commission_rates defines the initial commission rates to be used
                              for creating a validator.
                            type: object
                            properties:
                              rate:
                                type: string
                                description: rate is the commission rate charged to delegators, as a fraction.
                              max_rate:
                                type: string
                                description: max_rate defines the maximum commission rate which validator can
                                  ever charge, as a fraction.
                              max_change_rate:
                                type: string
                                description: max_change_rate defines the maximum daily increase of the validator
                                  commission, as a fraction.
                          update_time:
                            type: string
                            format: date-time
                            description: update_time is the last time the commission rate was changed.
                      min_self_delegation:
                        type: string
                        description: min_self_delegation is the validator's self declared minimum self
                          delegation.
                    description: >-
                      Validator defines a validator, together with the total
                      amount of the

                      Validator's bond shares and their exchange rate to coins. Slashing results in

                      a decrease in the exchange rate, allowing correct calculation of future

                      undelegations without iterating over delegators. When coins are delegated to

                      this validator, the validator is credited with a delegation whose number of

                      bond shares is based on the amount of coins delegated divided by the current

                      exchange rate. Voting power can be calculated as total bonded shares

                      multiplied by exchange rate.
                description: |-
                  QueryDelegatorValidatorResponse response type for the
                  Query/DelegatorValidator RPC method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: delegator_addr
          description: delegator_addr defines the delegator address to query for.
          in: path
          required: true
          schema:
            type: string
        - name: validator_addr
          description: validator_addr defines the validator address to query for.
          in: path
          required: true
          schema:
            type: string
      tags:
        - gRPC Gateway API
  "/cosmos/staking/v1beta1/historical_info/{height}":
    get:
      summary: HistoricalInfo queries the historical info for given height.
      operationId: HistoricalInfo_K90AQ_3U5EX_1ZZOX_MJPU7
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  hist:
                    description: hist defines the historical info at the given height.
                    type: object
                    properties:
                      header:
                        type: object
                        properties:
                          version:
                            title: basic block info
                            type: object
                            properties:
                              block:
                                type: string
                                format: uint64
                              app:
                                type: string
                                format: uint64
                            description: >-
                              Consensus captures the consensus rules for
                              processing a block in the blockchain,

                              including all blockchain data structures and the rules of the application's

                              state transition machine.
                          chain_id:
                            type: string
                          height:
                            type: string
                            format: int64
                          time:
                            type: string
                            format: date-time
                          last_block_id:
                            type: object
                            properties:
                              hash:
                                type: string
                                format: byte
                              part_set_header:
                                type: object
                                properties:
                                  total:
                                    type: integer
                                    format: int64
                                  hash:
                                    type: string
                                    format: byte
                                title: PartsetHeader
                            title: BlockID
                          last_commit_hash:
                            type: string
                            format: byte
                            title: hashes of block data
                          data_hash:
                            type: string
                            format: byte
                          validators_hash:
                            type: string
                            format: byte
                            title: hashes from the app output from the prev block
                          next_validators_hash:
                            type: string
                            format: byte
                          consensus_hash:
                            type: string
                            format: byte
                          app_hash:
                            type: string
                            format: byte
                          last_results_hash:
                            type: string
                            format: byte
                          evidence_hash:
                            type: string
                            format: byte
                            title: consensus info
                          proposer_address:
                            type: string
                            format: byte
                        description: Header defines the structure of a block header.
                      valset:
                        type: array
                        items:
                          type: object
                          properties:
                            operator_address:
                              type: string
                              description: operator_address defines the address of the validator's operator;
                                bech encoded in JSON.
                            consensus_pubkey:
                              type: object
                              properties:
                                type_url:
                                  type: string
                                value:
                                  type: string
                                  format: byte
                              description: consensus_pubkey is the consensus public key of the validator, as a
                                Protobuf Any.
                            jailed:
                              type: boolean
                              description: jailed defined whether the validator has been jailed from bonded
                                status or not.
                            status:
                              description: status is the validator status (bonded/unbonding/unbonded).
                              type: string
                              enum:
                                - BOND_STATUS_UNSPECIFIED
                                - BOND_STATUS_UNBONDED
                                - BOND_STATUS_UNBONDING
                                - BOND_STATUS_BONDED
                              default: BOND_STATUS_UNSPECIFIED
                            tokens:
                              type: string
                              description: tokens define the delegated tokens (incl. self-delegation).
                            delegator_shares:
                              type: string
                              description: delegator_shares defines total shares issued to a validator's
                                delegators.
                            description:
                              description: description defines the description terms for the validator.
                              type: object
                              properties:
                                moniker:
                                  type: string
                                  description: moniker defines a human-readable name for the validator.
                                identity:
                                  type: string
                                  description: identity defines an optional identity signature (ex. UPort or
                                    Keybase).
                                website:
                                  type: string
                                  description: website defines an optional website link.
                                security_contact:
                                  type: string
                                  description: security_contact defines an optional email for security contact.
                                details:
                                  type: string
                                  description: details define other optional details.
                            unbonding_height:
                              type: string
                              format: int64
                              description: unbonding_height defines, if unbonding, the height at which this
                                validator has begun unbonding.
                            unbonding_time:
                              type: string
                              format: date-time
                              description: unbonding_time defines, if unbonding, the min time for the
                                validator to complete unbonding.
                            commission:
                              description: commission defines the commission parameters.
                              type: object
                              properties:
                                commission_rates:
                                  description: commission_rates defines the initial commission rates to be used
                                    for creating a validator.
                                  type: object
                                  properties:
                                    rate:
                                      type: string
                                      description: rate is the commission rate charged to delegators, as a fraction.
                                    max_rate:
                                      type: string
                                      description: max_rate defines the maximum commission rate which validator can
                                        ever charge, as a fraction.
                                    max_change_rate:
                                      type: string
                                      description: max_change_rate defines the maximum daily increase of the validator
                                        commission, as a fraction.
                                update_time:
                                  type: string
                                  format: date-time
                                  description: update_time is the last time the commission rate was changed.
                            min_self_delegation:
                              type: string
                              description: min_self_delegation is the validator's self declared minimum self
                                delegation.
                          description: >-
                            Validator defines a validator, together with the
                            total amount of the

                            Validator's bond shares and their exchange rate to coins. Slashing results in

                            a decrease in the exchange rate, allowing correct calculation of future

                            undelegations without iterating over delegators. When coins are delegated to

                            this validator, the validator is credited with a delegation whose number of

                            bond shares is based on the amount of coins delegated divided by the current

                            exchange rate. Voting power can be calculated as total bonded shares

                            multiplied by exchange rate.
                description: >-
                  QueryHistoricalInfoResponse is response type for the
                  Query/HistoricalInfo RPC

                  method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: height
          description: height defines at which height to query the historical info.
          in: path
          required: true
          schema:
            type: string
            format: int64
      tags:
        - gRPC Gateway API
  /cosmos/staking/v1beta1/params:
    get:
      summary: Parameters queries the staking parameters.
      operationId: Params_2GFKO_4XC0M_4L63I_EFYJ8
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  params:
                    description: params holds all the parameters of this module.
                    type: object
                    properties:
                      unbonding_time:
                        type: string
                        description: unbonding_time is the time duration of unbonding.
                      max_validators:
                        type: integer
                        format: int64
                        description: max_validators is the maximum number of validators.
                      max_entries:
                        type: integer
                        format: int64
                        description: max_entries is the max entries for either unbonding delegation or
                          redelegation (per pair/trio).
                      historical_entries:
                        type: integer
                        format: int64
                        description: historical_entries is the number of historical entries to persist.
                      bond_denom:
                        type: string
                        description: bond_denom defines the bondable coin denomination.
                description: QueryParamsResponse is response type for the Query/Params RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      tags:
        - gRPC Gateway API
  /cosmos/staking/v1beta1/pool:
    get:
      summary: Pool queries the pool info.
      operationId: Pool_8DYSH_CAHLV_ACV2V_9YJBL
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  pool:
                    description: pool defines the pool info.
                    type: object
                    properties:
                      not_bonded_tokens:
                        type: string
                      bonded_tokens:
                        type: string
                description: QueryPoolResponse is response type for the Query/Pool RPC method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      tags:
        - gRPC Gateway API
  /cosmos/staking/v1beta1/validators:
    get:
      summary: Validators queries all validators that match the given status.
      operationId: Validators_ZQQY7_7A63A_2Z5AY_NSNGE
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  validators:
                    type: array
                    items:
                      type: object
                      properties:
                        operator_address:
                          type: string
                          description: operator_address defines the address of the validator's operator;
                            bech encoded in JSON.
                        consensus_pubkey:
                          type: object
                          properties:
                            type_url:
                              type: string
                            value:
                              type: string
                              format: byte
                          description: consensus_pubkey is the consensus public key of the validator, as a
                            Protobuf Any.
                        jailed:
                          type: boolean
                          description: jailed defined whether the validator has been jailed from bonded
                            status or not.
                        status:
                          description: status is the validator status (bonded/unbonding/unbonded).
                          type: string
                          enum:
                            - BOND_STATUS_UNSPECIFIED
                            - BOND_STATUS_UNBONDED
                            - BOND_STATUS_UNBONDING
                            - BOND_STATUS_BONDED
                          default: BOND_STATUS_UNSPECIFIED
                        tokens:
                          type: string
                          description: tokens define the delegated tokens (incl. self-delegation).
                        delegator_shares:
                          type: string
                          description: delegator_shares defines total shares issued to a validator's
                            delegators.
                        description:
                          description: description defines the description terms for the validator.
                          type: object
                          properties:
                            moniker:
                              type: string
                              description: moniker defines a human-readable name for the validator.
                            identity:
                              type: string
                              description: identity defines an optional identity signature (ex. UPort or
                                Keybase).
                            website:
                              type: string
                              description: website defines an optional website link.
                            security_contact:
                              type: string
                              description: security_contact defines an optional email for security contact.
                            details:
                              type: string
                              description: details define other optional details.
                        unbonding_height:
                          type: string
                          format: int64
                          description: unbonding_height defines, if unbonding, the height at which this
                            validator has begun unbonding.
                        unbonding_time:
                          type: string
                          format: date-time
                          description: unbonding_time defines, if unbonding, the min time for the
                            validator to complete unbonding.
                        commission:
                          description: commission defines the commission parameters.
                          type: object
                          properties:
                            commission_rates:
                              description: commission_rates defines the initial commission rates to be used
                                for creating a validator.
                              type: object
                              properties:
                                rate:
                                  type: string
                                  description: rate is the commission rate charged to delegators, as a fraction.
                                max_rate:
                                  type: string
                                  description: max_rate defines the maximum commission rate which validator can
                                    ever charge, as a fraction.
                                max_change_rate:
                                  type: string
                                  description: max_change_rate defines the maximum daily increase of the validator
                                    commission, as a fraction.
                            update_time:
                              type: string
                              format: date-time
                              description: update_time is the last time the commission rate was changed.
                        min_self_delegation:
                          type: string
                          description: min_self_delegation is the validator's self declared minimum self
                            delegation.
                      description: >-
                        Validator defines a validator, together with the total
                        amount of the

                        Validator's bond shares and their exchange rate to coins. Slashing results in

                        a decrease in the exchange rate, allowing correct calculation of future

                        undelegations without iterating over delegators. When coins are delegated to

                        this validator, the validator is credited with a delegation whose number of

                        bond shares is based on the amount of coins delegated divided by the current

                        exchange rate. Voting power can be calculated as total bonded shares

                        multiplied by exchange rate.
                    description: validators contains all the queried validators.
                  pagination:
                    description: pagination defines the pagination in the response.
                    type: object
                    properties:
                      next_key:
                        type: string
                        format: byte
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                      total:
                        type: string
                        format: uint64
                        title: >-
                          total is total number of results available if
                          PageRequest.count_total

                          was set, its value is undefined otherwise
                title: QueryValidatorsResponse is response type for the Query/Validators RPC
                  method
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: status
          description: status enables to query for validators matching a given status.
          in: query
          required: false
          schema:
            type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key should

            be set.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in UIs.

            count_total is only respected when offset is used. It is ignored when key

            is set.
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - gRPC Gateway API
  "/cosmos/staking/v1beta1/validators/{validator_addr}":
    get:
      summary: Validator queries validator info for given validator address.
      operationId: Validator_50NAN_UZK5N_CJ5YD_IIQSX
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  validator:
                    type: object
                    properties:
                      operator_address:
                        type: string
                        description: operator_address defines the address of the validator's operator;
                          bech encoded in JSON.
                      consensus_pubkey:
                        type: object
                        properties:
                          type_url:
                            type: string
                          value:
                            type: string
                            format: byte
                        description: consensus_pubkey is the consensus public key of the validator, as a
                          Protobuf Any.
                      jailed:
                        type: boolean
                        description: jailed defined whether the validator has been jailed from bonded
                          status or not.
                      status:
                        description: status is the validator status (bonded/unbonding/unbonded).
                        type: string
                        enum:
                          - BOND_STATUS_UNSPECIFIED
                          - BOND_STATUS_UNBONDED
                          - BOND_STATUS_UNBONDING
                          - BOND_STATUS_BONDED
                        default: BOND_STATUS_UNSPECIFIED
                      tokens:
                        type: string
                        description: tokens define the delegated tokens (incl. self-delegation).
                      delegator_shares:
                        type: string
                        description: delegator_shares defines total shares issued to a validator's
                          delegators.
                      description:
                        description: description defines the description terms for the validator.
                        type: object
                        properties:
                          moniker:
                            type: string
                            description: moniker defines a human-readable name for the validator.
                          identity:
                            type: string
                            description: identity defines an optional identity signature (ex. UPort or
                              Keybase).
                          website:
                            type: string
                            description: website defines an optional website link.
                          security_contact:
                            type: string
                            description: security_contact defines an optional email for security contact.
                          details:
                            type: string
                            description: details define other optional details.
                      unbonding_height:
                        type: string
                        format: int64
                        description: unbonding_height defines, if unbonding, the height at which this
                          validator has begun unbonding.
                      unbonding_time:
                        type: string
                        format: date-time
                        description: unbonding_time defines, if unbonding, the min time for the
                          validator to complete unbonding.
                      commission:
                        description: commission defines the commission parameters.
                        type: object
                        properties:
                          commission_rates:
                            description: commission_rates defines the initial commission rates to be used
                              for creating a validator.
                            type: object
                            properties:
                              rate:
                                type: string
                                description: rate is the commission rate charged to delegators, as a fraction.
                              max_rate:
                                type: string
                                description: max_rate defines the maximum commission rate which validator can
                                  ever charge, as a fraction.
                              max_change_rate:
                                type: string
                                description: max_change_rate defines the maximum daily increase of the validator
                                  commission, as a fraction.
                          update_time:
                            type: string
                            format: date-time
                            description: update_time is the last time the commission rate was changed.
                      min_self_delegation:
                        type: string
                        description: min_self_delegation is the validator's self declared minimum self
                          delegation.
                    description: >-
                      Validator defines a validator, together with the total
                      amount of the

                      Validator's bond shares and their exchange rate to coins. Slashing results in

                      a decrease in the exchange rate, allowing correct calculation of future

                      undelegations without iterating over delegators. When coins are delegated to

                      this validator, the validator is credited with a delegation whose number of

                      bond shares is based on the amount of coins delegated divided by the current

                      exchange rate. Voting power can be calculated as total bonded shares

                      multiplied by exchange rate.
                title: QueryValidatorResponse is response type for the Query/Validator RPC
                  method
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: validator_addr
          description: validator_addr defines the validator address to query for.
          in: path
          required: true
          schema:
            type: string
      tags:
        - gRPC Gateway API
  "/cosmos/staking/v1beta1/validators/{validator_addr}/delegations":
    get:
      summary: ValidatorDelegations queries delegate info for given validator.
      operationId: ValidatorDelegations_JJ3GV_JOMLT_W1U69_R3DO9
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  delegation_responses:
                    type: array
                    items:
                      type: object
                      properties:
                        delegation:
                          type: object
                          properties:
                            delegator_address:
                              type: string
                              description: delegator_address is the bech32-encoded address of the delegator.
                            validator_address:
                              type: string
                              description: validator_address is the bech32-encoded address of the validator.
                            shares:
                              type: string
                              description: shares define the delegation shares received.
                          description: >-
                            Delegation represents the bond with tokens held by
                            an account. It is

                            owned by one delegator, and is associated with the voting power of one

                            validator.
                        balance:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: >-
                            Coin defines a token with a denomination and an
                            amount.


                            NOTE: The amount field is an Int which implements the custom method

                            signatures required by gogoproto.
                      description: >-
                        DelegationResponse is equivalent to Delegation except
                        that it contains a

                        balance in addition to shares which is more suitable for client responses.
                  pagination:
                    description: pagination defines the pagination in the response.
                    type: object
                    properties:
                      next_key:
                        type: string
                        format: byte
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                      total:
                        type: string
                        format: uint64
                        title: >-
                          total is total number of results available if
                          PageRequest.count_total

                          was set, its value is undefined otherwise
                title: |-
                  QueryValidatorDelegationsResponse is response type for the
                  Query/ValidatorDelegations RPC method
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: validator_addr
          description: validator_addr defines the validator address to query for.
          in: path
          required: true
          schema:
            type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key should

            be set.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in UIs.

            count_total is only respected when offset is used. It is ignored when key

            is set.
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - gRPC Gateway API
  "/cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}":
    get:
      summary: Delegation queries delegate info for given validator delegator pair.
      operationId: Delegation_VJ0IY_P1QT6_RZIX5_T38L9
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  delegation_response:
                    type: object
                    properties:
                      delegation:
                        type: object
                        properties:
                          delegator_address:
                            type: string
                            description: delegator_address is the bech32-encoded address of the delegator.
                          validator_address:
                            type: string
                            description: validator_address is the bech32-encoded address of the validator.
                          shares:
                            type: string
                            description: shares define the delegation shares received.
                        description: >-
                          Delegation represents the bond with tokens held by an
                          account. It is

                          owned by one delegator, and is associated with the voting power of one

                          validator.
                      balance:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the custom method

                          signatures required by gogoproto.
                    description: >-
                      DelegationResponse is equivalent to Delegation except that
                      it contains a

                      balance in addition to shares which is more suitable for client responses.
                description: QueryDelegationResponse is response type for the Query/Delegation
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: validator_addr
          description: validator_addr defines the validator address to query for.
          in: path
          required: true
          schema:
            type: string
        - name: delegator_addr
          description: delegator_addr defines the delegator address to query for.
          in: path
          required: true
          schema:
            type: string
      tags:
        - gRPC Gateway API
  "/cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}/unbonding_delegation":
    get:
      summary: |-
        UnbondingDelegation queries unbonding info for given validator delegator
        pair.
      operationId: UnbondingDelegation_1R8H6_2IZ2C_IFZ2R_G7GBP
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  unbond:
                    type: object
                    properties:
                      delegator_address:
                        type: string
                        description: delegator_address is the bech32-encoded address of the delegator.
                      validator_address:
                        type: string
                        description: validator_address is the bech32-encoded address of the validator.
                      entries:
                        type: array
                        items:
                          type: object
                          properties:
                            creation_height:
                              type: string
                              format: int64
                              description: creation_height is the height which the unbonding took place.
                            completion_time:
                              type: string
                              format: date-time
                              description: completion_time is the unix time for unbonding completion.
                            initial_balance:
                              type: string
                              description: initial_balance defines the tokens initially scheduled to receive
                                at completion.
                            balance:
                              type: string
                              description: balance defines the tokens to receive at completion.
                          description: UnbondingDelegationEntry defines an unbonding object with relevant
                            metadata.
                        description: entries are the unbonding delegation entries.
                    description: >-
                      UnbondingDelegation stores all of a single delegator's
                      unbonding bonds

                      for a single validator in an time-ordered list.
                description: >-
                  QueryDelegationResponse is response type for the
                  Query/UnbondingDelegation

                  RPC method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: validator_addr
          description: validator_addr defines the validator address to query for.
          in: path
          required: true
          schema:
            type: string
        - name: delegator_addr
          description: delegator_addr defines the delegator address to query for.
          in: path
          required: true
          schema:
            type: string
      tags:
        - gRPC Gateway API
  "/cosmos/staking/v1beta1/validators/{validator_addr}/unbonding_delegations":
    get:
      summary: ValidatorUnbondingDelegations queries unbonding delegations of a
        validator.
      operationId: ValidatorUnbondingDelegations_0TUJK_PALDQ_LSG3B_UYLAU
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  unbonding_responses:
                    type: array
                    items:
                      type: object
                      properties:
                        delegator_address:
                          type: string
                          description: delegator_address is the bech32-encoded address of the delegator.
                        validator_address:
                          type: string
                          description: validator_address is the bech32-encoded address of the validator.
                        entries:
                          type: array
                          items:
                            type: object
                            properties:
                              creation_height:
                                type: string
                                format: int64
                                description: creation_height is the height which the unbonding took place.
                              completion_time:
                                type: string
                                format: date-time
                                description: completion_time is the unix time for unbonding completion.
                              initial_balance:
                                type: string
                                description: initial_balance defines the tokens initially scheduled to receive
                                  at completion.
                              balance:
                                type: string
                                description: balance defines the tokens to receive at completion.
                            description: UnbondingDelegationEntry defines an unbonding object with relevant
                              metadata.
                          description: entries are the unbonding delegation entries.
                      description: >-
                        UnbondingDelegation stores all of a single delegator's
                        unbonding bonds

                        for a single validator in an time-ordered list.
                  pagination:
                    description: pagination defines the pagination in the response.
                    type: object
                    properties:
                      next_key:
                        type: string
                        format: byte
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                      total:
                        type: string
                        format: uint64
                        title: >-
                          total is total number of results available if
                          PageRequest.count_total

                          was set, its value is undefined otherwise
                description: >-
                  QueryValidatorUnbondingDelegationsResponse is response type
                  for the

                  Query/ValidatorUnbondingDelegations RPC method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: validator_addr
          description: validator_addr defines the validator address to query for.
          in: path
          required: true
          schema:
            type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key should

            be set.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in UIs.

            count_total is only respected when offset is used. It is ignored when key

            is set.
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - gRPC Gateway API
  /cosmos/distribution/v1beta1/community_pool:
    get:
      summary: CommunityPool queries the community pool coins.
      operationId: CommunityPool_SNUXR_8VKTX_TVVM3_TCK3F
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  pool:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        DecCoin defines a token with a denomination and a
                        decimal amount.


                        NOTE: The amount field is an Dec which implements the custom method

                        signatures required by gogoproto.
                    description: pool defines community pool's coins.
                description: >-
                  QueryCommunityPoolResponse is the response type for the
                  Query/CommunityPool

                  RPC method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      tags:
        - gRPC Gateway API
  "/cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards":
    get:
      summary: |-
        DelegationTotalRewards queries the total rewards accrued by a each
        validator.
      operationId: DelegationTotalRewards_C027F_T0H0B_DB40S_F8W3T
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  rewards:
                    type: array
                    items:
                      type: object
                      properties:
                        validator_address:
                          type: string
                        reward:
                          type: array
                          items:
                            type: object
                            properties:
                              denom:
                                type: string
                              amount:
                                type: string
                            description: >-
                              DecCoin defines a token with a denomination and a
                              decimal amount.


                              NOTE: The amount field is an Dec which implements the custom method

                              signatures required by gogoproto.
                      description: |-
                        DelegationDelegatorReward represents the properties
                        of a delegator's delegation reward.
                    description: rewards defines all the rewards accrued by a delegator.
                  total:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        DecCoin defines a token with a denomination and a
                        decimal amount.


                        NOTE: The amount field is an Dec which implements the custom method

                        signatures required by gogoproto.
                    description: total defines the sum of all the rewards.
                description: >-
                  QueryDelegationTotalRewardsResponse is the response type for
                  the

                  Query/DelegationTotalRewards RPC method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: delegator_address
          description: delegator_address defines the delegator address to query for.
          in: path
          required: true
          schema:
            type: string
      tags:
        - gRPC Gateway API
  "/cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards/{validator_address}":
    get:
      summary: DelegationRewards queries the total rewards accrued by a delegation.
      operationId: DelegationRewards_538CK_1CQM2_X8ZLQ_393TT
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  rewards:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        DecCoin defines a token with a denomination and a
                        decimal amount.


                        NOTE: The amount field is an Dec which implements the custom method

                        signatures required by gogoproto.
                    description: rewards defines the rewards accrued by a delegation.
                description: |-
                  QueryDelegationRewardsResponse is the response type for the
                  Query/DelegationRewards RPC method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: delegator_address
          description: delegator_address defines the delegator address to query for.
          in: path
          required: true
          schema:
            type: string
        - name: validator_address
          description: validator_address defines the validator address to query for.
          in: path
          required: true
          schema:
            type: string
      tags:
        - gRPC Gateway API
  "/cosmos/distribution/v1beta1/delegators/{delegator_address}/validators":
    get:
      summary: DelegatorValidators queries the validators of a delegator.
      operationId: DelegatorValidators_MQPA7_TBP43_C4QGN_LOVSA
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  validators:
                    type: array
                    items:
                      type: string
                    description: validators defines the validators a delegator is delegating for.
                description: |-
                  QueryDelegatorValidatorsResponse is the response type for the
                  Query/DelegatorValidators RPC method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: delegator_address
          description: delegator_address defines the delegator address to query for.
          in: path
          required: true
          schema:
            type: string
      tags:
        - gRPC Gateway API
  "/cosmos/distribution/v1beta1/delegators/{delegator_address}/withdraw_address":
    get:
      summary: DelegatorWithdrawAddress queries withdraw address of a delegator.
      operationId: DelegatorWithdrawAddress_RI2Y9_32WKJ_S7VS6_UKG0E
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  withdraw_address:
                    type: string
                    description: withdraw_address defines the delegator address to query for.
                description: >-
                  QueryDelegatorWithdrawAddressResponse is the response type for
                  the

                  Query/DelegatorWithdrawAddress RPC method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: delegator_address
          description: delegator_address defines the delegator address to query for.
          in: path
          required: true
          schema:
            type: string
      tags:
        - gRPC Gateway API
  /cosmos/distribution/v1beta1/params:
    get:
      summary: Params queries params of the distribution module.
      operationId: Params_7L9OZ_R1D4H_O65JA_JRRDQ
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  params:
                    description: params defines the parameters of the module.
                    type: object
                    properties:
                      community_tax:
                        type: string
                      base_proposer_reward:
                        type: string
                      bonus_proposer_reward:
                        type: string
                      withdraw_addr_enabled:
                        type: boolean
                description: QueryParamsResponse is the response type for the Query/Params RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      tags:
        - gRPC Gateway API
  "/cosmos/distribution/v1beta1/validators/{validator_address}/commission":
    get:
      summary: ValidatorCommission queries accumulated commission for a validator.
      operationId: ValidatorCommission_TB94X_3KSN1_Z1EAB_43QRS
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  commission:
                    description: commission defines the commision the validator received.
                    type: object
                    properties:
                      commission:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: >-
                            DecCoin defines a token with a denomination and a
                            decimal amount.


                            NOTE: The amount field is an Dec which implements the custom method

                            signatures required by gogoproto.
                title: |-
                  QueryValidatorCommissionResponse is the response type for the
                  Query/ValidatorCommission RPC method
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: validator_address
          description: validator_address defines the validator address to query for.
          in: path
          required: true
          schema:
            type: string
      tags:
        - gRPC Gateway API
  "/cosmos/distribution/v1beta1/validators/{validator_address}/outstanding_rewards":
    get:
      summary: ValidatorOutstandingRewards queries rewards of a validator address.
      operationId: ValidatorOutstandingRewards_K0MKQ_PCJAH_JFSCY_D7Z4X
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  rewards:
                    type: object
                    properties:
                      rewards:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: >-
                            DecCoin defines a token with a denomination and a
                            decimal amount.


                            NOTE: The amount field is an Dec which implements the custom method

                            signatures required by gogoproto.
                    description: >-
                      ValidatorOutstandingRewards represents outstanding
                      (un-withdrawn) rewards

                      for a validator inexpensive to track, allows simple sanity checks.
                description: >-
                  QueryValidatorOutstandingRewardsResponse is the response type
                  for the

                  Query/ValidatorOutstandingRewards RPC method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: validator_address
          description: validator_address defines the validator address to query for.
          in: path
          required: true
          schema:
            type: string
      tags:
        - gRPC Gateway API
  "/cosmos/distribution/v1beta1/validators/{validator_address}/slashes":
    get:
      summary: ValidatorSlashes queries slash events of a validator.
      operationId: ValidatorSlashes_TMVWU_TV3H1_ZOHL3_I3GOX
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  slashes:
                    type: array
                    items:
                      type: object
                      properties:
                        validator_period:
                          type: string
                          format: uint64
                        fraction:
                          type: string
                      description: >-
                        ValidatorSlashEvent represents a validator slash event.

                        Height is implicit within the store key.

                        This is needed to calculate appropriate amount of staking tokens

                        for delegations which are withdrawn after a slash has occurred.
                    description: slashes defines the slashes the validator received.
                  pagination:
                    description: pagination defines the pagination in the response.
                    type: object
                    properties:
                      next_key:
                        type: string
                        format: byte
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                      total:
                        type: string
                        format: uint64
                        title: >-
                          total is total number of results available if
                          PageRequest.count_total

                          was set, its value is undefined otherwise
                description: |-
                  QueryValidatorSlashesResponse is the response type for the
                  Query/ValidatorSlashes RPC method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: validator_address
          description: validator_address defines the validator address to query for.
          in: path
          required: true
          schema:
            type: string
        - name: starting_height
          description: starting_height defines the optional starting height to query the
            slashes.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: ending_height
          description: starting_height defines the optional ending height to query the
            slashes.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key should

            be set.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in UIs.

            count_total is only respected when offset is used. It is ignored when key

            is set.
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - gRPC Gateway API
  "/cosmos/feegrant/v1beta1/allowance/{granter}/{grantee}":
    get:
      summary: Allowance returns fee granted to the grantee by the granter.
      operationId: Allowance_FJA8Y_GLZZY_7MKGX_3YO41
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  allowance:
                    description: allowance is a allowance granted for grantee by granter.
                    type: object
                    properties:
                      granter:
                        type: string
                        description: granter is the address of the user granting an allowance of their
                          funds.
                      grantee:
                        type: string
                        description: grantee is the address of the user being granted an allowance of
                          another user's funds.
                      allowance:
                        type: object
                        properties:
                          type_url:
                            type: string
                          value:
                            type: string
                            format: byte
                        description: allowance can be any of basic and filtered fee allowance.
                    title: Grant is stored in the KVStore to record a grant with full context
                description: QueryAllowanceResponse is the response type for the Query/Allowance
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: granter
          description: granter is the address of the user granting an allowance of their
            funds.
          in: path
          required: true
          schema:
            type: string
        - name: grantee
          description: grantee is the address of the user being granted an allowance of
            another user's funds.
          in: path
          required: true
          schema:
            type: string
      tags:
        - gRPC Gateway API
  "/cosmos/feegrant/v1beta1/allowances/{grantee}":
    get:
      summary: Allowances returns all the grants for address.
      operationId: Allowances_R0TB1_68MUL_E24XM_KKX2P
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  allowances:
                    type: array
                    items:
                      type: object
                      properties:
                        granter:
                          type: string
                          description: granter is the address of the user granting an allowance of their
                            funds.
                        grantee:
                          type: string
                          description: grantee is the address of the user being granted an allowance of
                            another user's funds.
                        allowance:
                          type: object
                          properties:
                            type_url:
                              type: string
                            value:
                              type: string
                              format: byte
                          description: allowance can be any of basic and filtered fee allowance.
                      title: Grant is stored in the KVStore to record a grant with full context
                    description: allowances are allowance's granted for grantee by granter.
                  pagination:
                    description: pagination defines an pagination for the response.
                    type: object
                    properties:
                      next_key:
                        type: string
                        format: byte
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                      total:
                        type: string
                        format: uint64
                        title: >-
                          total is total number of results available if
                          PageRequest.count_total

                          was set, its value is undefined otherwise
                description: QueryAllowancesResponse is the response type for the
                  Query/Allowances RPC method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: grantee
          in: path
          required: true
          schema:
            type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key should

            be set.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in UIs.

            count_total is only respected when offset is used. It is ignored when key

            is set.
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - gRPC Gateway API
  "/cosmos/feegrant/v1beta1/issued/{granter}":
    get:
      summary: |-
        AllowancesByGranter returns all the grants given by an address
        Since v0.46
      operationId: AllowancesByGranter_67QNT_IUEFM_IOBRH_TZZDR
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  allowances:
                    type: array
                    items:
                      type: object
                      properties:
                        granter:
                          type: string
                          description: granter is the address of the user granting an allowance of their
                            funds.
                        grantee:
                          type: string
                          description: grantee is the address of the user being granted an allowance of
                            another user's funds.
                        allowance:
                          type: object
                          properties:
                            type_url:
                              type: string
                            value:
                              type: string
                              format: byte
                          description: allowance can be any of basic and filtered fee allowance.
                      title: Grant is stored in the KVStore to record a grant with full context
                    description: allowances that have been issued by the granter.
                  pagination:
                    description: pagination defines an pagination for the response.
                    type: object
                    properties:
                      next_key:
                        type: string
                        format: byte
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                      total:
                        type: string
                        format: uint64
                        title: >-
                          total is total number of results available if
                          PageRequest.count_total

                          was set, its value is undefined otherwise
                description: QueryAllowancesByGranterResponse is the response type for the
                  Query/AllowancesByGranter RPC method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: granter
          in: path
          required: true
          schema:
            type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key should

            be set.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in UIs.

            count_total is only respected when offset is used. It is ignored when key

            is set.
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - gRPC Gateway API
  "/omniflix/onft/v1beta1/collections/{denom_id}":
    get:
      operationId: Collection_4XG44_NQ4Q0_BF2RU_3VKZW
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  collection:
                    type: object
                    properties:
                      denom:
                        type: object
                        properties:
                          id:
                            type: string
                          symbol:
                            type: string
                          name:
                            type: string
                          schema:
                            type: string
                          creator:
                            type: string
                          description:
                            type: string
                          preview_uri:
                            type: string
                      onfts:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            metadata:
                              type: object
                              properties:
                                name:
                                  type: string
                                description:
                                  type: string
                                media_uri:
                                  type: string
                                preview_uri:
                                  type: string
                            data:
                              type: string
                            owner:
                              type: string
                            transferable:
                              type: boolean
                            extensible:
                              type: boolean
                            created_at:
                              type: string
                              format: date-time
                            nsfw:
                              type: boolean
                            royalty_share:
                              type: string
                          title: ASSET or ONFT
                    title: Collection
                  pagination:
                    type: object
                    properties:
                      next_key:
                        type: string
                        format: byte
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                      total:
                        type: string
                        format: uint64
                        title: >-
                          total is total number of results available if
                          PageRequest.count_total

                          was set, its value is undefined otherwise
                    description: >-
                      PageResponse is to be embedded in gRPC response messages
                      where the

                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: denom_id
          in: path
          required: true
          schema:
            type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key should

            be set.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in UIs.

            count_total is only respected when offset is used. It is ignored when key

            is set.
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - gRPC Gateway API
  /omniflix/onft/v1beta1/denoms:
    get:
      operationId: Denoms_92EOK_EKNBV_DJHBD_MY1SV
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  denoms:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        symbol:
                          type: string
                        name:
                          type: string
                        schema:
                          type: string
                        creator:
                          type: string
                        description:
                          type: string
                        preview_uri:
                          type: string
                  pagination:
                    type: object
                    properties:
                      next_key:
                        type: string
                        format: byte
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                      total:
                        type: string
                        format: uint64
                        title: >-
                          total is total number of results available if
                          PageRequest.count_total

                          was set, its value is undefined otherwise
                    description: >-
                      PageResponse is to be embedded in gRPC response messages
                      where the

                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key should

            be set.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in UIs.

            count_total is only respected when offset is used. It is ignored when key

            is set.
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          schema:
            type: boolean
        - name: owner
          in: query
          required: false
          schema:
            type: string
      tags:
        - gRPC Gateway API
  "/omniflix/onft/v1beta1/denoms/{denom_id}":
    get:
      operationId: Denom_8N1EG_VSU07_XVYV7_H2U5R
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  denom:
                    type: object
                    properties:
                      id:
                        type: string
                      symbol:
                        type: string
                      name:
                        type: string
                      schema:
                        type: string
                      creator:
                        type: string
                      description:
                        type: string
                      preview_uri:
                        type: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: denom_id
          in: path
          required: true
          schema:
            type: string
      tags:
        - gRPC Gateway API
  "/omniflix/onft/v1beta1/denoms/{denom_id}/onfts/{id}":
    get:
      operationId: ONFT_1J4H3_W5C2P_QMVL2_3W3P5
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  onft:
                    type: object
                    properties:
                      id:
                        type: string
                      metadata:
                        type: object
                        properties:
                          name:
                            type: string
                          description:
                            type: string
                          media_uri:
                            type: string
                          preview_uri:
                            type: string
                      data:
                        type: string
                      owner:
                        type: string
                      transferable:
                        type: boolean
                      extensible:
                        type: boolean
                      created_at:
                        type: string
                        format: date-time
                      nsfw:
                        type: boolean
                      royalty_share:
                        type: string
                    title: ASSET or ONFT
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: denom_id
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - gRPC Gateway API
  "/omniflix/onft/v1beta1/denoms/{denom_id}/supply":
    get:
      operationId: Supply_UG101_K3ZLK_5ZC10_WH2FM
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  amount:
                    type: string
                    format: uint64
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: denom_id
          in: path
          required: true
          schema:
            type: string
        - name: owner
          in: query
          required: false
          schema:
            type: string
      tags:
        - gRPC Gateway API
  "/omniflix/onft/v1beta1/onfts/{denom_id}/{owner}":
    get:
      operationId: OwnerONFTs_D0PPN_OTV57_TARBG_1TK8K
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  owner:
                    type: string
                  collections:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: object
                          properties:
                            id:
                              type: string
                            symbol:
                              type: string
                            name:
                              type: string
                            schema:
                              type: string
                            creator:
                              type: string
                            description:
                              type: string
                            preview_uri:
                              type: string
                        onfts:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                              metadata:
                                type: object
                                properties:
                                  name:
                                    type: string
                                  description:
                                    type: string
                                  media_uri:
                                    type: string
                                  preview_uri:
                                    type: string
                              data:
                                type: string
                              owner:
                                type: string
                              transferable:
                                type: boolean
                              extensible:
                                type: boolean
                              created_at:
                                type: string
                                format: date-time
                              nsfw:
                                type: boolean
                              royalty_share:
                                type: string
                            title: ASSET or ONFT
                  pagination:
                    type: object
                    properties:
                      next_key:
                        type: string
                        format: byte
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                      total:
                        type: string
                        format: uint64
                        title: >-
                          total is total number of results available if
                          PageRequest.count_total

                          was set, its value is undefined otherwise
                    description: >-
                      PageResponse is to be embedded in gRPC response messages
                      where the

                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: denom_id
          in: path
          required: true
          schema:
            type: string
        - name: owner
          in: path
          required: true
          schema:
            type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key should

            be set.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in UIs.

            count_total is only respected when offset is used. It is ignored when key

            is set.
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - gRPC Gateway API
  /omniflix/onft/v1beta1/params:
    get:
      operationId: Params_CRO9I_1WPOA_4N5DY_URLXF
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  params:
                    description: params defines the parameters of the module.
                    type: object
                    properties:
                      denom_creation_fee:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the custom method

                          signatures required by gogoproto.
                description: QueryParamsResponse is the response type for the Query/Params RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      tags:
        - gRPC Gateway API
  "/cosmos/gov/v1beta1/params/{params_type}":
    get:
      summary: Params queries all parameters of the gov module.
      operationId: Params_16TNE_PXX4S_OWA6C_VGXH4
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  voting_params:
                    description: voting_params defines the parameters related to voting.
                    type: object
                    properties:
                      voting_period:
                        type: string
                        description: Length of the voting period.
                  deposit_params:
                    description: deposit_params defines the parameters related to deposit.
                    type: object
                    properties:
                      min_deposit:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: >-
                            Coin defines a token with a denomination and an
                            amount.


                            NOTE: The amount field is an Int which implements the custom method

                            signatures required by gogoproto.
                        description: Minimum deposit for a proposal to enter voting period.
                      max_deposit_period:
                        type: string
                        description: >-
                          Maximum period for Atom holders to deposit on a
                          proposal. Initial value: 2
                           months.
                  tally_params:
                    description: tally_params defines the parameters related to tally.
                    type: object
                    properties:
                      quorum:
                        type: string
                        format: byte
                        description: >-
                          Minimum percentage of total stake needed to vote for a
                          result to be
                           considered valid.
                      threshold:
                        type: string
                        format: byte
                        description: "Minimum proportion of Yes votes for proposal to pass. Default
                          value: 0.5."
                      veto_threshold:
                        type: string
                        format: byte
                        description: >-
                          Minimum value of Veto votes to Total votes ratio for
                          proposal to be
                           vetoed. Default value: 1/3.
                description: QueryParamsResponse is the response type for the Query/Params RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: params_type
          description: >-
            params_type defines which parameters to query for, can be one of
            "voting",

            "tallying" or "deposit".
          in: path
          required: true
          schema:
            type: string
      tags:
        - gRPC Gateway API
  /cosmos/gov/v1beta1/proposals:
    get:
      summary: Proposals queries all proposals based on given status.
      operationId: Proposals_4V3IT_6KT36_KQYR6_GTEYC
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  proposals:
                    type: array
                    items:
                      type: object
                      properties:
                        proposal_id:
                          type: string
                          format: uint64
                        content:
                          type: object
                          properties:
                            type_url:
                              type: string
                            value:
                              type: string
                              format: byte
                        status:
                          type: string
                          enum:
                            - PROPOSAL_STATUS_UNSPECIFIED
                            - PROPOSAL_STATUS_DEPOSIT_PERIOD
                            - PROPOSAL_STATUS_VOTING_PERIOD
                            - PROPOSAL_STATUS_PASSED
                            - PROPOSAL_STATUS_REJECTED
                            - PROPOSAL_STATUS_FAILED
                          default: PROPOSAL_STATUS_UNSPECIFIED
                          description: >-
                            ProposalStatus enumerates the valid statuses of a
                            proposal.

                             - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.
                             - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
                            period.
                             - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
                            period.
                             - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
                            passed.
                             - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
                            been rejected.
                             - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
                            failed.
                        final_tally_result:
                          type: object
                          properties:
                            yes:
                              type: string
                            abstain:
                              type: string
                            no:
                              type: string
                            no_with_veto:
                              type: string
                          description: TallyResult defines a standard tally for a governance proposal.
                        submit_time:
                          type: string
                          format: date-time
                        deposit_end_time:
                          type: string
                          format: date-time
                        total_deposit:
                          type: array
                          items:
                            type: object
                            properties:
                              denom:
                                type: string
                              amount:
                                type: string
                            description: >-
                              Coin defines a token with a denomination and an
                              amount.


                              NOTE: The amount field is an Int which implements the custom method

                              signatures required by gogoproto.
                        voting_start_time:
                          type: string
                          format: date-time
                        voting_end_time:
                          type: string
                          format: date-time
                      description: Proposal defines the core field members of a governance proposal.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        type: string
                        format: byte
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                      total:
                        type: string
                        format: uint64
                        title: >-
                          total is total number of results available if
                          PageRequest.count_total

                          was set, its value is undefined otherwise
                    description: >-
                      PageResponse is to be embedded in gRPC response messages
                      where the

                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
                description: >-
                  QueryProposalsResponse is the response type for the
                  Query/Proposals RPC

                  method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: proposal_status
          description: >-
            proposal_status defines the status of the proposals.

             - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.
             - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
            period.
             - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
            period.
             - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
            passed.
             - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
            been rejected.
             - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
            failed.
          in: query
          required: false
          schema:
            type: string
            enum:
              - PROPOSAL_STATUS_UNSPECIFIED
              - PROPOSAL_STATUS_DEPOSIT_PERIOD
              - PROPOSAL_STATUS_VOTING_PERIOD
              - PROPOSAL_STATUS_PASSED
              - PROPOSAL_STATUS_REJECTED
              - PROPOSAL_STATUS_FAILED
            default: PROPOSAL_STATUS_UNSPECIFIED
        - name: voter
          description: voter defines the voter address for the proposals.
          in: query
          required: false
          schema:
            type: string
        - name: depositor
          description: depositor defines the deposit addresses from the proposals.
          in: query
          required: false
          schema:
            type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key should

            be set.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in UIs.

            count_total is only respected when offset is used. It is ignored when key

            is set.
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - gRPC Gateway API
  "/cosmos/gov/v1beta1/proposals/{proposal_id}":
    get:
      summary: Proposal queries proposal details based on ProposalID.
      operationId: Proposal_07A48_A7FEJ_MJH5C_5U61M
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  proposal:
                    type: object
                    properties:
                      proposal_id:
                        type: string
                        format: uint64
                      content:
                        type: object
                        properties:
                          type_url:
                            type: string
                          value:
                            type: string
                            format: byte
                      status:
                        type: string
                        enum:
                          - PROPOSAL_STATUS_UNSPECIFIED
                          - PROPOSAL_STATUS_DEPOSIT_PERIOD
                          - PROPOSAL_STATUS_VOTING_PERIOD
                          - PROPOSAL_STATUS_PASSED
                          - PROPOSAL_STATUS_REJECTED
                          - PROPOSAL_STATUS_FAILED
                        default: PROPOSAL_STATUS_UNSPECIFIED
                        description: >-
                          ProposalStatus enumerates the valid statuses of a
                          proposal.

                           - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.
                           - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
                          period.
                           - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
                          period.
                           - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
                          passed.
                           - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
                          been rejected.
                           - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
                          failed.
                      final_tally_result:
                        type: object
                        properties:
                          yes:
                            type: string
                          abstain:
                            type: string
                          no:
                            type: string
                          no_with_veto:
                            type: string
                        description: TallyResult defines a standard tally for a governance proposal.
                      submit_time:
                        type: string
                        format: date-time
                      deposit_end_time:
                        type: string
                        format: date-time
                      total_deposit:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: >-
                            Coin defines a token with a denomination and an
                            amount.


                            NOTE: The amount field is an Int which implements the custom method

                            signatures required by gogoproto.
                      voting_start_time:
                        type: string
                        format: date-time
                      voting_end_time:
                        type: string
                        format: date-time
                    description: Proposal defines the core field members of a governance proposal.
                description: QueryProposalResponse is the response type for the Query/Proposal
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: proposal_id
          description: proposal_id defines the unique id of the proposal.
          in: path
          required: true
          schema:
            type: string
            format: uint64
      tags:
        - gRPC Gateway API
  "/cosmos/gov/v1beta1/proposals/{proposal_id}/deposits":
    get:
      summary: Deposits queries all deposits of a single proposal.
      operationId: Deposits_UFWJY_KVUOO_D9E4X_5WQL4
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  deposits:
                    type: array
                    items:
                      type: object
                      properties:
                        proposal_id:
                          type: string
                          format: uint64
                        depositor:
                          type: string
                        amount:
                          type: array
                          items:
                            type: object
                            properties:
                              denom:
                                type: string
                              amount:
                                type: string
                            description: >-
                              Coin defines a token with a denomination and an
                              amount.


                              NOTE: The amount field is an Int which implements the custom method

                              signatures required by gogoproto.
                      description: >-
                        Deposit defines an amount deposited by an account
                        address to an active

                        proposal.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        type: string
                        format: byte
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                      total:
                        type: string
                        format: uint64
                        title: >-
                          total is total number of results available if
                          PageRequest.count_total

                          was set, its value is undefined otherwise
                    description: >-
                      PageResponse is to be embedded in gRPC response messages
                      where the

                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
                description: QueryDepositsResponse is the response type for the Query/Deposits
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: proposal_id
          description: proposal_id defines the unique id of the proposal.
          in: path
          required: true
          schema:
            type: string
            format: uint64
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key should

            be set.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in UIs.

            count_total is only respected when offset is used. It is ignored when key

            is set.
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - gRPC Gateway API
  "/cosmos/gov/v1beta1/proposals/{proposal_id}/deposits/{depositor}":
    get:
      summary: Deposit queries single deposit information based proposalID, depositAddr.
      operationId: Deposit_EM3KD_WE2GY_2ZWTM_P2B30
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  deposit:
                    type: object
                    properties:
                      proposal_id:
                        type: string
                        format: uint64
                      depositor:
                        type: string
                      amount:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: >-
                            Coin defines a token with a denomination and an
                            amount.


                            NOTE: The amount field is an Int which implements the custom method

                            signatures required by gogoproto.
                    description: >-
                      Deposit defines an amount deposited by an account address
                      to an active

                      proposal.
                description: QueryDepositResponse is the response type for the Query/Deposit RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: proposal_id
          description: proposal_id defines the unique id of the proposal.
          in: path
          required: true
          schema:
            type: string
            format: uint64
        - name: depositor
          description: depositor defines the deposit addresses from the proposals.
          in: path
          required: true
          schema:
            type: string
      tags:
        - gRPC Gateway API
  "/cosmos/gov/v1beta1/proposals/{proposal_id}/tally":
    get:
      summary: TallyResult queries the tally of a proposal vote.
      operationId: TallyResult_FBOT2_LY4UM_NEI27_LAXA4
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  tally:
                    type: object
                    properties:
                      yes:
                        type: string
                      abstain:
                        type: string
                      no:
                        type: string
                      no_with_veto:
                        type: string
                    description: TallyResult defines a standard tally for a governance proposal.
                description: QueryTallyResultResponse is the response type for the Query/Tally
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: proposal_id
          description: proposal_id defines the unique id of the proposal.
          in: path
          required: true
          schema:
            type: string
            format: uint64
      tags:
        - gRPC Gateway API
  "/cosmos/gov/v1beta1/proposals/{proposal_id}/votes":
    get:
      summary: Votes queries votes of a given proposal.
      operationId: Votes_A1ZO8_7N1F3_CUZMN_UHH6B
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  votes:
                    type: array
                    items:
                      type: object
                      properties:
                        proposal_id:
                          type: string
                          format: uint64
                        voter:
                          type: string
                        option:
                          description: >-
                            Deprecated: Prefer to use `options` instead. This
                            field is set in queries

                            if and only if `len(options) == 1` and that option has weight 1. In all

                            other cases, this field will default to VOTE_OPTION_UNSPECIFIED.
                          type: string
                          enum:
                            - VOTE_OPTION_UNSPECIFIED
                            - VOTE_OPTION_YES
                            - VOTE_OPTION_ABSTAIN
                            - VOTE_OPTION_NO
                            - VOTE_OPTION_NO_WITH_VETO
                          default: VOTE_OPTION_UNSPECIFIED
                        options:
                          type: array
                          items:
                            type: object
                            properties:
                              option:
                                type: string
                                enum:
                                  - VOTE_OPTION_UNSPECIFIED
                                  - VOTE_OPTION_YES
                                  - VOTE_OPTION_ABSTAIN
                                  - VOTE_OPTION_NO
                                  - VOTE_OPTION_NO_WITH_VETO
                                default: VOTE_OPTION_UNSPECIFIED
                                description: >-
                                  VoteOption enumerates the valid vote options
                                  for a given governance proposal.

                                   - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.
                                   - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.
                                   - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.
                                   - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.
                                   - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
                              weight:
                                type: string
                            description: >-
                              WeightedVoteOption defines a unit of vote for vote
                              split.


                              Since: cosmos-sdk 0.43
                          title: "Since: cosmos-sdk 0.43"
                      description: >-
                        Vote defines a vote on a governance proposal.

                        A Vote consists of a proposal ID, the voter, and the vote option.
                    description: votes defined the queried votes.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        type: string
                        format: byte
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                      total:
                        type: string
                        format: uint64
                        title: >-
                          total is total number of results available if
                          PageRequest.count_total

                          was set, its value is undefined otherwise
                    description: >-
                      PageResponse is to be embedded in gRPC response messages
                      where the

                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
                description: QueryVotesResponse is the response type for the Query/Votes RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: proposal_id
          description: proposal_id defines the unique id of the proposal.
          in: path
          required: true
          schema:
            type: string
            format: uint64
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key should

            be set.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in UIs.

            count_total is only respected when offset is used. It is ignored when key

            is set.
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - gRPC Gateway API
  "/cosmos/gov/v1beta1/proposals/{proposal_id}/votes/{voter}":
    get:
      summary: Vote queries voted information based on proposalID, voterAddr.
      operationId: Vote_EEPTN_B2KI4_N98ZU_75TWF
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  vote:
                    type: object
                    properties:
                      proposal_id:
                        type: string
                        format: uint64
                      voter:
                        type: string
                      option:
                        description: >-
                          Deprecated: Prefer to use `options` instead. This
                          field is set in queries

                          if and only if `len(options) == 1` and that option has weight 1. In all

                          other cases, this field will default to VOTE_OPTION_UNSPECIFIED.
                        type: string
                        enum:
                          - VOTE_OPTION_UNSPECIFIED
                          - VOTE_OPTION_YES
                          - VOTE_OPTION_ABSTAIN
                          - VOTE_OPTION_NO
                          - VOTE_OPTION_NO_WITH_VETO
                        default: VOTE_OPTION_UNSPECIFIED
                      options:
                        type: array
                        items:
                          type: object
                          properties:
                            option:
                              type: string
                              enum:
                                - VOTE_OPTION_UNSPECIFIED
                                - VOTE_OPTION_YES
                                - VOTE_OPTION_ABSTAIN
                                - VOTE_OPTION_NO
                                - VOTE_OPTION_NO_WITH_VETO
                              default: VOTE_OPTION_UNSPECIFIED
                              description: >-
                                VoteOption enumerates the valid vote options for
                                a given governance proposal.

                                 - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.
                                 - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.
                                 - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.
                                 - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.
                                 - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
                            weight:
                              type: string
                          description: >-
                            WeightedVoteOption defines a unit of vote for vote
                            split.


                            Since: cosmos-sdk 0.43
                        title: "Since: cosmos-sdk 0.43"
                    description: >-
                      Vote defines a vote on a governance proposal.

                      A Vote consists of a proposal ID, the voter, and the vote option.
                description: QueryVoteResponse is the response type for the Query/Vote RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: proposal_id
          description: proposal_id defines the unique id of the proposal.
          in: path
          required: true
          schema:
            type: string
            format: uint64
        - name: voter
          description: voter defines the oter address for the proposals.
          in: path
          required: true
          schema:
            type: string
      tags:
        - gRPC Gateway API
  "/omniflix/marketplace/v1beta1/auction-by-nft/{nft_id}":
    get:
      operationId: AuctionByNftId_GILR8_OHH1B_1R00N_9D9GR
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  auction:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uint64
                      nft_id:
                        type: string
                      denom_id:
                        type: string
                      start_price:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the custom method

                          signatures required by gogoproto.
                      start_time:
                        type: string
                        format: date-time
                      end_time:
                        type: string
                        format: date-time
                      owner:
                        type: string
                      increment_percentage:
                        type: string
                      whitelist_accounts:
                        type: array
                        items:
                          type: string
                      split_shares:
                        type: array
                        items:
                          type: object
                          properties:
                            address:
                              type: string
                            weight:
                              type: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: nft_id
          in: path
          required: true
          schema:
            type: string
      tags:
        - gRPC Gateway API
  /omniflix/marketplace/v1beta1/auctions:
    get:
      summary: auction queries
      operationId: Auctions_DSISR_SHQPT_YA6Q9_Q7U0U
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  auctions:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uint64
                        nft_id:
                          type: string
                        denom_id:
                          type: string
                        start_price:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: >-
                            Coin defines a token with a denomination and an
                            amount.


                            NOTE: The amount field is an Int which implements the custom method

                            signatures required by gogoproto.
                        start_time:
                          type: string
                          format: date-time
                        end_time:
                          type: string
                          format: date-time
                        owner:
                          type: string
                        increment_percentage:
                          type: string
                        whitelist_accounts:
                          type: array
                          items:
                            type: string
                        split_shares:
                          type: array
                          items:
                            type: object
                            properties:
                              address:
                                type: string
                              weight:
                                type: string
                  pagination:
                    type: object
                    properties:
                      next_key:
                        type: string
                        format: byte
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                      total:
                        type: string
                        format: uint64
                        title: >-
                          total is total number of results available if
                          PageRequest.count_total

                          was set, its value is undefined otherwise
                    description: >-
                      PageResponse is to be embedded in gRPC response messages
                      where the

                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum:
              - AUCTION_STATUS_UNSPECIFIED
              - AUCTION_STATUS_INACTIVE
              - AUCTION_STATUS_ACTIVE
            default: AUCTION_STATUS_UNSPECIFIED
        - name: owner
          in: query
          required: false
          schema:
            type: string
        - name: price_denom
          in: query
          required: false
          schema:
            type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key should

            be set.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in UIs.

            count_total is only respected when offset is used. It is ignored when key

            is set.
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - gRPC Gateway API
  "/omniflix/marketplace/v1beta1/auctions-by-owner/{owner}":
    get:
      operationId: AuctionsByOwner_W2JTI_Y7GD0_GZ1DR_Y22N0
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  auctions:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uint64
                        nft_id:
                          type: string
                        denom_id:
                          type: string
                        start_price:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: >-
                            Coin defines a token with a denomination and an
                            amount.


                            NOTE: The amount field is an Int which implements the custom method

                            signatures required by gogoproto.
                        start_time:
                          type: string
                          format: date-time
                        end_time:
                          type: string
                          format: date-time
                        owner:
                          type: string
                        increment_percentage:
                          type: string
                        whitelist_accounts:
                          type: array
                          items:
                            type: string
                        split_shares:
                          type: array
                          items:
                            type: object
                            properties:
                              address:
                                type: string
                              weight:
                                type: string
                  pagination:
                    type: object
                    properties:
                      next_key:
                        type: string
                        format: byte
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                      total:
                        type: string
                        format: uint64
                        title: >-
                          total is total number of results available if
                          PageRequest.count_total

                          was set, its value is undefined otherwise
                    description: >-
                      PageResponse is to be embedded in gRPC response messages
                      where the

                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key should

            be set.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in UIs.

            count_total is only respected when offset is used. It is ignored when key

            is set.
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - gRPC Gateway API
  "/omniflix/marketplace/v1beta1/auctions-by-price-denom/{price_denom}":
    get:
      operationId: AuctionsByPriceDenom_NGIAK_OZQX2_HOY8G_L89K3
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  auctions:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uint64
                        nft_id:
                          type: string
                        denom_id:
                          type: string
                        start_price:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: >-
                            Coin defines a token with a denomination and an
                            amount.


                            NOTE: The amount field is an Int which implements the custom method

                            signatures required by gogoproto.
                        start_time:
                          type: string
                          format: date-time
                        end_time:
                          type: string
                          format: date-time
                        owner:
                          type: string
                        increment_percentage:
                          type: string
                        whitelist_accounts:
                          type: array
                          items:
                            type: string
                        split_shares:
                          type: array
                          items:
                            type: object
                            properties:
                              address:
                                type: string
                              weight:
                                type: string
                  pagination:
                    type: object
                    properties:
                      next_key:
                        type: string
                        format: byte
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                      total:
                        type: string
                        format: uint64
                        title: >-
                          total is total number of results available if
                          PageRequest.count_total

                          was set, its value is undefined otherwise
                    description: >-
                      PageResponse is to be embedded in gRPC response messages
                      where the

                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: price_denom
          in: path
          required: true
          schema:
            type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key should

            be set.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in UIs.

            count_total is only respected when offset is used. It is ignored when key

            is set.
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - gRPC Gateway API
  "/omniflix/marketplace/v1beta1/auctions/{id}":
    get:
      operationId: Auction_EZ4AT_F2ZD8_EXFJV_E1RKU
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  auction:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uint64
                      nft_id:
                        type: string
                      denom_id:
                        type: string
                      start_price:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the custom method

                          signatures required by gogoproto.
                      start_time:
                        type: string
                        format: date-time
                      end_time:
                        type: string
                        format: date-time
                      owner:
                        type: string
                      increment_percentage:
                        type: string
                      whitelist_accounts:
                        type: array
                        items:
                          type: string
                      split_shares:
                        type: array
                        items:
                          type: object
                          properties:
                            address:
                              type: string
                            weight:
                              type: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uint64
      tags:
        - gRPC Gateway API
  /omniflix/marketplace/v1beta1/bids:
    get:
      operationId: Bids_T96ZH_22P37_M9CXG_L42YS
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  bids:
                    type: array
                    items:
                      type: object
                      properties:
                        auction_id:
                          type: string
                          format: uint64
                        bidder:
                          type: string
                        amount:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: >-
                            Coin defines a token with a denomination and an
                            amount.


                            NOTE: The amount field is an Int which implements the custom method

                            signatures required by gogoproto.
                        time:
                          type: string
                          format: date-time
                  pagination:
                    type: object
                    properties:
                      next_key:
                        type: string
                        format: byte
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                      total:
                        type: string
                        format: uint64
                        title: >-
                          total is total number of results available if
                          PageRequest.count_total

                          was set, its value is undefined otherwise
                    description: >-
                      PageResponse is to be embedded in gRPC response messages
                      where the

                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: bidder
          in: query
          required: false
          schema:
            type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key should

            be set.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in UIs.

            count_total is only respected when offset is used. It is ignored when key

            is set.
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - gRPC Gateway API
  "/omniflix/marketplace/v1beta1/bids/{id}":
    get:
      operationId: Bid_0M649_M3TWC_S3DSI_0M3U2
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  bid:
                    type: object
                    properties:
                      auction_id:
                        type: string
                        format: uint64
                      bidder:
                        type: string
                      amount:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the custom method

                          signatures required by gogoproto.
                      time:
                        type: string
                        format: date-time
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uint64
      tags:
        - gRPC Gateway API
  "/omniflix/marketplace/v1beta1/listing-by-nft/{nft_id}":
    get:
      operationId: ListingByNftId_RY39K_H46LV_JMR94_7E119
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  listing:
                    type: object
                    properties:
                      id:
                        type: string
                      nft_id:
                        type: string
                      denom_id:
                        type: string
                      price:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the custom method

                          signatures required by gogoproto.
                      owner:
                        type: string
                      split_shares:
                        type: array
                        items:
                          type: object
                          properties:
                            address:
                              type: string
                            weight:
                              type: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: nft_id
          in: path
          required: true
          schema:
            type: string
      tags:
        - gRPC Gateway API
  /omniflix/marketplace/v1beta1/listings:
    get:
      operationId: Listings_MK5MI_JN9UU_71N1N_EHNCC
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  listings:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        nft_id:
                          type: string
                        denom_id:
                          type: string
                        price:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: >-
                            Coin defines a token with a denomination and an
                            amount.


                            NOTE: The amount field is an Int which implements the custom method

                            signatures required by gogoproto.
                        owner:
                          type: string
                        split_shares:
                          type: array
                          items:
                            type: object
                            properties:
                              address:
                                type: string
                              weight:
                                type: string
                  pagination:
                    type: object
                    properties:
                      next_key:
                        type: string
                        format: byte
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                      total:
                        type: string
                        format: uint64
                        title: >-
                          total is total number of results available if
                          PageRequest.count_total

                          was set, its value is undefined otherwise
                    description: >-
                      PageResponse is to be embedded in gRPC response messages
                      where the

                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: owner
          in: query
          required: false
          schema:
            type: string
        - name: price_denom
          in: query
          required: false
          schema:
            type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key should

            be set.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in UIs.

            count_total is only respected when offset is used. It is ignored when key

            is set.
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - gRPC Gateway API
  "/omniflix/marketplace/v1beta1/listings-by-owner/{owner}":
    get:
      operationId: ListingsByOwner_3IUXN_QGYG1_P5OM4_G1N18
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  listings:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        nft_id:
                          type: string
                        denom_id:
                          type: string
                        price:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: >-
                            Coin defines a token with a denomination and an
                            amount.


                            NOTE: The amount field is an Int which implements the custom method

                            signatures required by gogoproto.
                        owner:
                          type: string
                        split_shares:
                          type: array
                          items:
                            type: object
                            properties:
                              address:
                                type: string
                              weight:
                                type: string
                  pagination:
                    type: object
                    properties:
                      next_key:
                        type: string
                        format: byte
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                      total:
                        type: string
                        format: uint64
                        title: >-
                          total is total number of results available if
                          PageRequest.count_total

                          was set, its value is undefined otherwise
                    description: >-
                      PageResponse is to be embedded in gRPC response messages
                      where the

                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key should

            be set.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in UIs.

            count_total is only respected when offset is used. It is ignored when key

            is set.
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - gRPC Gateway API
  "/omniflix/marketplace/v1beta1/listings-by-price-denom/{price_denom}":
    get:
      operationId: ListingsByPriceDenom_J2PFR_LZG7F_31HNO_8N2JH
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  listings:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        nft_id:
                          type: string
                        denom_id:
                          type: string
                        price:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: >-
                            Coin defines a token with a denomination and an
                            amount.


                            NOTE: The amount field is an Int which implements the custom method

                            signatures required by gogoproto.
                        owner:
                          type: string
                        split_shares:
                          type: array
                          items:
                            type: object
                            properties:
                              address:
                                type: string
                              weight:
                                type: string
                  pagination:
                    type: object
                    properties:
                      next_key:
                        type: string
                        format: byte
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                      total:
                        type: string
                        format: uint64
                        title: >-
                          total is total number of results available if
                          PageRequest.count_total

                          was set, its value is undefined otherwise
                    description: >-
                      PageResponse is to be embedded in gRPC response messages
                      where the

                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: price_denom
          in: path
          required: true
          schema:
            type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key should

            be set.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in UIs.

            count_total is only respected when offset is used. It is ignored when key

            is set.
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - gRPC Gateway API
  "/omniflix/marketplace/v1beta1/listings/{id}":
    get:
      operationId: Listing_IKFQJ_0S2IN_NT4QE_38ILV
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  listing:
                    type: object
                    properties:
                      id:
                        type: string
                      nft_id:
                        type: string
                      denom_id:
                        type: string
                      price:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the custom method

                          signatures required by gogoproto.
                      owner:
                        type: string
                      split_shares:
                        type: array
                        items:
                          type: object
                          properties:
                            address:
                              type: string
                            weight:
                              type: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - gRPC Gateway API
  /omniflix/marketplace/v1beta1/params:
    get:
      summary: Params queries params of the marketplace module.
      operationId: Params_5KS65_VD116_B3MNM_WL3V3
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  params:
                    description: params defines the parameters of the module.
                    type: object
                    properties:
                      sale_commission:
                        type: string
                      distribution:
                        type: object
                        properties:
                          staking:
                            type: string
                          community_pool:
                            type: string
                      bid_close_duration:
                        type: string
                description: QueryParamsResponse is the response type for the Query/Params RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      tags:
        - gRPC Gateway API
  "/cosmos/upgrade/v1beta1/applied_plan/{name}":
    get:
      summary: AppliedPlan queries a previously applied upgrade plan by its name.
      operationId: AppliedPlan_9IHFW_JFBSK_T2PUB_OHV2J
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  height:
                    type: string
                    format: int64
                    description: height is the block height at which the plan was applied.
                description: >-
                  QueryAppliedPlanResponse is the response type for the
                  Query/AppliedPlan RPC

                  method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: name
          description: name is the name of the applied plan to query for.
          in: path
          required: true
          schema:
            type: string
      tags:
        - gRPC Gateway API
  /cosmos/upgrade/v1beta1/current_plan:
    get:
      summary: CurrentPlan queries the current upgrade plan.
      operationId: CurrentPlan_MBFE6_6ZWQU_7TCMK_58ELT
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  plan:
                    description: plan is the current upgrade plan.
                    type: object
                    properties:
                      name:
                        type: string
                        description: >-
                          Sets the name for the upgrade. This name will be used
                          by the upgraded

                          version of the software to apply any special "on-upgrade" commands during

                          the first BeginBlock method after the upgrade is applied. It is also used

                          to detect whether a software version can handle a given upgrade. If no

                          upgrade handler with this name has been set in the software, it will be

                          assumed that the software is out-of-date when the upgrade Time or Height is

                          reached and the software will exit.
                      time:
                        type: string
                        format: date-time
                        description: >-
                          Deprecated: Time based upgrades have been deprecated.
                          Time based upgrade logic

                          has been removed from the SDK.

                          If this field is not empty, an error will be thrown.
                      height:
                        type: string
                        format: int64
                        description: |-
                          The height at which the upgrade must be performed.
                          Only used if Time is not set.
                      info:
                        type: string
                        title: >-
                          Any application specific upgrade info to be included
                          on-chain

                          such as a git commit that validators could automatically upgrade to
                      upgraded_client_state:
                        type: object
                        properties:
                          type_url:
                            type: string
                          value:
                            type: string
                            format: byte
                        description: >-
                          Deprecated: UpgradedClientState field has been
                          deprecated. IBC upgrade logic has been

                          moved to the IBC module in the sub module 02-client.

                          If this field is not empty, an error will be thrown.
                description: >-
                  QueryCurrentPlanResponse is the response type for the
                  Query/CurrentPlan RPC

                  method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      tags:
        - gRPC Gateway API
  /cosmos/upgrade/v1beta1/module_versions:
    get:
      summary: ModuleVersions queries the list of module versions from state.
      description: "Since: cosmos-sdk 0.43"
      operationId: ModuleVersions_030GG_I6AG3_42D8G_WCTU1
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  module_versions:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          title: name of the app module
                        version:
                          type: string
                          format: uint64
                          title: consensus version of the app module
                      description: >-
                        ModuleVersion specifies a module and its consensus
                        version.


                        Since: cosmos-sdk 0.43
                    description: module_versions is a list of module names with their consensus
                      versions.
                description: >-
                  QueryModuleVersionsResponse is the response type for the
                  Query/ModuleVersions

                  RPC method.


                  Since: cosmos-sdk 0.43
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: module_name
          description: |-
            module_name is a field to query a specific module
            consensus version from state. Leaving this empty will
            fetch the full list of module versions from state.
          in: query
          required: false
          schema:
            type: string
      tags:
        - gRPC Gateway API
  "/cosmos/upgrade/v1beta1/upgraded_consensus_state/{last_height}":
    get:
      summary: >-
        UpgradedConsensusState queries the consensus state that will serve

        as a trusted kernel for the next version of this chain. It will only be

        stored at the last height of this chain.

        UpgradedConsensusState RPC not supported with legacy querier

        This rpc is deprecated now that IBC has its own replacement

        (https://github.com/cosmos/ibc-go/blob/2c880a22e9f9cc75f62b527ca94aa75ce1106001/proto/ibc/core/client/v1/query.proto#L54)
      operationId: UpgradedConsensusState_DNLDD_W6HP6_6EXJQ_KMW42
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  upgraded_consensus_state:
                    type: string
                    format: byte
                    title: "Since: cosmos-sdk 0.43"
                description: >-
                  QueryUpgradedConsensusStateResponse is the response type for
                  the Query/UpgradedConsensusState

                  RPC method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: last_height
          description: |-
            last height of the current chain must be sent in request
            as this is the height under which next consensus state is stored
          in: path
          required: true
          schema:
            type: string
            format: int64
      tags:
        - gRPC Gateway API
  /omniflix/alloc/v1beta1/params:
    get:
      operationId: Params_B08WF_HDQ4U_D0OHJ_T02EL
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  params:
                    description: params defines the parameters of the module.
                    type: object
                    properties:
                      distribution_proportions:
                        title: distribution_proportions defines the proportion of the minted denom
                        type: object
                        properties:
                          staking_rewards:
                            type: string
                          nft_incentives:
                            type: string
                          node_hosts_incentives:
                            type: string
                          developer_rewards:
                            type: string
                          community_pool:
                            type: string
                      weighted_developer_rewards_receivers:
                        type: array
                        items:
                          type: object
                          properties:
                            address:
                              type: string
                            weight:
                              type: string
                        title: address to receive developer rewards
                      weighted_nft_incentives_receivers:
                        type: array
                        items:
                          type: object
                          properties:
                            address:
                              type: string
                            weight:
                              type: string
                        title: address to receive nft incentives
                      weighted_node_hosts_incentives_receivers:
                        type: array
                        items:
                          type: object
                          properties:
                            address:
                              type: string
                            weight:
                              type: string
                        title: address to receive node host incentives
                description: QueryParamsResponse is the response type for the Query/Params RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      tags:
        - gRPC Gateway API
  /cosmos/base/node/v1beta1/config:
    get:
      summary: Config queries for the operator configuration.
      operationId: Config_G6O0M_FS0U7_6HVG3_SDQPJ
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  minimum_gas_price:
                    type: string
                description: ConfigResponse defines the response structure for the Config gRPC
                  query.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      tags:
        - gRPC Gateway API
  /cosmos/base/tendermint/v1beta1/blocks/latest:
    get:
      summary: GetLatestBlock returns the latest block.
      operationId: GetLatestBlock_B0SJ7_P1JR6_AYULS_UDEP8
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  block_id:
                    type: object
                    properties:
                      hash:
                        type: string
                        format: byte
                      part_set_header:
                        type: object
                        properties:
                          total:
                            type: integer
                            format: int64
                          hash:
                            type: string
                            format: byte
                        title: PartsetHeader
                    title: BlockID
                  block:
                    type: object
                    properties:
                      header:
                        type: object
                        properties:
                          version:
                            title: basic block info
                            type: object
                            properties:
                              block:
                                type: string
                                format: uint64
                              app:
                                type: string
                                format: uint64
                            description: >-
                              Consensus captures the consensus rules for
                              processing a block in the blockchain,

                              including all blockchain data structures and the rules of the application's

                              state transition machine.
                          chain_id:
                            type: string
                          height:
                            type: string
                            format: int64
                          time:
                            type: string
                            format: date-time
                          last_block_id:
                            type: object
                            properties:
                              hash:
                                type: string
                                format: byte
                              part_set_header:
                                type: object
                                properties:
                                  total:
                                    type: integer
                                    format: int64
                                  hash:
                                    type: string
                                    format: byte
                                title: PartsetHeader
                            title: BlockID
                          last_commit_hash:
                            type: string
                            format: byte
                            title: hashes of block data
                          data_hash:
                            type: string
                            format: byte
                          validators_hash:
                            type: string
                            format: byte
                            title: hashes from the app output from the prev block
                          next_validators_hash:
                            type: string
                            format: byte
                          consensus_hash:
                            type: string
                            format: byte
                          app_hash:
                            type: string
                            format: byte
                          last_results_hash:
                            type: string
                            format: byte
                          evidence_hash:
                            type: string
                            format: byte
                            title: consensus info
                          proposer_address:
                            type: string
                            format: byte
                        description: Header defines the structure of a block header.
                      data:
                        type: object
                        properties:
                          txs:
                            type: array
                            items:
                              type: string
                              format: byte
                            description: >-
                              Txs that will be applied by state @
                              block.Height+1.

                              NOTE: not all txs here are valid.  We're just agreeing on the order first.

                              This means that block.AppHash does not include these txs.
                        title: Data contains the set of transactions included in the block
                      evidence:
                        type: object
                        properties:
                          evidence:
                            type: array
                            items:
                              type: object
                              properties:
                                duplicate_vote_evidence:
                                  type: object
                                  properties:
                                    vote_a:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          enum:
                                            - SIGNED_MSG_TYPE_UNKNOWN
                                            - SIGNED_MSG_TYPE_PREVOTE
                                            - SIGNED_MSG_TYPE_PRECOMMIT
                                            - SIGNED_MSG_TYPE_PROPOSAL
                                          default: SIGNED_MSG_TYPE_UNKNOWN
                                          description: >-
                                            SignedMsgType is a type of signed
                                            message in the consensus.

                                             - SIGNED_MSG_TYPE_PREVOTE: Votes
                                             - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                        height:
                                          type: string
                                          format: int64
                                        round:
                                          type: integer
                                          format: int32
                                        block_id:
                                          type: object
                                          properties:
                                            hash:
                                              type: string
                                              format: byte
                                            part_set_header:
                                              type: object
                                              properties:
                                                total:
                                                  type: integer
                                                  format: int64
                                                hash:
                                                  type: string
                                                  format: byte
                                              title: PartsetHeader
                                          title: BlockID
                                        timestamp:
                                          type: string
                                          format: date-time
                                        validator_address:
                                          type: string
                                          format: byte
                                        validator_index:
                                          type: integer
                                          format: int32
                                        signature:
                                          type: string
                                          format: byte
                                      description: >-
                                        Vote represents a prevote, precommit, or
                                        commit vote from validators for

                                        consensus.
                                    vote_b:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          enum:
                                            - SIGNED_MSG_TYPE_UNKNOWN
                                            - SIGNED_MSG_TYPE_PREVOTE
                                            - SIGNED_MSG_TYPE_PRECOMMIT
                                            - SIGNED_MSG_TYPE_PROPOSAL
                                          default: SIGNED_MSG_TYPE_UNKNOWN
                                          description: >-
                                            SignedMsgType is a type of signed
                                            message in the consensus.

                                             - SIGNED_MSG_TYPE_PREVOTE: Votes
                                             - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                        height:
                                          type: string
                                          format: int64
                                        round:
                                          type: integer
                                          format: int32
                                        block_id:
                                          type: object
                                          properties:
                                            hash:
                                              type: string
                                              format: byte
                                            part_set_header:
                                              type: object
                                              properties:
                                                total:
                                                  type: integer
                                                  format: int64
                                                hash:
                                                  type: string
                                                  format: byte
                                              title: PartsetHeader
                                          title: BlockID
                                        timestamp:
                                          type: string
                                          format: date-time
                                        validator_address:
                                          type: string
                                          format: byte
                                        validator_index:
                                          type: integer
                                          format: int32
                                        signature:
                                          type: string
                                          format: byte
                                      description: >-
                                        Vote represents a prevote, precommit, or
                                        commit vote from validators for

                                        consensus.
                                    total_voting_power:
                                      type: string
                                      format: int64
                                    validator_power:
                                      type: string
                                      format: int64
                                    timestamp:
                                      type: string
                                      format: date-time
                                  description: DuplicateVoteEvidence contains evidence of a validator signed two
                                    conflicting votes.
                                light_client_attack_evidence:
                                  type: object
                                  properties:
                                    conflicting_block:
                                      type: object
                                      properties:
                                        signed_header:
                                          type: object
                                          properties:
                                            header:
                                              type: object
                                              properties:
                                                version:
                                                  title: basic block info
                                                  type: object
                                                  properties:
                                                    block:
                                                      type: string
                                                      format: uint64
                                                    app:
                                                      type: string
                                                      format: uint64
                                                  description: >-
                                                    Consensus captures the
                                                    consensus rules for
                                                    processing a block in the
                                                    blockchain,

                                                    including all blockchain data structures and the rules of the application's

                                                    state transition machine.
                                                chain_id:
                                                  type: string
                                                height:
                                                  type: string
                                                  format: int64
                                                time:
                                                  type: string
                                                  format: date-time
                                                last_block_id:
                                                  type: object
                                                  properties:
                                                    hash:
                                                      type: string
                                                      format: byte
                                                    part_set_header:
                                                      type: object
                                                      properties:
                                                        total:
                                                          type: integer
                                                          format: int64
                                                        hash:
                                                          type: string
                                                          format: byte
                                                      title: PartsetHeader
                                                  title: BlockID
                                                last_commit_hash:
                                                  type: string
                                                  format: byte
                                                  title: hashes of block data
                                                data_hash:
                                                  type: string
                                                  format: byte
                                                validators_hash:
                                                  type: string
                                                  format: byte
                                                  title: hashes from the app output from the prev block
                                                next_validators_hash:
                                                  type: string
                                                  format: byte
                                                consensus_hash:
                                                  type: string
                                                  format: byte
                                                app_hash:
                                                  type: string
                                                  format: byte
                                                last_results_hash:
                                                  type: string
                                                  format: byte
                                                evidence_hash:
                                                  type: string
                                                  format: byte
                                                  title: consensus info
                                                proposer_address:
                                                  type: string
                                                  format: byte
                                              description: Header defines the structure of a block header.
                                            commit:
                                              type: object
                                              properties:
                                                height:
                                                  type: string
                                                  format: int64
                                                round:
                                                  type: integer
                                                  format: int32
                                                block_id:
                                                  type: object
                                                  properties:
                                                    hash:
                                                      type: string
                                                      format: byte
                                                    part_set_header:
                                                      type: object
                                                      properties:
                                                        total:
                                                          type: integer
                                                          format: int64
                                                        hash:
                                                          type: string
                                                          format: byte
                                                      title: PartsetHeader
                                                  title: BlockID
                                                signatures:
                                                  type: array
                                                  items:
                                                    type: object
                                                    properties:
                                                      block_id_flag:
                                                        type: string
                                                        enum:
                                                          - BLOCK_ID_FLAG_UNKNOWN
                                                          - BLOCK_ID_FLAG_ABSENT
                                                          - BLOCK_ID_FLAG_COMMIT
                                                          - BLOCK_ID_FLAG_NIL
                                                        default: BLOCK_ID_FLAG_UNKNOWN
                                                        title: BlockIdFlag indicates which BlcokID the signature is for
                                                      validator_address:
                                                        type: string
                                                        format: byte
                                                      timestamp:
                                                        type: string
                                                        format: date-time
                                                      signature:
                                                        type: string
                                                        format: byte
                                                    description: CommitSig is a part of the Vote included in a Commit.
                                              description: Commit contains the evidence that a block was committed by a set of
                                                validators.
                                        validator_set:
                                          type: object
                                          properties:
                                            validators:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  address:
                                                    type: string
                                                    format: byte
                                                  pub_key:
                                                    type: object
                                                    properties:
                                                      ed25519:
                                                        type: string
                                                        format: byte
                                                      secp256k1:
                                                        type: string
                                                        format: byte
                                                    title: PublicKey defines the keys available for use with Validators
                                                  voting_power:
                                                    type: string
                                                    format: int64
                                                  proposer_priority:
                                                    type: string
                                                    format: int64
                                            proposer:
                                              type: object
                                              properties:
                                                address:
                                                  type: string
                                                  format: byte
                                                pub_key:
                                                  type: object
                                                  properties:
                                                    ed25519:
                                                      type: string
                                                      format: byte
                                                    secp256k1:
                                                      type: string
                                                      format: byte
                                                  title: PublicKey defines the keys available for use with Validators
                                                voting_power:
                                                  type: string
                                                  format: int64
                                                proposer_priority:
                                                  type: string
                                                  format: int64
                                            total_voting_power:
                                              type: string
                                              format: int64
                                    common_height:
                                      type: string
                                      format: int64
                                    byzantine_validators:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          address:
                                            type: string
                                            format: byte
                                          pub_key:
                                            type: object
                                            properties:
                                              ed25519:
                                                type: string
                                                format: byte
                                              secp256k1:
                                                type: string
                                                format: byte
                                            title: PublicKey defines the keys available for use with Validators
                                          voting_power:
                                            type: string
                                            format: int64
                                          proposer_priority:
                                            type: string
                                            format: int64
                                    total_voting_power:
                                      type: string
                                      format: int64
                                    timestamp:
                                      type: string
                                      format: date-time
                                  description: LightClientAttackEvidence contains evidence of a set of validators
                                    attempting to mislead a light client.
                      last_commit:
                        type: object
                        properties:
                          height:
                            type: string
                            format: int64
                          round:
                            type: integer
                            format: int32
                          block_id:
                            type: object
                            properties:
                              hash:
                                type: string
                                format: byte
                              part_set_header:
                                type: object
                                properties:
                                  total:
                                    type: integer
                                    format: int64
                                  hash:
                                    type: string
                                    format: byte
                                title: PartsetHeader
                            title: BlockID
                          signatures:
                            type: array
                            items:
                              type: object
                              properties:
                                block_id_flag:
                                  type: string
                                  enum:
                                    - BLOCK_ID_FLAG_UNKNOWN
                                    - BLOCK_ID_FLAG_ABSENT
                                    - BLOCK_ID_FLAG_COMMIT
                                    - BLOCK_ID_FLAG_NIL
                                  default: BLOCK_ID_FLAG_UNKNOWN
                                  title: BlockIdFlag indicates which BlcokID the signature is for
                                validator_address:
                                  type: string
                                  format: byte
                                timestamp:
                                  type: string
                                  format: date-time
                                signature:
                                  type: string
                                  format: byte
                              description: CommitSig is a part of the Vote included in a Commit.
                        description: Commit contains the evidence that a block was committed by a set of
                          validators.
                description: GetLatestBlockResponse is the response type for the
                  Query/GetLatestBlock RPC method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      tags:
        - gRPC Gateway API
  "/cosmos/base/tendermint/v1beta1/blocks/{height}":
    get:
      summary: GetBlockByHeight queries block for given height.
      operationId: GetBlockByHeight_FQ688_XYMUA_FVYQ3_2UKDA
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  block_id:
                    type: object
                    properties:
                      hash:
                        type: string
                        format: byte
                      part_set_header:
                        type: object
                        properties:
                          total:
                            type: integer
                            format: int64
                          hash:
                            type: string
                            format: byte
                        title: PartsetHeader
                    title: BlockID
                  block:
                    type: object
                    properties:
                      header:
                        type: object
                        properties:
                          version:
                            title: basic block info
                            type: object
                            properties:
                              block:
                                type: string
                                format: uint64
                              app:
                                type: string
                                format: uint64
                            description: >-
                              Consensus captures the consensus rules for
                              processing a block in the blockchain,

                              including all blockchain data structures and the rules of the application's

                              state transition machine.
                          chain_id:
                            type: string
                          height:
                            type: string
                            format: int64
                          time:
                            type: string
                            format: date-time
                          last_block_id:
                            type: object
                            properties:
                              hash:
                                type: string
                                format: byte
                              part_set_header:
                                type: object
                                properties:
                                  total:
                                    type: integer
                                    format: int64
                                  hash:
                                    type: string
                                    format: byte
                                title: PartsetHeader
                            title: BlockID
                          last_commit_hash:
                            type: string
                            format: byte
                            title: hashes of block data
                          data_hash:
                            type: string
                            format: byte
                          validators_hash:
                            type: string
                            format: byte
                            title: hashes from the app output from the prev block
                          next_validators_hash:
                            type: string
                            format: byte
                          consensus_hash:
                            type: string
                            format: byte
                          app_hash:
                            type: string
                            format: byte
                          last_results_hash:
                            type: string
                            format: byte
                          evidence_hash:
                            type: string
                            format: byte
                            title: consensus info
                          proposer_address:
                            type: string
                            format: byte
                        description: Header defines the structure of a block header.
                      data:
                        type: object
                        properties:
                          txs:
                            type: array
                            items:
                              type: string
                              format: byte
                            description: >-
                              Txs that will be applied by state @
                              block.Height+1.

                              NOTE: not all txs here are valid.  We're just agreeing on the order first.

                              This means that block.AppHash does not include these txs.
                        title: Data contains the set of transactions included in the block
                      evidence:
                        type: object
                        properties:
                          evidence:
                            type: array
                            items:
                              type: object
                              properties:
                                duplicate_vote_evidence:
                                  type: object
                                  properties:
                                    vote_a:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          enum:
                                            - SIGNED_MSG_TYPE_UNKNOWN
                                            - SIGNED_MSG_TYPE_PREVOTE
                                            - SIGNED_MSG_TYPE_PRECOMMIT
                                            - SIGNED_MSG_TYPE_PROPOSAL
                                          default: SIGNED_MSG_TYPE_UNKNOWN
                                          description: >-
                                            SignedMsgType is a type of signed
                                            message in the consensus.

                                             - SIGNED_MSG_TYPE_PREVOTE: Votes
                                             - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                        height:
                                          type: string
                                          format: int64
                                        round:
                                          type: integer
                                          format: int32
                                        block_id:
                                          type: object
                                          properties:
                                            hash:
                                              type: string
                                              format: byte
                                            part_set_header:
                                              type: object
                                              properties:
                                                total:
                                                  type: integer
                                                  format: int64
                                                hash:
                                                  type: string
                                                  format: byte
                                              title: PartsetHeader
                                          title: BlockID
                                        timestamp:
                                          type: string
                                          format: date-time
                                        validator_address:
                                          type: string
                                          format: byte
                                        validator_index:
                                          type: integer
                                          format: int32
                                        signature:
                                          type: string
                                          format: byte
                                      description: >-
                                        Vote represents a prevote, precommit, or
                                        commit vote from validators for

                                        consensus.
                                    vote_b:
                                      type: object
                                      properties:
                                        type:
                                          type: string
                                          enum:
                                            - SIGNED_MSG_TYPE_UNKNOWN
                                            - SIGNED_MSG_TYPE_PREVOTE
                                            - SIGNED_MSG_TYPE_PRECOMMIT
                                            - SIGNED_MSG_TYPE_PROPOSAL
                                          default: SIGNED_MSG_TYPE_UNKNOWN
                                          description: >-
                                            SignedMsgType is a type of signed
                                            message in the consensus.

                                             - SIGNED_MSG_TYPE_PREVOTE: Votes
                                             - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                        height:
                                          type: string
                                          format: int64
                                        round:
                                          type: integer
                                          format: int32
                                        block_id:
                                          type: object
                                          properties:
                                            hash:
                                              type: string
                                              format: byte
                                            part_set_header:
                                              type: object
                                              properties:
                                                total:
                                                  type: integer
                                                  format: int64
                                                hash:
                                                  type: string
                                                  format: byte
                                              title: PartsetHeader
                                          title: BlockID
                                        timestamp:
                                          type: string
                                          format: date-time
                                        validator_address:
                                          type: string
                                          format: byte
                                        validator_index:
                                          type: integer
                                          format: int32
                                        signature:
                                          type: string
                                          format: byte
                                      description: >-
                                        Vote represents a prevote, precommit, or
                                        commit vote from validators for

                                        consensus.
                                    total_voting_power:
                                      type: string
                                      format: int64
                                    validator_power:
                                      type: string
                                      format: int64
                                    timestamp:
                                      type: string
                                      format: date-time
                                  description: DuplicateVoteEvidence contains evidence of a validator signed two
                                    conflicting votes.
                                light_client_attack_evidence:
                                  type: object
                                  properties:
                                    conflicting_block:
                                      type: object
                                      properties:
                                        signed_header:
                                          type: object
                                          properties:
                                            header:
                                              type: object
                                              properties:
                                                version:
                                                  title: basic block info
                                                  type: object
                                                  properties:
                                                    block:
                                                      type: string
                                                      format: uint64
                                                    app:
                                                      type: string
                                                      format: uint64
                                                  description: >-
                                                    Consensus captures the
                                                    consensus rules for
                                                    processing a block in the
                                                    blockchain,

                                                    including all blockchain data structures and the rules of the application's

                                                    state transition machine.
                                                chain_id:
                                                  type: string
                                                height:
                                                  type: string
                                                  format: int64
                                                time:
                                                  type: string
                                                  format: date-time
                                                last_block_id:
                                                  type: object
                                                  properties:
                                                    hash:
                                                      type: string
                                                      format: byte
                                                    part_set_header:
                                                      type: object
                                                      properties:
                                                        total:
                                                          type: integer
                                                          format: int64
                                                        hash:
                                                          type: string
                                                          format: byte
                                                      title: PartsetHeader
                                                  title: BlockID
                                                last_commit_hash:
                                                  type: string
                                                  format: byte
                                                  title: hashes of block data
                                                data_hash:
                                                  type: string
                                                  format: byte
                                                validators_hash:
                                                  type: string
                                                  format: byte
                                                  title: hashes from the app output from the prev block
                                                next_validators_hash:
                                                  type: string
                                                  format: byte
                                                consensus_hash:
                                                  type: string
                                                  format: byte
                                                app_hash:
                                                  type: string
                                                  format: byte
                                                last_results_hash:
                                                  type: string
                                                  format: byte
                                                evidence_hash:
                                                  type: string
                                                  format: byte
                                                  title: consensus info
                                                proposer_address:
                                                  type: string
                                                  format: byte
                                              description: Header defines the structure of a block header.
                                            commit:
                                              type: object
                                              properties:
                                                height:
                                                  type: string
                                                  format: int64
                                                round:
                                                  type: integer
                                                  format: int32
                                                block_id:
                                                  type: object
                                                  properties:
                                                    hash:
                                                      type: string
                                                      format: byte
                                                    part_set_header:
                                                      type: object
                                                      properties:
                                                        total:
                                                          type: integer
                                                          format: int64
                                                        hash:
                                                          type: string
                                                          format: byte
                                                      title: PartsetHeader
                                                  title: BlockID
                                                signatures:
                                                  type: array
                                                  items:
                                                    type: object
                                                    properties:
                                                      block_id_flag:
                                                        type: string
                                                        enum:
                                                          - BLOCK_ID_FLAG_UNKNOWN
                                                          - BLOCK_ID_FLAG_ABSENT
                                                          - BLOCK_ID_FLAG_COMMIT
                                                          - BLOCK_ID_FLAG_NIL
                                                        default: BLOCK_ID_FLAG_UNKNOWN
                                                        title: BlockIdFlag indicates which BlcokID the signature is for
                                                      validator_address:
                                                        type: string
                                                        format: byte
                                                      timestamp:
                                                        type: string
                                                        format: date-time
                                                      signature:
                                                        type: string
                                                        format: byte
                                                    description: CommitSig is a part of the Vote included in a Commit.
                                              description: Commit contains the evidence that a block was committed by a set of
                                                validators.
                                        validator_set:
                                          type: object
                                          properties:
                                            validators:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  address:
                                                    type: string
                                                    format: byte
                                                  pub_key:
                                                    type: object
                                                    properties:
                                                      ed25519:
                                                        type: string
                                                        format: byte
                                                      secp256k1:
                                                        type: string
                                                        format: byte
                                                    title: PublicKey defines the keys available for use with Validators
                                                  voting_power:
                                                    type: string
                                                    format: int64
                                                  proposer_priority:
                                                    type: string
                                                    format: int64
                                            proposer:
                                              type: object
                                              properties:
                                                address:
                                                  type: string
                                                  format: byte
                                                pub_key:
                                                  type: object
                                                  properties:
                                                    ed25519:
                                                      type: string
                                                      format: byte
                                                    secp256k1:
                                                      type: string
                                                      format: byte
                                                  title: PublicKey defines the keys available for use with Validators
                                                voting_power:
                                                  type: string
                                                  format: int64
                                                proposer_priority:
                                                  type: string
                                                  format: int64
                                            total_voting_power:
                                              type: string
                                              format: int64
                                    common_height:
                                      type: string
                                      format: int64
                                    byzantine_validators:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          address:
                                            type: string
                                            format: byte
                                          pub_key:
                                            type: object
                                            properties:
                                              ed25519:
                                                type: string
                                                format: byte
                                              secp256k1:
                                                type: string
                                                format: byte
                                            title: PublicKey defines the keys available for use with Validators
                                          voting_power:
                                            type: string
                                            format: int64
                                          proposer_priority:
                                            type: string
                                            format: int64
                                    total_voting_power:
                                      type: string
                                      format: int64
                                    timestamp:
                                      type: string
                                      format: date-time
                                  description: LightClientAttackEvidence contains evidence of a set of validators
                                    attempting to mislead a light client.
                      last_commit:
                        type: object
                        properties:
                          height:
                            type: string
                            format: int64
                          round:
                            type: integer
                            format: int32
                          block_id:
                            type: object
                            properties:
                              hash:
                                type: string
                                format: byte
                              part_set_header:
                                type: object
                                properties:
                                  total:
                                    type: integer
                                    format: int64
                                  hash:
                                    type: string
                                    format: byte
                                title: PartsetHeader
                            title: BlockID
                          signatures:
                            type: array
                            items:
                              type: object
                              properties:
                                block_id_flag:
                                  type: string
                                  enum:
                                    - BLOCK_ID_FLAG_UNKNOWN
                                    - BLOCK_ID_FLAG_ABSENT
                                    - BLOCK_ID_FLAG_COMMIT
                                    - BLOCK_ID_FLAG_NIL
                                  default: BLOCK_ID_FLAG_UNKNOWN
                                  title: BlockIdFlag indicates which BlcokID the signature is for
                                validator_address:
                                  type: string
                                  format: byte
                                timestamp:
                                  type: string
                                  format: date-time
                                signature:
                                  type: string
                                  format: byte
                              description: CommitSig is a part of the Vote included in a Commit.
                        description: Commit contains the evidence that a block was committed by a set of
                          validators.
                description: GetBlockByHeightResponse is the response type for the
                  Query/GetBlockByHeight RPC method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: height
          in: path
          required: true
          schema:
            type: string
            format: int64
      tags:
        - gRPC Gateway API
  /cosmos/base/tendermint/v1beta1/node_info:
    get:
      summary: GetNodeInfo queries the current node info.
      operationId: GetNodeInfo_WKA3E_VJ4AU_XR8Q2_NZJHE
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  default_node_info:
                    type: object
                    properties:
                      protocol_version:
                        type: object
                        properties:
                          p2p:
                            type: string
                            format: uint64
                          block:
                            type: string
                            format: uint64
                          app:
                            type: string
                            format: uint64
                      default_node_id:
                        type: string
                      listen_addr:
                        type: string
                      network:
                        type: string
                      version:
                        type: string
                      channels:
                        type: string
                        format: byte
                      moniker:
                        type: string
                      other:
                        type: object
                        properties:
                          tx_index:
                            type: string
                          rpc_address:
                            type: string
                  application_version:
                    type: object
                    properties:
                      name:
                        type: string
                      app_name:
                        type: string
                      version:
                        type: string
                      git_commit:
                        type: string
                      build_tags:
                        type: string
                      go_version:
                        type: string
                      build_deps:
                        type: array
                        items:
                          type: object
                          properties:
                            path:
                              type: string
                              title: module path
                            version:
                              type: string
                              title: module version
                            sum:
                              type: string
                              title: checksum
                          title: Module is the type for VersionInfo
                      cosmos_sdk_version:
                        type: string
                        title: "Since: cosmos-sdk 0.43"
                    description: VersionInfo is the type for the GetNodeInfoResponse message.
                description: GetNodeInfoResponse is the request type for the Query/GetNodeInfo
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      tags:
        - gRPC Gateway API
  /cosmos/base/tendermint/v1beta1/syncing:
    get:
      summary: GetSyncing queries node syncing.
      operationId: GetSyncing_KZH61_0Y85U_XWVUT_QH5SD
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  syncing:
                    type: boolean
                description: GetSyncingResponse is the response type for the Query/GetSyncing
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      tags:
        - gRPC Gateway API
  /cosmos/base/tendermint/v1beta1/validatorsets/latest:
    get:
      summary: GetLatestValidatorSet queries latest validator-set.
      operationId: GetLatestValidatorSet_HSG70_GANC0_ROFMK_8TYM1
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  block_height:
                    type: string
                    format: int64
                  validators:
                    type: array
                    items:
                      type: object
                      properties:
                        address:
                          type: string
                        pub_key:
                          type: object
                          properties:
                            type_url:
                              type: string
                            value:
                              type: string
                              format: byte
                        voting_power:
                          type: string
                          format: int64
                        proposer_priority:
                          type: string
                          format: int64
                      description: Validator is the type for the validator-set.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        type: string
                        format: byte
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                      total:
                        type: string
                        format: uint64
                        title: >-
                          total is total number of results available if
                          PageRequest.count_total

                          was set, its value is undefined otherwise
                    description: >-
                      PageResponse is to be embedded in gRPC response messages
                      where the

                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
                description: GetLatestValidatorSetResponse is the response type for the
                  Query/GetValidatorSetByHeight RPC method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key should

            be set.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in UIs.

            count_total is only respected when offset is used. It is ignored when key

            is set.
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - gRPC Gateway API
  "/cosmos/base/tendermint/v1beta1/validatorsets/{height}":
    get:
      summary: GetValidatorSetByHeight queries validator-set at a given height.
      operationId: GetValidatorSetByHeight_H8L3V_DPURI_BR5UB_PWRHC
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  block_height:
                    type: string
                    format: int64
                  validators:
                    type: array
                    items:
                      type: object
                      properties:
                        address:
                          type: string
                        pub_key:
                          type: object
                          properties:
                            type_url:
                              type: string
                            value:
                              type: string
                              format: byte
                        voting_power:
                          type: string
                          format: int64
                        proposer_priority:
                          type: string
                          format: int64
                      description: Validator is the type for the validator-set.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        type: string
                        format: byte
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                      total:
                        type: string
                        format: uint64
                        title: >-
                          total is total number of results available if
                          PageRequest.count_total

                          was set, its value is undefined otherwise
                    description: >-
                      PageResponse is to be embedded in gRPC response messages
                      where the

                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
                description: GetValidatorSetByHeightResponse is the response type for the
                  Query/GetValidatorSetByHeight RPC method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: height
          in: path
          required: true
          schema:
            type: string
            format: int64
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key should

            be set.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in UIs.

            count_total is only respected when offset is used. It is ignored when key

            is set.
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - gRPC Gateway API
  /omniflix/itc/v1/campaigns:
    get:
      operationId: Campaigns_16GCS_R4CKA_94O8W_DCMCN
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  campaigns:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uint64
                        name:
                          type: string
                        description:
                          type: string
                        start_time:
                          type: string
                          format: date-time
                        end_time:
                          type: string
                          format: date-time
                        creator:
                          type: string
                        nft_denom_id:
                          type: string
                        max_allowed_claims:
                          type: string
                          format: uint64
                        interaction:
                          type: string
                          enum:
                            - INTERACTION_TYPE_BURN
                            - INTERACTION_TYPE_TRANSFER
                            - INTERACTION_TYPE_HOLD
                          default: INTERACTION_TYPE_BURN
                        claim_type:
                          type: string
                          enum:
                            - CLAIM_TYPE_FT
                            - CLAIM_TYPE_NFT
                            - CLAIM_TYPE_FT_AND_NFT
                          default: CLAIM_TYPE_FT
                        tokens_per_claim:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: >-
                            Coin defines a token with a denomination and an
                            amount.


                            NOTE: The amount field is an Int which implements the custom method

                            signatures required by gogoproto.
                        total_tokens:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: >-
                            Coin defines a token with a denomination and an
                            amount.


                            NOTE: The amount field is an Int which implements the custom method

                            signatures required by gogoproto.
                        available_tokens:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: >-
                            Coin defines a token with a denomination and an
                            amount.


                            NOTE: The amount field is an Int which implements the custom method

                            signatures required by gogoproto.
                        received_nft_ids:
                          type: array
                          items:
                            type: string
                        nft_mint_details:
                          type: object
                          properties:
                            denom_id:
                              type: string
                            name:
                              type: string
                            description:
                              type: string
                            media_uri:
                              type: string
                            preview_uri:
                              type: string
                            royalty_share:
                              type: string
                            transferable:
                              type: boolean
                            extensible:
                              type: boolean
                            nsfw:
                              type: boolean
                            data:
                              type: string
                        distribution:
                          type: object
                          properties:
                            type:
                              type: string
                              enum:
                                - DISTRIBUTION_TYPE_INSTANT
                                - DISTRIBUTION_TYPE_STREAM
                              default: DISTRIBUTION_TYPE_INSTANT
                            stream_duration:
                              type: string
                  pagination:
                    type: object
                    properties:
                      next_key:
                        type: string
                        format: byte
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                      total:
                        type: string
                        format: uint64
                        title: >-
                          total is total number of results available if
                          PageRequest.count_total

                          was set, its value is undefined otherwise
                    description: >-
                      PageResponse is to be embedded in gRPC response messages
                      where the

                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
                description: >-
                  QueryCampaignsResponse is the response type for the
                  Query/Campaigns RPC

                  method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum:
              - CAMPAIGN_STATUS_UNSPECIFIED
              - CAMPAIGN_STATUS_INACTIVE
              - CAMPAIGN_STATUS_ACTIVE
            default: CAMPAIGN_STATUS_UNSPECIFIED
        - name: creator
          in: query
          required: false
          schema:
            type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key should

            be set.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in UIs.

            count_total is only respected when offset is used. It is ignored when key

            is set.
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - gRPC Gateway API
  "/omniflix/itc/v1/campaigns/{campaign_id}":
    get:
      operationId: Campaign_SQEI1_ORPPV_MDPVH_E31TK
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  Campaign:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uint64
                      name:
                        type: string
                      description:
                        type: string
                      start_time:
                        type: string
                        format: date-time
                      end_time:
                        type: string
                        format: date-time
                      creator:
                        type: string
                      nft_denom_id:
                        type: string
                      max_allowed_claims:
                        type: string
                        format: uint64
                      interaction:
                        type: string
                        enum:
                          - INTERACTION_TYPE_BURN
                          - INTERACTION_TYPE_TRANSFER
                          - INTERACTION_TYPE_HOLD
                        default: INTERACTION_TYPE_BURN
                      claim_type:
                        type: string
                        enum:
                          - CLAIM_TYPE_FT
                          - CLAIM_TYPE_NFT
                          - CLAIM_TYPE_FT_AND_NFT
                        default: CLAIM_TYPE_FT
                      tokens_per_claim:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the custom method

                          signatures required by gogoproto.
                      total_tokens:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the custom method

                          signatures required by gogoproto.
                      available_tokens:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the custom method

                          signatures required by gogoproto.
                      received_nft_ids:
                        type: array
                        items:
                          type: string
                      nft_mint_details:
                        type: object
                        properties:
                          denom_id:
                            type: string
                          name:
                            type: string
                          description:
                            type: string
                          media_uri:
                            type: string
                          preview_uri:
                            type: string
                          royalty_share:
                            type: string
                          transferable:
                            type: boolean
                          extensible:
                            type: boolean
                          nsfw:
                            type: boolean
                          data:
                            type: string
                      distribution:
                        type: object
                        properties:
                          type:
                            type: string
                            enum:
                              - DISTRIBUTION_TYPE_INSTANT
                              - DISTRIBUTION_TYPE_STREAM
                            default: DISTRIBUTION_TYPE_INSTANT
                          stream_duration:
                            type: string
                description: QueryCampaignResponse is the response type for the Query/Campaign
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: campaign_id
          in: path
          required: true
          schema:
            type: string
            format: uint64
      tags:
        - gRPC Gateway API
  /omniflix/itc/v1/claims:
    get:
      operationId: Claims_T66QW_LAJRY_YCJ0F_V0UF7
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  claims:
                    type: array
                    items:
                      type: object
                      properties:
                        campaign_id:
                          type: string
                          format: uint64
                        address:
                          type: string
                        nft_id:
                          type: string
                        interaction:
                          type: string
                          enum:
                            - INTERACTION_TYPE_BURN
                            - INTERACTION_TYPE_TRANSFER
                            - INTERACTION_TYPE_HOLD
                          default: INTERACTION_TYPE_BURN
                  pagination:
                    type: object
                    properties:
                      next_key:
                        type: string
                        format: byte
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                      total:
                        type: string
                        format: uint64
                        title: >-
                          total is total number of results available if
                          PageRequest.count_total

                          was set, its value is undefined otherwise
                    description: >-
                      PageResponse is to be embedded in gRPC response messages
                      where the

                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: campaign_id
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: address
          in: query
          required: false
          schema:
            type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key should

            be set.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in UIs.

            count_total is only respected when offset is used. It is ignored when key

            is set.
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - gRPC Gateway API
  /omniflix/itc/v1/params:
    get:
      operationId: Params_MNK3P_CNF6A_D7W7X_SIDMB
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  params:
                    description: params defines the parameters of the module.
                    type: object
                    properties:
                      max_campaign_duration:
                        type: string
                      creation_fee:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the custom method

                          signatures required by gogoproto.
                description: QueryParamsResponse is the response type for the Query/Params RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      tags:
        - gRPC Gateway API
  /cosmos/slashing/v1beta1/params:
    get:
      summary: Params queries the parameters of slashing module
      operationId: Params_MVN38_SZHYJ_MKR8C_V84QN
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  params:
                    type: object
                    properties:
                      signed_blocks_window:
                        type: string
                        format: int64
                      min_signed_per_window:
                        type: string
                        format: byte
                      downtime_jail_duration:
                        type: string
                      slash_fraction_double_sign:
                        type: string
                        format: byte
                      slash_fraction_downtime:
                        type: string
                        format: byte
                    description: Params represents the parameters used for by the slashing module.
                title: QueryParamsResponse is the response type for the Query/Params RPC method
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      tags:
        - gRPC Gateway API
  /cosmos/slashing/v1beta1/signing_infos:
    get:
      summary: SigningInfos queries signing info of all validators
      operationId: SigningInfos_0JVUT_TDH5I_6ODVO_51VFB
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  info:
                    type: array
                    items:
                      type: object
                      properties:
                        address:
                          type: string
                        start_height:
                          type: string
                          format: int64
                          title: Height at which validator was first a candidate OR was unjailed
                        index_offset:
                          type: string
                          format: int64
                          description: >-
                            Index which is incremented each time the validator
                            was a bonded

                            in a block and may have signed a precommit or not. This in conjunction with the

                            `SignedBlocksWindow` param determines the index in the `MissedBlocksBitArray`.
                        jailed_until:
                          type: string
                          format: date-time
                          description: Timestamp until which the validator is jailed due to liveness
                            downtime.
                        tombstoned:
                          type: boolean
                          description: >-
                            Whether or not a validator has been tombstoned
                            (killed out of validator set). It is set

                            once the validator commits an equivocation or for any other configured misbehiavor.
                        missed_blocks_counter:
                          type: string
                          format: int64
                          description: >-
                            A counter kept to avoid unnecessary array reads.

                            Note that `Sum(MissedBlocksBitArray)` always equals `MissedBlocksCounter`.
                      description: >-
                        ValidatorSigningInfo defines a validator's signing info
                        for monitoring their

                        liveness activity.
                    title: info is the signing info of all validators
                  pagination:
                    type: object
                    properties:
                      next_key:
                        type: string
                        format: byte
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                      total:
                        type: string
                        format: uint64
                        title: >-
                          total is total number of results available if
                          PageRequest.count_total

                          was set, its value is undefined otherwise
                    description: >-
                      PageResponse is to be embedded in gRPC response messages
                      where the

                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
                title: >-
                  QuerySigningInfosResponse is the response type for the
                  Query/SigningInfos RPC

                  method
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key should

            be set.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in UIs.

            count_total is only respected when offset is used. It is ignored when key

            is set.
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - gRPC Gateway API
  "/cosmos/slashing/v1beta1/signing_infos/{cons_address}":
    get:
      summary: SigningInfo queries the signing info of given cons address
      operationId: SigningInfo_YHDTF_DZUYU_R17TY_4BF1E
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  val_signing_info:
                    type: object
                    properties:
                      address:
                        type: string
                      start_height:
                        type: string
                        format: int64
                        title: Height at which validator was first a candidate OR was unjailed
                      index_offset:
                        type: string
                        format: int64
                        description: >-
                          Index which is incremented each time the validator was
                          a bonded

                          in a block and may have signed a precommit or not. This in conjunction with the

                          `SignedBlocksWindow` param determines the index in the `MissedBlocksBitArray`.
                      jailed_until:
                        type: string
                        format: date-time
                        description: Timestamp until which the validator is jailed due to liveness
                          downtime.
                      tombstoned:
                        type: boolean
                        description: >-
                          Whether or not a validator has been tombstoned (killed
                          out of validator set). It is set

                          once the validator commits an equivocation or for any other configured misbehiavor.
                      missed_blocks_counter:
                        type: string
                        format: int64
                        description: >-
                          A counter kept to avoid unnecessary array reads.

                          Note that `Sum(MissedBlocksBitArray)` always equals `MissedBlocksCounter`.
                    description: >-
                      ValidatorSigningInfo defines a validator's signing info
                      for monitoring their

                      liveness activity.
                    title: val_signing_info is the signing info of requested val cons address
                title: >-
                  QuerySigningInfoResponse is the response type for the
                  Query/SigningInfo RPC

                  method
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: cons_address
          description: cons_address is the address to query signing info of
          in: path
          required: true
          schema:
            type: string
      tags:
        - gRPC Gateway API
  "/cosmos/bank/v1beta1/balances/{address}":
    get:
      summary: AllBalances queries the balance of all coins for a single account.
      operationId: AllBalances_WOSLV
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  balances:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the custom method

                        signatures required by gogoproto.
                    description: balances is the balances of all the coins.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        type: string
                        format: byte
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                      total:
                        type: string
                        format: uint64
                        title: >-
                          total is total number of results available if
                          PageRequest.count_total

                          was set, its value is undefined otherwise
                    description: >-
                      PageResponse is to be embedded in gRPC response messages
                      where the

                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
                description: >-
                  QueryAllBalancesResponse is the response type for the
                  Query/AllBalances RPC

                  method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: address
          description: address is the address to query balances for.
          in: path
          required: true
          schema:
            type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key should

            be set.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in UIs.

            count_total is only respected when offset is used. It is ignored when key

            is set.
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - gRPC Gateway API
  "/cosmos/bank/v1beta1/balances/{address}/by_denom":
    get:
      summary: Balance queries the balance of a single coin for a single account.
      operationId: Balance_GC3NW
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  balance:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the custom method

                      signatures required by gogoproto.
                description: QueryBalanceResponse is the response type for the Query/Balance RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: address
          description: address is the address to query balances for.
          in: path
          required: true
          schema:
            type: string
        - name: denom
          description: denom is the coin denom to query balances for.
          in: query
          required: false
          schema:
            type: string
      tags:
        - gRPC Gateway API
  /cosmos/bank/v1beta1/denoms_metadata:
    get:
      summary: DenomsMetadata queries the client metadata for all registered coin
        denominations.
      operationId: DenomsMetadata_ROADA
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadatas:
                    type: array
                    items:
                      type: object
                      properties:
                        description:
                          type: string
                        denom_units:
                          type: array
                          items:
                            type: object
                            properties:
                              denom:
                                type: string
                                description: denom represents the string name of the given denom unit (e.g
                                  uatom).
                              exponent:
                                type: integer
                                format: int64
                                description: >-
                                  exponent represents power of 10 exponent that
                                  one must

                                  raise the base_denom to in order to equal the given DenomUnit's denom

                                  1 denom = 1^exponent base_denom

                                  (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with

                                  exponent = 6, thus: 1 atom = 10^6 uatom).
                              aliases:
                                type: array
                                items:
                                  type: string
                                title: aliases is a list of string aliases for the given denom
                            description: >-
                              DenomUnit represents a struct that describes a
                              given

                              denomination unit of the basic token.
                          title: denom_units represents the list of DenomUnit's for a given coin
                        base:
                          type: string
                          description: base represents the base denom (should be the DenomUnit with
                            exponent = 0).
                        display:
                          type: string
                          description: |-
                            display indicates the suggested denom that should be
                            displayed in clients.
                        name:
                          type: string
                          description: "Since: cosmos-sdk 0.43"
                          title: "name defines the name of the token (eg: Cosmos Atom)"
                        symbol:
                          type: string
                          description: >-
                            symbol is the token symbol usually shown on
                            exchanges (eg: ATOM). This can

                            be the same as the display.


                            Since: cosmos-sdk 0.43
                      description: |-
                        Metadata represents a struct that describes
                        a basic token.
                    description: metadata provides the client information for all the registered
                      tokens.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        type: string
                        format: byte
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                      total:
                        type: string
                        format: uint64
                        title: >-
                          total is total number of results available if
                          PageRequest.count_total

                          was set, its value is undefined otherwise
                    description: >-
                      PageResponse is to be embedded in gRPC response messages
                      where the

                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
                description: >-
                  QueryDenomsMetadataResponse is the response type for the
                  Query/DenomsMetadata RPC

                  method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key should

            be set.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in UIs.

            count_total is only respected when offset is used. It is ignored when key

            is set.
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - gRPC Gateway API
  "/cosmos/bank/v1beta1/denoms_metadata/{denom}":
    get:
      summary: DenomsMetadata queries the client metadata of a given coin denomination.
      operationId: DenomMetadata_GNHCK
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    type: object
                    properties:
                      description:
                        type: string
                      denom_units:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                              description: denom represents the string name of the given denom unit (e.g
                                uatom).
                            exponent:
                              type: integer
                              format: int64
                              description: >-
                                exponent represents power of 10 exponent that
                                one must

                                raise the base_denom to in order to equal the given DenomUnit's denom

                                1 denom = 1^exponent base_denom

                                (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with

                                exponent = 6, thus: 1 atom = 10^6 uatom).
                            aliases:
                              type: array
                              items:
                                type: string
                              title: aliases is a list of string aliases for the given denom
                          description: |-
                            DenomUnit represents a struct that describes a given
                            denomination unit of the basic token.
                        title: denom_units represents the list of DenomUnit's for a given coin
                      base:
                        type: string
                        description: base represents the base denom (should be the DenomUnit with
                          exponent = 0).
                      display:
                        type: string
                        description: |-
                          display indicates the suggested denom that should be
                          displayed in clients.
                      name:
                        type: string
                        description: "Since: cosmos-sdk 0.43"
                        title: "name defines the name of the token (eg: Cosmos Atom)"
                      symbol:
                        type: string
                        description: >-
                          symbol is the token symbol usually shown on exchanges
                          (eg: ATOM). This can

                          be the same as the display.


                          Since: cosmos-sdk 0.43
                    description: |-
                      Metadata represents a struct that describes
                      a basic token.
                description: >-
                  QueryDenomMetadataResponse is the response type for the
                  Query/DenomMetadata RPC

                  method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: denom
          description: denom is the coin denom to query the metadata for.
          in: path
          required: true
          schema:
            type: string
      tags:
        - gRPC Gateway API
  /cosmos/bank/v1beta1/params:
    get:
      summary: Params queries the parameters of x/bank module.
      operationId: Params_R66SS
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  params:
                    type: object
                    properties:
                      send_enabled:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                            enabled:
                              type: boolean
                          description: >-
                            SendEnabled maps coin denom to a send_enabled status
                            (whether a denom is

                            sendable).
                      default_send_enabled:
                        type: boolean
                    description: Params defines the parameters for the bank module.
                description: QueryParamsResponse defines the response type for querying x/bank
                  parameters.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      tags:
        - gRPC Gateway API
  "/cosmos/bank/v1beta1/spendable_balances/{address}":
    get:
      summary: |-
        SpendableBalances queries the spenable balance of all coins for a single
        account.
      operationId: SpendableBalances_UKJF7
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  balances:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the custom method

                        signatures required by gogoproto.
                    description: balances is the spendable balances of all the coins.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        type: string
                        format: byte
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                      total:
                        type: string
                        format: uint64
                        title: >-
                          total is total number of results available if
                          PageRequest.count_total

                          was set, its value is undefined otherwise
                    description: >-
                      PageResponse is to be embedded in gRPC response messages
                      where the

                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
                description: >-
                  QuerySpendableBalancesResponse defines the gRPC response
                  structure for querying

                  an account's spendable balances.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: address
          description: address is the address to query spendable balances for.
          in: path
          required: true
          schema:
            type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key should

            be set.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in UIs.

            count_total is only respected when offset is used. It is ignored when key

            is set.
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - gRPC Gateway API
  /cosmos/bank/v1beta1/supply:
    get:
      summary: TotalSupply queries the total supply of all coins.
      operationId: TotalSupply_515G2
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  supply:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the custom method

                        signatures required by gogoproto.
                    title: supply is the supply of the coins
                  pagination:
                    type: object
                    properties:
                      next_key:
                        type: string
                        format: byte
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                      total:
                        type: string
                        format: uint64
                        title: >-
                          total is total number of results available if
                          PageRequest.count_total

                          was set, its value is undefined otherwise
                    description: >-
                      PageResponse is to be embedded in gRPC response messages
                      where the

                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
                title: >-
                  QueryTotalSupplyResponse is the response type for the
                  Query/TotalSupply RPC

                  method
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key should

            be set.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in UIs.

            count_total is only respected when offset is used. It is ignored when key

            is set.
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - gRPC Gateway API
  "/cosmos/bank/v1beta1/supply/{denom}":
    get:
      summary: SupplyOf queries the supply of a single coin.
      operationId: SupplyOf_18JE3
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  amount:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the custom method

                      signatures required by gogoproto.
                description: QuerySupplyOfResponse is the response type for the Query/SupplyOf
                  RPC method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: denom
          description: denom is the coin denom to query balances for.
          in: path
          required: true
          schema:
            type: string
      tags:
        - gRPC Gateway API
  /cosmos/auth/v1beta1/accounts:
    get:
      summary: Accounts returns all the existing accounts
      description: "Since: cosmos-sdk 0.43"
      operationId: Accounts_YMUL4
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  accounts:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
                    title: accounts are the existing accounts
                  pagination:
                    type: object
                    properties:
                      next_key:
                        type: string
                        format: byte
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                      total:
                        type: string
                        format: uint64
                        title: >-
                          total is total number of results available if
                          PageRequest.count_total

                          was set, its value is undefined otherwise
                    description: >-
                      PageResponse is to be embedded in gRPC response messages
                      where the

                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
                description: >-
                  QueryAccountsResponse is the response type for the
                  Query/Accounts RPC method.


                  Since: cosmos-sdk 0.43
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key should

            be set.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in UIs.

            count_total is only respected when offset is used. It is ignored when key

            is set.
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - gRPC Gateway API
  "/cosmos/auth/v1beta1/accounts/{address}":
    get:
      summary: Account returns account details based on address.
      operationId: Account_VCTVW
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  account:
                    type: object
                    properties:
                      type_url:
                        type: string
                      value:
                        type: string
                        format: byte
                    description: account defines the account of the corresponding address.
                description: QueryAccountResponse is the response type for the Query/Account RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: address
          description: address defines the address to query for.
          in: path
          required: true
          schema:
            type: string
      tags:
        - gRPC Gateway API
  "/cosmos/auth/v1beta1/module_accounts/{name}":
    get:
      summary: ModuleAccountByName returns the module account info by module name
      operationId: ModuleAccountByName_F6OQL
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  account:
                    type: object
                    properties:
                      type_url:
                        type: string
                      value:
                        type: string
                        format: byte
                description: QueryModuleAccountByNameResponse is the response type for the
                  Query/ModuleAccountByName RPC method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      tags:
        - gRPC Gateway API
  /cosmos/auth/v1beta1/params:
    get:
      summary: Params queries all parameters.
      operationId: Params_SAP54
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  params:
                    description: params defines the parameters of the module.
                    type: object
                    properties:
                      max_memo_characters:
                        type: string
                        format: uint64
                      tx_sig_limit:
                        type: string
                        format: uint64
                      tx_size_cost_per_byte:
                        type: string
                        format: uint64
                      sig_verify_cost_ed25519:
                        type: string
                        format: uint64
                      sig_verify_cost_secp256k1:
                        type: string
                        format: uint64
                description: QueryParamsResponse is the response type for the Query/Params RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      tags:
        - gRPC Gateway API
  /cosmos/authz/v1beta1/grants:
    get:
      summary: Returns list of `Authorization`, granted to the grantee by the granter.
      operationId: Grants_F4R6Y
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  grants:
                    type: array
                    items:
                      type: object
                      properties:
                        authorization:
                          type: object
                          properties:
                            type_url:
                              type: string
                            value:
                              type: string
                              format: byte
                        expiration:
                          type: string
                          format: date-time
                      description: |-
                        Grant gives permissions to execute
                        the provide method with expiration time.
                    description: authorizations is a list of grants granted for grantee by granter.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        type: string
                        format: byte
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                      total:
                        type: string
                        format: uint64
                        title: >-
                          total is total number of results available if
                          PageRequest.count_total

                          was set, its value is undefined otherwise
                    description: >-
                      PageResponse is to be embedded in gRPC response messages
                      where the

                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
                description: QueryGrantsResponse is the response type for the
                  Query/Authorizations RPC method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: granter
          in: query
          required: false
          schema:
            type: string
        - name: grantee
          in: query
          required: false
          schema:
            type: string
        - name: msg_type_url
          description: Optional, msg_type_url, when set, will query only grants matching
            given msg type.
          in: query
          required: false
          schema:
            type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key should

            be set.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in UIs.

            count_total is only respected when offset is used. It is ignored when key

            is set.
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - gRPC Gateway API
  "/cosmos/authz/v1beta1/grants/grantee/{grantee}":
    get:
      summary: GranteeGrants returns a list of `GrantAuthorization` by grantee.
      description: "Since: cosmos-sdk 0.45.2"
      operationId: GranteeGrants_FR95B
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  grants:
                    type: array
                    items:
                      type: object
                      properties:
                        granter:
                          type: string
                        grantee:
                          type: string
                        authorization:
                          type: object
                          properties:
                            type_url:
                              type: string
                            value:
                              type: string
                              format: byte
                        expiration:
                          type: string
                          format: date-time
                      description: "Since: cosmos-sdk 0.45.2"
                      title: >-
                        GrantAuthorization extends a grant with both the
                        addresses of the grantee and granter.

                        It is used in genesis.proto and query.proto
                    description: grants is a list of grants granted to the grantee.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        type: string
                        format: byte
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                      total:
                        type: string
                        format: uint64
                        title: >-
                          total is total number of results available if
                          PageRequest.count_total

                          was set, its value is undefined otherwise
                    description: >-
                      PageResponse is to be embedded in gRPC response messages
                      where the

                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
                description: QueryGranteeGrantsResponse is the response type for the
                  Query/GranteeGrants RPC method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: grantee
          in: path
          required: true
          schema:
            type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key should

            be set.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in UIs.

            count_total is only respected when offset is used. It is ignored when key

            is set.
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - gRPC Gateway API
  "/cosmos/authz/v1beta1/grants/granter/{granter}":
    get:
      summary: GranterGrants returns list of `GrantAuthorization`, granted by granter.
      description: "Since: cosmos-sdk 0.45.2"
      operationId: GranterGrants_OYK7Q
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  grants:
                    type: array
                    items:
                      type: object
                      properties:
                        granter:
                          type: string
                        grantee:
                          type: string
                        authorization:
                          type: object
                          properties:
                            type_url:
                              type: string
                            value:
                              type: string
                              format: byte
                        expiration:
                          type: string
                          format: date-time
                      description: "Since: cosmos-sdk 0.45.2"
                      title: >-
                        GrantAuthorization extends a grant with both the
                        addresses of the grantee and granter.

                        It is used in genesis.proto and query.proto
                    description: grants is a list of grants granted by the granter.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        type: string
                        format: byte
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                      total:
                        type: string
                        format: uint64
                        title: >-
                          total is total number of results available if
                          PageRequest.count_total

                          was set, its value is undefined otherwise
                    description: >-
                      PageResponse is to be embedded in gRPC response messages
                      where the

                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
                description: QueryGranterGrantsResponse is the response type for the
                  Query/GranterGrants RPC method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: granter
          in: path
          required: true
          schema:
            type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key should

            be set.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in UIs.

            count_total is only respected when offset is used. It is ignored when key

            is set.
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - gRPC Gateway API
  /streaming-payments:
    get:
      operationId: StreamingPayments_90BJH
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  stream_payments:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        sender:
                          type: string
                        recipient:
                          type: string
                        total_amount:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: >-
                            Coin defines a token with a denomination and an
                            amount.


                            NOTE: The amount field is an Int which implements the custom method

                            signatures required by gogoproto.
                        stream_type:
                          type: string
                          enum:
                            - PAYMENT_TYPE_DELAYED
                            - PAYMENT_TYPE_CONTINUOUS
                            - PAYMENT_TYPE_PERIODIC
                          default: PAYMENT_TYPE_DELAYED
                        lock_height:
                          type: string
                          format: int64
                        start_time:
                          type: string
                          format: date-time
                        end_time:
                          type: string
                          format: date-time
                        total_transferred:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: >-
                            Coin defines a token with a denomination and an
                            amount.


                            NOTE: The amount field is an Int which implements the custom method

                            signatures required by gogoproto.
                        last_transferred_at:
                          type: string
                          format: date-time
                  pagination:
                    type: object
                    properties:
                      next_key:
                        type: string
                        format: byte
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                      total:
                        type: string
                        format: uint64
                        title: >-
                          total is total number of results available if
                          PageRequest.count_total

                          was set, its value is undefined otherwise
                    description: >-
                      PageResponse is to be embedded in gRPC response messages
                      where the

                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: sender
          in: query
          required: false
          schema:
            type: string
        - name: recipient
          in: query
          required: false
          schema:
            type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key should

            be set.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in UIs.

            count_total is only respected when offset is used. It is ignored when key

            is set.
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - gRPC Gateway API
  "/streaming-payments/{id}":
    get:
      operationId: StreamingPayment_HAET4
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  stream_payment:
                    type: object
                    properties:
                      id:
                        type: string
                      sender:
                        type: string
                      recipient:
                        type: string
                      total_amount:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the custom method

                          signatures required by gogoproto.
                      stream_type:
                        type: string
                        enum:
                          - PAYMENT_TYPE_DELAYED
                          - PAYMENT_TYPE_CONTINUOUS
                          - PAYMENT_TYPE_PERIODIC
                        default: PAYMENT_TYPE_DELAYED
                      lock_height:
                        type: string
                        format: int64
                      start_time:
                        type: string
                        format: date-time
                      end_time:
                        type: string
                        format: date-time
                      total_transferred:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the custom method

                          signatures required by gogoproto.
                      last_transferred_at:
                        type: string
                        format: date-time
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - gRPC Gateway API
  "/ibc/apps/transfer/v1/channels/{channel_id}/ports/{port_id}/escrow_address":
    get:
      summary: EscrowAddress returns the escrow address for a particular port and
        channel id.
      operationId: EscrowAddress_O5QPZ
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  escrow_address:
                    type: string
                    title: the escrow account address
                description: QueryEscrowAddressResponse is the response type of the
                  EscrowAddress RPC method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: channel_id
          description: unique channel identifier
          in: path
          required: true
          schema:
            type: string
        - name: port_id
          description: unique port identifier
          in: path
          required: true
          schema:
            type: string
      tags:
        - gRPC Gateway API
  "/ibc/apps/transfer/v1/denom_hashes/{trace}":
    get:
      summary: DenomHash queries a denomination hash information.
      operationId: DenomHash_BL88Z
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  hash:
                    type: string
                    description: hash (in hex format) of the denomination trace information.
                description: >-
                  QueryDenomHashResponse is the response type for the
                  Query/DenomHash RPC

                  method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: trace
          description: The denomination trace ([port_id]/[channel_id])+/[denom]
          in: path
          required: true
          schema:
            type: string
      tags:
        - gRPC Gateway API
  /ibc/apps/transfer/v1/denom_traces:
    get:
      summary: DenomTraces queries all denomination traces.
      operationId: DenomTraces_PELG0
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  denom_traces:
                    type: array
                    items:
                      type: object
                      properties:
                        path:
                          type: string
                          description: >-
                            path defines the chain of port/channel identifiers
                            used for tracing the

                            source of the fungible token.
                        base_denom:
                          type: string
                          description: base denomination of the relayed fungible token.
                      description: >-
                        DenomTrace contains the base denomination for ICS20
                        fungible tokens and the

                        source tracing information path.
                    description: denom_traces returns all denominations trace information.
                  pagination:
                    type: object
                    properties:
                      next_key:
                        type: string
                        format: byte
                        title: |-
                          next_key is the key to be passed to PageRequest.key to
                          query the next page most efficiently
                      total:
                        type: string
                        format: uint64
                        title: >-
                          total is total number of results available if
                          PageRequest.count_total

                          was set, its value is undefined otherwise
                    description: >-
                      PageResponse is to be embedded in gRPC response messages
                      where the

                      corresponding request message has used PageRequest.

                       message SomeResponse {
                               repeated Bar results = 1;
                               PageResponse page = 2;
                       }
                description: >-
                  QueryConnectionsResponse is the response type for the
                  Query/DenomTraces RPC

                  method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          schema:
            type: string
            format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key should

            be set.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          schema:
            type: string
            format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in UIs.

            count_total is only respected when offset is used. It is ignored when key

            is set.
          in: query
          required: false
          schema:
            type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - gRPC Gateway API
  "/ibc/apps/transfer/v1/denom_traces/{hash}":
    get:
      summary: DenomTrace queries a denomination trace information.
      operationId: DenomTrace_GJZMS
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  denom_trace:
                    type: object
                    properties:
                      path:
                        type: string
                        description: >-
                          path defines the chain of port/channel identifiers
                          used for tracing the

                          source of the fungible token.
                      base_denom:
                        type: string
                        description: base denomination of the relayed fungible token.
                    description: >-
                      DenomTrace contains the base denomination for ICS20
                      fungible tokens and the

                      source tracing information path.
                description: >-
                  QueryDenomTraceResponse is the response type for the
                  Query/DenomTrace RPC

                  method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      parameters:
        - name: hash
          description: hash (in hex format) or denom (full denom with ibc prefix) of the
            denomination trace information.
          in: path
          required: true
          schema:
            type: string
      tags:
        - gRPC Gateway API
  /ibc/apps/transfer/v1/params:
    get:
      summary: Params queries all parameters of the ibc-transfer module.
      operationId: Params_UGER5
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  params:
                    description: params defines the parameters of the module.
                    type: object
                    properties:
                      send_enabled:
                        type: boolean
                        description: >-
                          send_enabled enables or disables all cross-chain token
                          transfers from this

                          chain.
                      receive_enabled:
                        type: boolean
                        description: >-
                          receive_enabled enables or disables all cross-chain
                          token transfers to this

                          chain.
                description: QueryParamsResponse is the response type for the Query/Params RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      tags:
        - gRPC Gateway API
  /ibc/apps/interchain_accounts/host/v1/params:
    get:
      summary: Params queries all parameters of the ICA host submodule.
      operationId: Params_ZBWEK
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  params:
                    description: params defines the parameters of the module.
                    type: object
                    properties:
                      host_enabled:
                        type: boolean
                        description: host_enabled enables or disables the host submodule.
                      allow_messages:
                        type: array
                        items:
                          type: string
                        description: allow_messages defines a list of sdk message typeURLs allowed to be
                          executed on a host chain.
                description: QueryParamsResponse is the response type for the Query/Params RPC
                  method.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
      tags:
        - gRPC Gateway API
components:
  schemas:
    cosmos.base.abci.v1beta1.ABCIMessageLog:
      type: object
      properties:
        msg_index:
          type: integer
          format: int64
        log:
          type: string
        events:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              attributes:
                type: array
                items:
                  type: object
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  description: >-
                    Attribute defines an attribute wrapper where the key and
                    value are

                    strings instead of raw bytes.
            description: >-
              StringEvent defines en Event object wrapper where all the
              attributes

              contain key/value pairs that are strings instead of raw bytes.
          description: >-
            Events contains a slice of Event objects that were emitted during
            some

            execution.
      description: ABCIMessageLog defines a structure containing an indexed tx ABCI
        message log.
    cosmos.base.abci.v1beta1.Attribute:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
      description: |-
        Attribute defines an attribute wrapper where the key and value are
        strings instead of raw bytes.
    cosmos.base.abci.v1beta1.GasInfo:
      type: object
      properties:
        gas_wanted:
          type: string
          format: uint64
          description: GasWanted is the maximum units of work we allow this tx to perform.
        gas_used:
          type: string
          format: uint64
          description: GasUsed is the amount of gas actually consumed.
      description: GasInfo defines tx execution gas context.
    cosmos.base.abci.v1beta1.Result:
      type: object
      properties:
        data:
          type: string
          format: byte
          description: >-
            Data is any data returned from message or handler execution. It MUST
            be

            length prefixed in order to separate data from multiple message executions.
        log:
          type: string
          description: Log contains the log information from message or handler execution.
        events:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              attributes:
                type: array
                items:
                  type: object
                  properties:
                    key:
                      type: string
                      format: byte
                    value:
                      type: string
                      format: byte
                    index:
                      type: boolean
                  description: EventAttribute is a single key-value pair, associated with an
                    event.
            description: >-
              Event allows application developers to attach additional
              information to

              ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.

              Later, transactions may be queried using these events.
          description: >-
            Events contains a slice of Event objects that were emitted during
            message

            or handler execution.
      description: Result is the union of ResponseFormat and ResponseCheckTx.
    cosmos.base.abci.v1beta1.StringEvent:
      type: object
      properties:
        type:
          type: string
        attributes:
          type: array
          items:
            type: object
            properties:
              key:
                type: string
              value:
                type: string
            description: |-
              Attribute defines an attribute wrapper where the key and value are
              strings instead of raw bytes.
      description: |-
        StringEvent defines en Event object wrapper where all the attributes
        contain key/value pairs that are strings instead of raw bytes.
    cosmos.base.abci.v1beta1.TxResponse:
      type: object
      properties:
        height:
          type: string
          format: int64
          title: The block height
        txhash:
          type: string
          description: The transaction hash.
        codespace:
          type: string
          title: Namespace for the Code
        code:
          type: integer
          format: int64
          description: Response code.
        data:
          type: string
          description: Result bytes, if any.
        raw_log:
          type: string
          description: |-
            The output of the application's logger (raw string). May be
            non-deterministic.
        logs:
          type: array
          items:
            type: object
            properties:
              msg_index:
                type: integer
                format: int64
              log:
                type: string
              events:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: string
                    attributes:
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            type: string
                          value:
                            type: string
                        description: >-
                          Attribute defines an attribute wrapper where the key
                          and value are

                          strings instead of raw bytes.
                  description: >-
                    StringEvent defines en Event object wrapper where all the
                    attributes

                    contain key/value pairs that are strings instead of raw bytes.
                description: >-
                  Events contains a slice of Event objects that were emitted
                  during some

                  execution.
            description: ABCIMessageLog defines a structure containing an indexed tx ABCI
              message log.
          description: The output of the application's logger (typed). May be
            non-deterministic.
        info:
          type: string
          description: Additional information. May be non-deterministic.
        gas_wanted:
          type: string
          format: int64
          description: Amount of gas requested for transaction.
        gas_used:
          type: string
          format: int64
          description: Amount of gas consumed by transaction.
        tx:
          type: object
          properties:
            type_url:
              type: string
            value:
              type: string
              format: byte
          description: The request transaction bytes.
        timestamp:
          type: string
          description: >-
            Time of the previous block. For heights > 1, it's the weighted
            median of

            the timestamps of the valid votes in the block.LastCommit. For height == 1,

            it's genesis time.
        events:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              attributes:
                type: array
                items:
                  type: object
                  properties:
                    key:
                      type: string
                      format: byte
                    value:
                      type: string
                      format: byte
                    index:
                      type: boolean
                  description: EventAttribute is a single key-value pair, associated with an
                    event.
            description: >-
              Event allows application developers to attach additional
              information to

              ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.

              Later, transactions may be queried using these events.
          description: >-
            Events defines all the events emitted by processing a transaction.
            Note,

            these events include those emitted by processing all the messages and those

            emitted from the ante handler. Whereas Logs contains the events, with

            additional metadata, emitted only by processing the messages.


            Since: cosmos-sdk 0.42.11, 0.44.5, 0.45
      description: >-
        TxResponse defines a structure containing relevant tx data and metadata.
        The

        tags are stringified and the log is JSON decoded.
    cosmos.base.query.v1beta1.PageRequest:
      type: object
      properties:
        key:
          type: string
          format: byte
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
        offset:
          type: string
          format: uint64
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key should

            be set.
        limit:
          type: string
          format: uint64
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
        count_total:
          type: boolean
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in UIs.

            count_total is only respected when offset is used. It is ignored when key

            is set.
        reverse:
          type: boolean
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
      description: |-
        message SomeRequest {
                 Foo some_parameter = 1;
                 PageRequest pagination = 2;
         }
      title: |-
        PageRequest is to be embedded in gRPC request messages for efficient
        pagination. Ex:
    cosmos.base.query.v1beta1.PageResponse:
      type: object
      properties:
        next_key:
          type: string
          format: byte
          title: |-
            next_key is the key to be passed to PageRequest.key to
            query the next page most efficiently
        total:
          type: string
          format: uint64
          title: >-
            total is total number of results available if
            PageRequest.count_total

            was set, its value is undefined otherwise
      description: |-
        PageResponse is to be embedded in gRPC response messages where the
        corresponding request message has used PageRequest.

         message SomeResponse {
                 repeated Bar results = 1;
                 PageResponse page = 2;
         }
    cosmos.base.v1beta1.Coin:
      type: object
      properties:
        denom:
          type: string
        amount:
          type: string
      description: |-
        Coin defines a token with a denomination and an amount.

        NOTE: The amount field is an Int which implements the custom method
        signatures required by gogoproto.
    cosmos.crypto.multisig.v1beta1.CompactBitArray:
      type: object
      properties:
        extra_bits_stored:
          type: integer
          format: int64
        elems:
          type: string
          format: byte
      description: >-
        CompactBitArray is an implementation of a space efficient bit array.

        This is used to ensure that the encoded data takes up a minimal amount of

        space after proto encoding.

        This is not thread safe, and is not intended for concurrent usage.
    cosmos.tx.signing.v1beta1.SignMode:
      type: string
      enum:
        - SIGN_MODE_UNSPECIFIED
        - SIGN_MODE_DIRECT
        - SIGN_MODE_TEXTUAL
        - SIGN_MODE_LEGACY_AMINO_JSON
        - SIGN_MODE_EIP_191
      default: SIGN_MODE_UNSPECIFIED
      description: >-
        SignMode represents a signing mode with its own security guarantees.

         - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
        rejected
         - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
        verified with raw bytes from Tx
         - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
        human-readable textual representation on top of the binary representation

        from SIGN_MODE_DIRECT
         - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
        Amino JSON and will be removed in the future
         - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
        SDK. Ref: https://eips.ethereum.org/EIPS/eip-191


        Currently, SIGN_MODE_EIP_191 is registered as a SignMode enum variant,

        but is not implemented on the SDK by default. To enable EIP-191, you need

        to pass a custom `TxConfig` that has an implementation of

        `SignModeHandler` for EIP-191. The SDK may decide to fully support

        EIP-191 in the future.


        Since: cosmos-sdk 0.45.2
    cosmos.tx.v1beta1.AuthInfo:
      type: object
      properties:
        signer_infos:
          type: array
          items:
            type: object
            properties:
              public_key:
                type: object
                properties:
                  type_url:
                    type: string
                  value:
                    type: string
                    format: byte
                description: >-
                  public_key is the public key of the signer. It is optional for
                  accounts

                  that already exist in state. If unset, the verifier can use the required \

                  signer address for this position and lookup the public key.
              mode_info:
                title: >-
                  mode_info describes the signing mode of the signer and is a
                  nested

                  structure to support nested multisig pubkey's
                type: object
                properties:
                  single:
                    title: single represents a single signer
                    type: object
                    properties:
                      mode:
                        title: mode is the signing mode of the single signer
                        type: string
                        enum:
                          - SIGN_MODE_UNSPECIFIED
                          - SIGN_MODE_DIRECT
                          - SIGN_MODE_TEXTUAL
                          - SIGN_MODE_LEGACY_AMINO_JSON
                          - SIGN_MODE_EIP_191
                        default: SIGN_MODE_UNSPECIFIED
                        description: >-
                          SignMode represents a signing mode with its own
                          security guarantees.

                           - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
                          rejected
                           - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
                          verified with raw bytes from Tx
                           - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
                          human-readable textual representation on top of the binary representation

                          from SIGN_MODE_DIRECT
                           - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
                          Amino JSON and will be removed in the future
                           - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
                          SDK. Ref: https://eips.ethereum.org/EIPS/eip-191


                          Currently, SIGN_MODE_EIP_191 is registered as a SignMode enum variant,

                          but is not implemented on the SDK by default. To enable EIP-191, you need

                          to pass a custom `TxConfig` that has an implementation of

                          `SignModeHandler` for EIP-191. The SDK may decide to fully support

                          EIP-191 in the future.


                          Since: cosmos-sdk 0.45.2
                  multi:
                    title: multi represents a nested multisig signer
                    type: object
                    properties:
                      bitarray:
                        title: bitarray specifies which keys within the multisig are signing
                        type: object
                        properties:
                          extra_bits_stored:
                            type: integer
                            format: int64
                          elems:
                            type: string
                            format: byte
                        description: >-
                          CompactBitArray is an implementation of a space
                          efficient bit array.

                          This is used to ensure that the encoded data takes up a minimal amount of

                          space after proto encoding.

                          This is not thread safe, and is not intended for concurrent usage.
                      mode_infos:
                        type: array
                        items: {}
                        title: >-
                          mode_infos is the corresponding modes of the signers
                          of the multisig

                          which could include nested multisig public keys
                description: ModeInfo describes the signing mode of a single or nested multisig
                  signer.
              sequence:
                type: string
                format: uint64
                description: >-
                  sequence is the sequence of the account, which describes the

                  number of committed transactions signed by a given address. It is used to

                  prevent replay attacks.
            description: >-
              SignerInfo describes the public key and signing mode of a single
              top-level

              signer.
          description: >-
            signer_infos defines the signing modes for the required signers. The
            number

            and order of elements must match the required signers from TxBody's

            messages. The first element is the primary signer and the one which pays

            the fee.
        fee:
          description: >-
            Fee is the fee and gas limit for the transaction. The first signer
            is the

            primary signer and the one which pays the fee. The fee can be calculated

            based on the cost of evaluating the body and doing signature verification

            of the signers. This can be estimated via simulation.
          type: object
          properties:
            amount:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.
              title: amount is the amount of coins to be paid as a fee
            gas_limit:
              type: string
              format: uint64
              title: >-
                gas_limit is the maximum gas that can be used in transaction
                processing

                before an out of gas error occurs
            payer:
              type: string
              description: >-
                if unset, the first signer is responsible for paying the fees.
                If set, the specified account must pay the fees.

                the payer must be a tx signer (and thus have signed this field in AuthInfo).

                setting this field does *not* change the ordering of required signers for the transaction.
            granter:
              type: string
              title: >-
                if set, the fee payer (either the first signer or the value of
                the payer field) requests that a fee grant be used

                to pay fees instead of the fee payer's own balance. If an appropriate fee grant does not exist or the chain does

                not support fee grants, this will fail
      description: |-
        AuthInfo describes the fee and signer modes that are used to sign a
        transaction.
    cosmos.tx.v1beta1.BroadcastMode:
      type: string
      enum:
        - BROADCAST_MODE_UNSPECIFIED
        - BROADCAST_MODE_BLOCK
        - BROADCAST_MODE_SYNC
        - BROADCAST_MODE_ASYNC
      default: BROADCAST_MODE_UNSPECIFIED
      description: >-
        BroadcastMode specifies the broadcast mode for the TxService.Broadcast
        RPC method.

         - BROADCAST_MODE_UNSPECIFIED: zero-value for mode ordering
         - BROADCAST_MODE_BLOCK: BROADCAST_MODE_BLOCK defines a tx broadcasting mode where the client waits for
        the tx to be committed in a block.
         - BROADCAST_MODE_SYNC: BROADCAST_MODE_SYNC defines a tx broadcasting mode where the client waits for
        a CheckTx execution response only.
         - BROADCAST_MODE_ASYNC: BROADCAST_MODE_ASYNC defines a tx broadcasting mode where the client returns
        immediately.
    cosmos.tx.v1beta1.BroadcastTxRequest:
      type: object
      properties:
        tx_bytes:
          type: string
          format: byte
          description: tx_bytes is the raw transaction.
        mode:
          type: string
          enum:
            - BROADCAST_MODE_UNSPECIFIED
            - BROADCAST_MODE_BLOCK
            - BROADCAST_MODE_SYNC
            - BROADCAST_MODE_ASYNC
          default: BROADCAST_MODE_UNSPECIFIED
          description: >-
            BroadcastMode specifies the broadcast mode for the
            TxService.Broadcast RPC method.

             - BROADCAST_MODE_UNSPECIFIED: zero-value for mode ordering
             - BROADCAST_MODE_BLOCK: BROADCAST_MODE_BLOCK defines a tx broadcasting mode where the client waits for
            the tx to be committed in a block.
             - BROADCAST_MODE_SYNC: BROADCAST_MODE_SYNC defines a tx broadcasting mode where the client waits for
            a CheckTx execution response only.
             - BROADCAST_MODE_ASYNC: BROADCAST_MODE_ASYNC defines a tx broadcasting mode where the client returns
            immediately.
      description: >-
        BroadcastTxRequest is the request type for the
        Service.BroadcastTxRequest

        RPC method.
    cosmos.tx.v1beta1.BroadcastTxResponse:
      type: object
      properties:
        tx_response:
          type: object
          properties:
            height:
              type: string
              format: int64
              title: The block height
            txhash:
              type: string
              description: The transaction hash.
            codespace:
              type: string
              title: Namespace for the Code
            code:
              type: integer
              format: int64
              description: Response code.
            data:
              type: string
              description: Result bytes, if any.
            raw_log:
              type: string
              description: |-
                The output of the application's logger (raw string). May be
                non-deterministic.
            logs:
              type: array
              items:
                type: object
                properties:
                  msg_index:
                    type: integer
                    format: int64
                  log:
                    type: string
                  events:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                        attributes:
                          type: array
                          items:
                            type: object
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            description: >-
                              Attribute defines an attribute wrapper where the
                              key and value are

                              strings instead of raw bytes.
                      description: >-
                        StringEvent defines en Event object wrapper where all
                        the attributes

                        contain key/value pairs that are strings instead of raw bytes.
                    description: >-
                      Events contains a slice of Event objects that were emitted
                      during some

                      execution.
                description: ABCIMessageLog defines a structure containing an indexed tx ABCI
                  message log.
              description: The output of the application's logger (typed). May be
                non-deterministic.
            info:
              type: string
              description: Additional information. May be non-deterministic.
            gas_wanted:
              type: string
              format: int64
              description: Amount of gas requested for transaction.
            gas_used:
              type: string
              format: int64
              description: Amount of gas consumed by transaction.
            tx:
              type: object
              properties:
                type_url:
                  type: string
                value:
                  type: string
                  format: byte
              description: The request transaction bytes.
            timestamp:
              type: string
              description: >-
                Time of the previous block. For heights > 1, it's the weighted
                median of

                the timestamps of the valid votes in the block.LastCommit. For height == 1,

                it's genesis time.
            events:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                  attributes:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                          format: byte
                        value:
                          type: string
                          format: byte
                        index:
                          type: boolean
                      description: EventAttribute is a single key-value pair, associated with an
                        event.
                description: >-
                  Event allows application developers to attach additional
                  information to

                  ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.

                  Later, transactions may be queried using these events.
              description: >-
                Events defines all the events emitted by processing a
                transaction. Note,

                these events include those emitted by processing all the messages and those

                emitted from the ante handler. Whereas Logs contains the events, with

                additional metadata, emitted only by processing the messages.


                Since: cosmos-sdk 0.42.11, 0.44.5, 0.45
          description: >-
            TxResponse defines a structure containing relevant tx data and
            metadata. The

            tags are stringified and the log is JSON decoded.
      description: |-
        BroadcastTxResponse is the response type for the
        Service.BroadcastTx method.
    cosmos.tx.v1beta1.Fee:
      type: object
      properties:
        amount:
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom method

              signatures required by gogoproto.
          title: amount is the amount of coins to be paid as a fee
        gas_limit:
          type: string
          format: uint64
          title: >-
            gas_limit is the maximum gas that can be used in transaction
            processing

            before an out of gas error occurs
        payer:
          type: string
          description: >-
            if unset, the first signer is responsible for paying the fees. If
            set, the specified account must pay the fees.

            the payer must be a tx signer (and thus have signed this field in AuthInfo).

            setting this field does *not* change the ordering of required signers for the transaction.
        granter:
          type: string
          title: >-
            if set, the fee payer (either the first signer or the value of the
            payer field) requests that a fee grant be used

            to pay fees instead of the fee payer's own balance. If an appropriate fee grant does not exist or the chain does

            not support fee grants, this will fail
      description: >-
        Fee includes the amount of coins paid in fees and the maximum

        gas to be used by the transaction. The ratio yields an effective "gasprice",

        which must be above some miminum to be accepted into the mempool.
    cosmos.tx.v1beta1.GetBlockWithTxsResponse:
      type: object
      properties:
        txs:
          type: array
          items:
            type: object
            properties:
              body:
                title: body is the processable content of the transaction
                type: object
                properties:
                  messages:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
                    description: >-
                      messages is a list of messages to be executed. The
                      required signers of

                      those messages define the number and order of elements in AuthInfo's

                      signer_infos and Tx's signatures. Each required signer address is added to

                      the list only the first time it occurs.

                      By convention, the first required signer (usually from the first message)

                      is referred to as the primary signer and pays the fee for the whole

                      transaction.
                  memo:
                    type: string
                    description: >-
                      memo is any arbitrary note/comment to be added to the
                      transaction.

                      WARNING: in clients, any publicly exposed text should not be called memo,

                      but should be called `note` instead (see https://github.com/cosmos/cosmos-sdk/issues/9122).
                  timeout_height:
                    type: string
                    format: uint64
                    title: >-
                      timeout is the block height after which this transaction
                      will not

                      be processed by the chain
                  extension_options:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
                    title: >-
                      extension_options are arbitrary options that can be added
                      by chains

                      when the default options are not sufficient. If any of these are present

                      and can't be handled, the transaction will be rejected
                  non_critical_extension_options:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
                    title: >-
                      extension_options are arbitrary options that can be added
                      by chains

                      when the default options are not sufficient. If any of these are present

                      and can't be handled, they will be ignored
                description: TxBody is the body of a transaction that all signers sign over.
              auth_info:
                title: >-
                  auth_info is the authorization related content of the
                  transaction,

                  specifically signers, signer modes and fee
                type: object
                properties:
                  signer_infos:
                    type: array
                    items:
                      type: object
                      properties:
                        public_key:
                          type: object
                          properties:
                            type_url:
                              type: string
                            value:
                              type: string
                              format: byte
                          description: >-
                            public_key is the public key of the signer. It is
                            optional for accounts

                            that already exist in state. If unset, the verifier can use the required \

                            signer address for this position and lookup the public key.
                        mode_info:
                          title: >-
                            mode_info describes the signing mode of the signer
                            and is a nested

                            structure to support nested multisig pubkey's
                          type: object
                          properties:
                            single:
                              title: single represents a single signer
                              type: object
                              properties:
                                mode:
                                  title: mode is the signing mode of the single signer
                                  type: string
                                  enum:
                                    - SIGN_MODE_UNSPECIFIED
                                    - SIGN_MODE_DIRECT
                                    - SIGN_MODE_TEXTUAL
                                    - SIGN_MODE_LEGACY_AMINO_JSON
                                    - SIGN_MODE_EIP_191
                                  default: SIGN_MODE_UNSPECIFIED
                                  description: >-
                                    SignMode represents a signing mode with its
                                    own security guarantees.

                                     - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
                                    rejected
                                     - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
                                    verified with raw bytes from Tx
                                     - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
                                    human-readable textual representation on top of the binary representation

                                    from SIGN_MODE_DIRECT
                                     - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
                                    Amino JSON and will be removed in the future
                                     - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
                                    SDK. Ref: https://eips.ethereum.org/EIPS/eip-191


                                    Currently, SIGN_MODE_EIP_191 is registered as a SignMode enum variant,

                                    but is not implemented on the SDK by default. To enable EIP-191, you need

                                    to pass a custom `TxConfig` that has an implementation of

                                    `SignModeHandler` for EIP-191. The SDK may decide to fully support

                                    EIP-191 in the future.


                                    Since: cosmos-sdk 0.45.2
                            multi:
                              title: multi represents a nested multisig signer
                              type: object
                              properties:
                                bitarray:
                                  title: bitarray specifies which keys within the multisig are signing
                                  type: object
                                  properties:
                                    extra_bits_stored:
                                      type: integer
                                      format: int64
                                    elems:
                                      type: string
                                      format: byte
                                  description: >-
                                    CompactBitArray is an implementation of a
                                    space efficient bit array.

                                    This is used to ensure that the encoded data takes up a minimal amount of

                                    space after proto encoding.

                                    This is not thread safe, and is not intended for concurrent usage.
                                mode_infos:
                                  type: array
                                  items: {}
                                  title: >-
                                    mode_infos is the corresponding modes of the
                                    signers of the multisig

                                    which could include nested multisig public keys
                          description: ModeInfo describes the signing mode of a single or nested multisig
                            signer.
                        sequence:
                          type: string
                          format: uint64
                          description: >-
                            sequence is the sequence of the account, which
                            describes the

                            number of committed transactions signed by a given address. It is used to

                            prevent replay attacks.
                      description: >-
                        SignerInfo describes the public key and signing mode of
                        a single top-level

                        signer.
                    description: >-
                      signer_infos defines the signing modes for the required
                      signers. The number

                      and order of elements must match the required signers from TxBody's

                      messages. The first element is the primary signer and the one which pays

                      the fee.
                  fee:
                    description: >-
                      Fee is the fee and gas limit for the transaction. The
                      first signer is the

                      primary signer and the one which pays the fee. The fee can be calculated

                      based on the cost of evaluating the body and doing signature verification

                      of the signers. This can be estimated via simulation.
                    type: object
                    properties:
                      amount:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: >-
                            Coin defines a token with a denomination and an
                            amount.


                            NOTE: The amount field is an Int which implements the custom method

                            signatures required by gogoproto.
                        title: amount is the amount of coins to be paid as a fee
                      gas_limit:
                        type: string
                        format: uint64
                        title: >-
                          gas_limit is the maximum gas that can be used in
                          transaction processing

                          before an out of gas error occurs
                      payer:
                        type: string
                        description: >-
                          if unset, the first signer is responsible for paying
                          the fees. If set, the specified account must pay the
                          fees.

                          the payer must be a tx signer (and thus have signed this field in AuthInfo).

                          setting this field does *not* change the ordering of required signers for the transaction.
                      granter:
                        type: string
                        title: >-
                          if set, the fee payer (either the first signer or the
                          value of the payer field) requests that a fee grant be
                          used

                          to pay fees instead of the fee payer's own balance. If an appropriate fee grant does not exist or the chain does

                          not support fee grants, this will fail
                description: >-
                  AuthInfo describes the fee and signer modes that are used to
                  sign a

                  transaction.
              signatures:
                type: array
                items:
                  type: string
                  format: byte
                description: >-
                  signatures is a list of signatures that matches the length and
                  order of

                  AuthInfo's signer_infos to allow connecting signature meta information like

                  public key and signing mode by position.
            description: Tx is the standard type used for broadcasting transactions.
          description: txs are the transactions in the block.
        block_id:
          type: object
          properties:
            hash:
              type: string
              format: byte
            part_set_header:
              type: object
              properties:
                total:
                  type: integer
                  format: int64
                hash:
                  type: string
                  format: byte
              title: PartsetHeader
          title: BlockID
        block:
          type: object
          properties:
            header:
              type: object
              properties:
                version:
                  title: basic block info
                  type: object
                  properties:
                    block:
                      type: string
                      format: uint64
                    app:
                      type: string
                      format: uint64
                  description: >-
                    Consensus captures the consensus rules for processing a
                    block in the blockchain,

                    including all blockchain data structures and the rules of the application's

                    state transition machine.
                chain_id:
                  type: string
                height:
                  type: string
                  format: int64
                time:
                  type: string
                  format: date-time
                last_block_id:
                  type: object
                  properties:
                    hash:
                      type: string
                      format: byte
                    part_set_header:
                      type: object
                      properties:
                        total:
                          type: integer
                          format: int64
                        hash:
                          type: string
                          format: byte
                      title: PartsetHeader
                  title: BlockID
                last_commit_hash:
                  type: string
                  format: byte
                  title: hashes of block data
                data_hash:
                  type: string
                  format: byte
                validators_hash:
                  type: string
                  format: byte
                  title: hashes from the app output from the prev block
                next_validators_hash:
                  type: string
                  format: byte
                consensus_hash:
                  type: string
                  format: byte
                app_hash:
                  type: string
                  format: byte
                last_results_hash:
                  type: string
                  format: byte
                evidence_hash:
                  type: string
                  format: byte
                  title: consensus info
                proposer_address:
                  type: string
                  format: byte
              description: Header defines the structure of a block header.
            data:
              type: object
              properties:
                txs:
                  type: array
                  items:
                    type: string
                    format: byte
                  description: >-
                    Txs that will be applied by state @ block.Height+1.

                    NOTE: not all txs here are valid.  We're just agreeing on the order first.

                    This means that block.AppHash does not include these txs.
              title: Data contains the set of transactions included in the block
            evidence:
              type: object
              properties:
                evidence:
                  type: array
                  items:
                    type: object
                    properties:
                      duplicate_vote_evidence:
                        type: object
                        properties:
                          vote_a:
                            type: object
                            properties:
                              type:
                                type: string
                                enum:
                                  - SIGNED_MSG_TYPE_UNKNOWN
                                  - SIGNED_MSG_TYPE_PREVOTE
                                  - SIGNED_MSG_TYPE_PRECOMMIT
                                  - SIGNED_MSG_TYPE_PROPOSAL
                                default: SIGNED_MSG_TYPE_UNKNOWN
                                description: >-
                                  SignedMsgType is a type of signed message in
                                  the consensus.

                                   - SIGNED_MSG_TYPE_PREVOTE: Votes
                                   - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                              height:
                                type: string
                                format: int64
                              round:
                                type: integer
                                format: int32
                              block_id:
                                type: object
                                properties:
                                  hash:
                                    type: string
                                    format: byte
                                  part_set_header:
                                    type: object
                                    properties:
                                      total:
                                        type: integer
                                        format: int64
                                      hash:
                                        type: string
                                        format: byte
                                    title: PartsetHeader
                                title: BlockID
                              timestamp:
                                type: string
                                format: date-time
                              validator_address:
                                type: string
                                format: byte
                              validator_index:
                                type: integer
                                format: int32
                              signature:
                                type: string
                                format: byte
                            description: >-
                              Vote represents a prevote, precommit, or commit
                              vote from validators for

                              consensus.
                          vote_b:
                            type: object
                            properties:
                              type:
                                type: string
                                enum:
                                  - SIGNED_MSG_TYPE_UNKNOWN
                                  - SIGNED_MSG_TYPE_PREVOTE
                                  - SIGNED_MSG_TYPE_PRECOMMIT
                                  - SIGNED_MSG_TYPE_PROPOSAL
                                default: SIGNED_MSG_TYPE_UNKNOWN
                                description: >-
                                  SignedMsgType is a type of signed message in
                                  the consensus.

                                   - SIGNED_MSG_TYPE_PREVOTE: Votes
                                   - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                              height:
                                type: string
                                format: int64
                              round:
                                type: integer
                                format: int32
                              block_id:
                                type: object
                                properties:
                                  hash:
                                    type: string
                                    format: byte
                                  part_set_header:
                                    type: object
                                    properties:
                                      total:
                                        type: integer
                                        format: int64
                                      hash:
                                        type: string
                                        format: byte
                                    title: PartsetHeader
                                title: BlockID
                              timestamp:
                                type: string
                                format: date-time
                              validator_address:
                                type: string
                                format: byte
                              validator_index:
                                type: integer
                                format: int32
                              signature:
                                type: string
                                format: byte
                            description: >-
                              Vote represents a prevote, precommit, or commit
                              vote from validators for

                              consensus.
                          total_voting_power:
                            type: string
                            format: int64
                          validator_power:
                            type: string
                            format: int64
                          timestamp:
                            type: string
                            format: date-time
                        description: DuplicateVoteEvidence contains evidence of a validator signed two
                          conflicting votes.
                      light_client_attack_evidence:
                        type: object
                        properties:
                          conflicting_block:
                            type: object
                            properties:
                              signed_header:
                                type: object
                                properties:
                                  header:
                                    type: object
                                    properties:
                                      version:
                                        title: basic block info
                                        type: object
                                        properties:
                                          block:
                                            type: string
                                            format: uint64
                                          app:
                                            type: string
                                            format: uint64
                                        description: >-
                                          Consensus captures the consensus rules
                                          for processing a block in the
                                          blockchain,

                                          including all blockchain data structures and the rules of the application's

                                          state transition machine.
                                      chain_id:
                                        type: string
                                      height:
                                        type: string
                                        format: int64
                                      time:
                                        type: string
                                        format: date-time
                                      last_block_id:
                                        type: object
                                        properties:
                                          hash:
                                            type: string
                                            format: byte
                                          part_set_header:
                                            type: object
                                            properties:
                                              total:
                                                type: integer
                                                format: int64
                                              hash:
                                                type: string
                                                format: byte
                                            title: PartsetHeader
                                        title: BlockID
                                      last_commit_hash:
                                        type: string
                                        format: byte
                                        title: hashes of block data
                                      data_hash:
                                        type: string
                                        format: byte
                                      validators_hash:
                                        type: string
                                        format: byte
                                        title: hashes from the app output from the prev block
                                      next_validators_hash:
                                        type: string
                                        format: byte
                                      consensus_hash:
                                        type: string
                                        format: byte
                                      app_hash:
                                        type: string
                                        format: byte
                                      last_results_hash:
                                        type: string
                                        format: byte
                                      evidence_hash:
                                        type: string
                                        format: byte
                                        title: consensus info
                                      proposer_address:
                                        type: string
                                        format: byte
                                    description: Header defines the structure of a block header.
                                  commit:
                                    type: object
                                    properties:
                                      height:
                                        type: string
                                        format: int64
                                      round:
                                        type: integer
                                        format: int32
                                      block_id:
                                        type: object
                                        properties:
                                          hash:
                                            type: string
                                            format: byte
                                          part_set_header:
                                            type: object
                                            properties:
                                              total:
                                                type: integer
                                                format: int64
                                              hash:
                                                type: string
                                                format: byte
                                            title: PartsetHeader
                                        title: BlockID
                                      signatures:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            block_id_flag:
                                              type: string
                                              enum:
                                                - BLOCK_ID_FLAG_UNKNOWN
                                                - BLOCK_ID_FLAG_ABSENT
                                                - BLOCK_ID_FLAG_COMMIT
                                                - BLOCK_ID_FLAG_NIL
                                              default: BLOCK_ID_FLAG_UNKNOWN
                                              title: BlockIdFlag indicates which BlcokID the signature is for
                                            validator_address:
                                              type: string
                                              format: byte
                                            timestamp:
                                              type: string
                                              format: date-time
                                            signature:
                                              type: string
                                              format: byte
                                          description: CommitSig is a part of the Vote included in a Commit.
                                    description: Commit contains the evidence that a block was committed by a set of
                                      validators.
                              validator_set:
                                type: object
                                properties:
                                  validators:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        address:
                                          type: string
                                          format: byte
                                        pub_key:
                                          type: object
                                          properties:
                                            ed25519:
                                              type: string
                                              format: byte
                                            secp256k1:
                                              type: string
                                              format: byte
                                          title: PublicKey defines the keys available for use with Validators
                                        voting_power:
                                          type: string
                                          format: int64
                                        proposer_priority:
                                          type: string
                                          format: int64
                                  proposer:
                                    type: object
                                    properties:
                                      address:
                                        type: string
                                        format: byte
                                      pub_key:
                                        type: object
                                        properties:
                                          ed25519:
                                            type: string
                                            format: byte
                                          secp256k1:
                                            type: string
                                            format: byte
                                        title: PublicKey defines the keys available for use with Validators
                                      voting_power:
                                        type: string
                                        format: int64
                                      proposer_priority:
                                        type: string
                                        format: int64
                                  total_voting_power:
                                    type: string
                                    format: int64
                          common_height:
                            type: string
                            format: int64
                          byzantine_validators:
                            type: array
                            items:
                              type: object
                              properties:
                                address:
                                  type: string
                                  format: byte
                                pub_key:
                                  type: object
                                  properties:
                                    ed25519:
                                      type: string
                                      format: byte
                                    secp256k1:
                                      type: string
                                      format: byte
                                  title: PublicKey defines the keys available for use with Validators
                                voting_power:
                                  type: string
                                  format: int64
                                proposer_priority:
                                  type: string
                                  format: int64
                          total_voting_power:
                            type: string
                            format: int64
                          timestamp:
                            type: string
                            format: date-time
                        description: LightClientAttackEvidence contains evidence of a set of validators
                          attempting to mislead a light client.
            last_commit:
              type: object
              properties:
                height:
                  type: string
                  format: int64
                round:
                  type: integer
                  format: int32
                block_id:
                  type: object
                  properties:
                    hash:
                      type: string
                      format: byte
                    part_set_header:
                      type: object
                      properties:
                        total:
                          type: integer
                          format: int64
                        hash:
                          type: string
                          format: byte
                      title: PartsetHeader
                  title: BlockID
                signatures:
                  type: array
                  items:
                    type: object
                    properties:
                      block_id_flag:
                        type: string
                        enum:
                          - BLOCK_ID_FLAG_UNKNOWN
                          - BLOCK_ID_FLAG_ABSENT
                          - BLOCK_ID_FLAG_COMMIT
                          - BLOCK_ID_FLAG_NIL
                        default: BLOCK_ID_FLAG_UNKNOWN
                        title: BlockIdFlag indicates which BlcokID the signature is for
                      validator_address:
                        type: string
                        format: byte
                      timestamp:
                        type: string
                        format: date-time
                      signature:
                        type: string
                        format: byte
                    description: CommitSig is a part of the Vote included in a Commit.
              description: Commit contains the evidence that a block was committed by a set of
                validators.
        pagination:
          description: pagination defines a pagination for the response.
          type: object
          properties:
            next_key:
              type: string
              format: byte
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
            total:
              type: string
              format: uint64
              title: >-
                total is total number of results available if
                PageRequest.count_total

                was set, its value is undefined otherwise
      description: >-
        GetBlockWithTxsResponse is the response type for the
        Service.GetBlockWithTxs method.


        Since: cosmos-sdk 0.45.2
    cosmos.tx.v1beta1.GetTxResponse:
      type: object
      properties:
        tx:
          type: object
          properties:
            body:
              title: body is the processable content of the transaction
              type: object
              properties:
                messages:
                  type: array
                  items:
                    type: object
                    properties:
                      type_url:
                        type: string
                      value:
                        type: string
                        format: byte
                  description: >-
                    messages is a list of messages to be executed. The required
                    signers of

                    those messages define the number and order of elements in AuthInfo's

                    signer_infos and Tx's signatures. Each required signer address is added to

                    the list only the first time it occurs.

                    By convention, the first required signer (usually from the first message)

                    is referred to as the primary signer and pays the fee for the whole

                    transaction.
                memo:
                  type: string
                  description: >-
                    memo is any arbitrary note/comment to be added to the
                    transaction.

                    WARNING: in clients, any publicly exposed text should not be called memo,

                    but should be called `note` instead (see https://github.com/cosmos/cosmos-sdk/issues/9122).
                timeout_height:
                  type: string
                  format: uint64
                  title: >-
                    timeout is the block height after which this transaction
                    will not

                    be processed by the chain
                extension_options:
                  type: array
                  items:
                    type: object
                    properties:
                      type_url:
                        type: string
                      value:
                        type: string
                        format: byte
                  title: >-
                    extension_options are arbitrary options that can be added by
                    chains

                    when the default options are not sufficient. If any of these are present

                    and can't be handled, the transaction will be rejected
                non_critical_extension_options:
                  type: array
                  items:
                    type: object
                    properties:
                      type_url:
                        type: string
                      value:
                        type: string
                        format: byte
                  title: >-
                    extension_options are arbitrary options that can be added by
                    chains

                    when the default options are not sufficient. If any of these are present

                    and can't be handled, they will be ignored
              description: TxBody is the body of a transaction that all signers sign over.
            auth_info:
              title: >-
                auth_info is the authorization related content of the
                transaction,

                specifically signers, signer modes and fee
              type: object
              properties:
                signer_infos:
                  type: array
                  items:
                    type: object
                    properties:
                      public_key:
                        type: object
                        properties:
                          type_url:
                            type: string
                          value:
                            type: string
                            format: byte
                        description: >-
                          public_key is the public key of the signer. It is
                          optional for accounts

                          that already exist in state. If unset, the verifier can use the required \

                          signer address for this position and lookup the public key.
                      mode_info:
                        title: >-
                          mode_info describes the signing mode of the signer and
                          is a nested

                          structure to support nested multisig pubkey's
                        type: object
                        properties:
                          single:
                            title: single represents a single signer
                            type: object
                            properties:
                              mode:
                                title: mode is the signing mode of the single signer
                                type: string
                                enum:
                                  - SIGN_MODE_UNSPECIFIED
                                  - SIGN_MODE_DIRECT
                                  - SIGN_MODE_TEXTUAL
                                  - SIGN_MODE_LEGACY_AMINO_JSON
                                  - SIGN_MODE_EIP_191
                                default: SIGN_MODE_UNSPECIFIED
                                description: >-
                                  SignMode represents a signing mode with its
                                  own security guarantees.

                                   - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
                                  rejected
                                   - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
                                  verified with raw bytes from Tx
                                   - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
                                  human-readable textual representation on top of the binary representation

                                  from SIGN_MODE_DIRECT
                                   - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
                                  Amino JSON and will be removed in the future
                                   - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
                                  SDK. Ref: https://eips.ethereum.org/EIPS/eip-191


                                  Currently, SIGN_MODE_EIP_191 is registered as a SignMode enum variant,

                                  but is not implemented on the SDK by default. To enable EIP-191, you need

                                  to pass a custom `TxConfig` that has an implementation of

                                  `SignModeHandler` for EIP-191. The SDK may decide to fully support

                                  EIP-191 in the future.


                                  Since: cosmos-sdk 0.45.2
                          multi:
                            title: multi represents a nested multisig signer
                            type: object
                            properties:
                              bitarray:
                                title: bitarray specifies which keys within the multisig are signing
                                type: object
                                properties:
                                  extra_bits_stored:
                                    type: integer
                                    format: int64
                                  elems:
                                    type: string
                                    format: byte
                                description: >-
                                  CompactBitArray is an implementation of a
                                  space efficient bit array.

                                  This is used to ensure that the encoded data takes up a minimal amount of

                                  space after proto encoding.

                                  This is not thread safe, and is not intended for concurrent usage.
                              mode_infos:
                                type: array
                                items: {}
                                title: >-
                                  mode_infos is the corresponding modes of the
                                  signers of the multisig

                                  which could include nested multisig public keys
                        description: ModeInfo describes the signing mode of a single or nested multisig
                          signer.
                      sequence:
                        type: string
                        format: uint64
                        description: >-
                          sequence is the sequence of the account, which
                          describes the

                          number of committed transactions signed by a given address. It is used to

                          prevent replay attacks.
                    description: >-
                      SignerInfo describes the public key and signing mode of a
                      single top-level

                      signer.
                  description: >-
                    signer_infos defines the signing modes for the required
                    signers. The number

                    and order of elements must match the required signers from TxBody's

                    messages. The first element is the primary signer and the one which pays

                    the fee.
                fee:
                  description: >-
                    Fee is the fee and gas limit for the transaction. The first
                    signer is the

                    primary signer and the one which pays the fee. The fee can be calculated

                    based on the cost of evaluating the body and doing signature verification

                    of the signers. This can be estimated via simulation.
                  type: object
                  properties:
                    amount:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the custom method

                          signatures required by gogoproto.
                      title: amount is the amount of coins to be paid as a fee
                    gas_limit:
                      type: string
                      format: uint64
                      title: >-
                        gas_limit is the maximum gas that can be used in
                        transaction processing

                        before an out of gas error occurs
                    payer:
                      type: string
                      description: >-
                        if unset, the first signer is responsible for paying the
                        fees. If set, the specified account must pay the fees.

                        the payer must be a tx signer (and thus have signed this field in AuthInfo).

                        setting this field does *not* change the ordering of required signers for the transaction.
                    granter:
                      type: string
                      title: >-
                        if set, the fee payer (either the first signer or the
                        value of the payer field) requests that a fee grant be
                        used

                        to pay fees instead of the fee payer's own balance. If an appropriate fee grant does not exist or the chain does

                        not support fee grants, this will fail
              description: >-
                AuthInfo describes the fee and signer modes that are used to
                sign a

                transaction.
            signatures:
              type: array
              items:
                type: string
                format: byte
              description: >-
                signatures is a list of signatures that matches the length and
                order of

                AuthInfo's signer_infos to allow connecting signature meta information like

                public key and signing mode by position.
          description: Tx is the standard type used for broadcasting transactions.
        tx_response:
          type: object
          properties:
            height:
              type: string
              format: int64
              title: The block height
            txhash:
              type: string
              description: The transaction hash.
            codespace:
              type: string
              title: Namespace for the Code
            code:
              type: integer
              format: int64
              description: Response code.
            data:
              type: string
              description: Result bytes, if any.
            raw_log:
              type: string
              description: |-
                The output of the application's logger (raw string). May be
                non-deterministic.
            logs:
              type: array
              items:
                type: object
                properties:
                  msg_index:
                    type: integer
                    format: int64
                  log:
                    type: string
                  events:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                        attributes:
                          type: array
                          items:
                            type: object
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            description: >-
                              Attribute defines an attribute wrapper where the
                              key and value are

                              strings instead of raw bytes.
                      description: >-
                        StringEvent defines en Event object wrapper where all
                        the attributes

                        contain key/value pairs that are strings instead of raw bytes.
                    description: >-
                      Events contains a slice of Event objects that were emitted
                      during some

                      execution.
                description: ABCIMessageLog defines a structure containing an indexed tx ABCI
                  message log.
              description: The output of the application's logger (typed). May be
                non-deterministic.
            info:
              type: string
              description: Additional information. May be non-deterministic.
            gas_wanted:
              type: string
              format: int64
              description: Amount of gas requested for transaction.
            gas_used:
              type: string
              format: int64
              description: Amount of gas consumed by transaction.
            tx:
              type: object
              properties:
                type_url:
                  type: string
                value:
                  type: string
                  format: byte
              description: The request transaction bytes.
            timestamp:
              type: string
              description: >-
                Time of the previous block. For heights > 1, it's the weighted
                median of

                the timestamps of the valid votes in the block.LastCommit. For height == 1,

                it's genesis time.
            events:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                  attributes:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                          format: byte
                        value:
                          type: string
                          format: byte
                        index:
                          type: boolean
                      description: EventAttribute is a single key-value pair, associated with an
                        event.
                description: >-
                  Event allows application developers to attach additional
                  information to

                  ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.

                  Later, transactions may be queried using these events.
              description: >-
                Events defines all the events emitted by processing a
                transaction. Note,

                these events include those emitted by processing all the messages and those

                emitted from the ante handler. Whereas Logs contains the events, with

                additional metadata, emitted only by processing the messages.


                Since: cosmos-sdk 0.42.11, 0.44.5, 0.45
          description: >-
            TxResponse defines a structure containing relevant tx data and
            metadata. The

            tags are stringified and the log is JSON decoded.
      description: GetTxResponse is the response type for the Service.GetTx method.
    cosmos.tx.v1beta1.GetTxsEventResponse:
      type: object
      properties:
        txs:
          type: array
          items:
            type: object
            properties:
              body:
                title: body is the processable content of the transaction
                type: object
                properties:
                  messages:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
                    description: >-
                      messages is a list of messages to be executed. The
                      required signers of

                      those messages define the number and order of elements in AuthInfo's

                      signer_infos and Tx's signatures. Each required signer address is added to

                      the list only the first time it occurs.

                      By convention, the first required signer (usually from the first message)

                      is referred to as the primary signer and pays the fee for the whole

                      transaction.
                  memo:
                    type: string
                    description: >-
                      memo is any arbitrary note/comment to be added to the
                      transaction.

                      WARNING: in clients, any publicly exposed text should not be called memo,

                      but should be called `note` instead (see https://github.com/cosmos/cosmos-sdk/issues/9122).
                  timeout_height:
                    type: string
                    format: uint64
                    title: >-
                      timeout is the block height after which this transaction
                      will not

                      be processed by the chain
                  extension_options:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
                    title: >-
                      extension_options are arbitrary options that can be added
                      by chains

                      when the default options are not sufficient. If any of these are present

                      and can't be handled, the transaction will be rejected
                  non_critical_extension_options:
                    type: array
                    items:
                      type: object
                      properties:
                        type_url:
                          type: string
                        value:
                          type: string
                          format: byte
                    title: >-
                      extension_options are arbitrary options that can be added
                      by chains

                      when the default options are not sufficient. If any of these are present

                      and can't be handled, they will be ignored
                description: TxBody is the body of a transaction that all signers sign over.
              auth_info:
                title: >-
                  auth_info is the authorization related content of the
                  transaction,

                  specifically signers, signer modes and fee
                type: object
                properties:
                  signer_infos:
                    type: array
                    items:
                      type: object
                      properties:
                        public_key:
                          type: object
                          properties:
                            type_url:
                              type: string
                            value:
                              type: string
                              format: byte
                          description: >-
                            public_key is the public key of the signer. It is
                            optional for accounts

                            that already exist in state. If unset, the verifier can use the required \

                            signer address for this position and lookup the public key.
                        mode_info:
                          title: >-
                            mode_info describes the signing mode of the signer
                            and is a nested

                            structure to support nested multisig pubkey's
                          type: object
                          properties:
                            single:
                              title: single represents a single signer
                              type: object
                              properties:
                                mode:
                                  title: mode is the signing mode of the single signer
                                  type: string
                                  enum:
                                    - SIGN_MODE_UNSPECIFIED
                                    - SIGN_MODE_DIRECT
                                    - SIGN_MODE_TEXTUAL
                                    - SIGN_MODE_LEGACY_AMINO_JSON
                                    - SIGN_MODE_EIP_191
                                  default: SIGN_MODE_UNSPECIFIED
                                  description: >-
                                    SignMode represents a signing mode with its
                                    own security guarantees.

                                     - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
                                    rejected
                                     - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
                                    verified with raw bytes from Tx
                                     - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
                                    human-readable textual representation on top of the binary representation

                                    from SIGN_MODE_DIRECT
                                     - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
                                    Amino JSON and will be removed in the future
                                     - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
                                    SDK. Ref: https://eips.ethereum.org/EIPS/eip-191


                                    Currently, SIGN_MODE_EIP_191 is registered as a SignMode enum variant,

                                    but is not implemented on the SDK by default. To enable EIP-191, you need

                                    to pass a custom `TxConfig` that has an implementation of

                                    `SignModeHandler` for EIP-191. The SDK may decide to fully support

                                    EIP-191 in the future.


                                    Since: cosmos-sdk 0.45.2
                            multi:
                              title: multi represents a nested multisig signer
                              type: object
                              properties:
                                bitarray:
                                  title: bitarray specifies which keys within the multisig are signing
                                  type: object
                                  properties:
                                    extra_bits_stored:
                                      type: integer
                                      format: int64
                                    elems:
                                      type: string
                                      format: byte
                                  description: >-
                                    CompactBitArray is an implementation of a
                                    space efficient bit array.

                                    This is used to ensure that the encoded data takes up a minimal amount of

                                    space after proto encoding.

                                    This is not thread safe, and is not intended for concurrent usage.
                                mode_infos:
                                  type: array
                                  items: {}
                                  title: >-
                                    mode_infos is the corresponding modes of the
                                    signers of the multisig

                                    which could include nested multisig public keys
                          description: ModeInfo describes the signing mode of a single or nested multisig
                            signer.
                        sequence:
                          type: string
                          format: uint64
                          description: >-
                            sequence is the sequence of the account, which
                            describes the

                            number of committed transactions signed by a given address. It is used to

                            prevent replay attacks.
                      description: >-
                        SignerInfo describes the public key and signing mode of
                        a single top-level

                        signer.
                    description: >-
                      signer_infos defines the signing modes for the required
                      signers. The number

                      and order of elements must match the required signers from TxBody's

                      messages. The first element is the primary signer and the one which pays

                      the fee.
                  fee:
                    description: >-
                      Fee is the fee and gas limit for the transaction. The
                      first signer is the

                      primary signer and the one which pays the fee. The fee can be calculated

                      based on the cost of evaluating the body and doing signature verification

                      of the signers. This can be estimated via simulation.
                    type: object
                    properties:
                      amount:
                        type: array
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: >-
                            Coin defines a token with a denomination and an
                            amount.


                            NOTE: The amount field is an Int which implements the custom method

                            signatures required by gogoproto.
                        title: amount is the amount of coins to be paid as a fee
                      gas_limit:
                        type: string
                        format: uint64
                        title: >-
                          gas_limit is the maximum gas that can be used in
                          transaction processing

                          before an out of gas error occurs
                      payer:
                        type: string
                        description: >-
                          if unset, the first signer is responsible for paying
                          the fees. If set, the specified account must pay the
                          fees.

                          the payer must be a tx signer (and thus have signed this field in AuthInfo).

                          setting this field does *not* change the ordering of required signers for the transaction.
                      granter:
                        type: string
                        title: >-
                          if set, the fee payer (either the first signer or the
                          value of the payer field) requests that a fee grant be
                          used

                          to pay fees instead of the fee payer's own balance. If an appropriate fee grant does not exist or the chain does

                          not support fee grants, this will fail
                description: >-
                  AuthInfo describes the fee and signer modes that are used to
                  sign a

                  transaction.
              signatures:
                type: array
                items:
                  type: string
                  format: byte
                description: >-
                  signatures is a list of signatures that matches the length and
                  order of

                  AuthInfo's signer_infos to allow connecting signature meta information like

                  public key and signing mode by position.
            description: Tx is the standard type used for broadcasting transactions.
          description: txs is the list of queried transactions.
        tx_responses:
          type: array
          items:
            type: object
            properties:
              height:
                type: string
                format: int64
                title: The block height
              txhash:
                type: string
                description: The transaction hash.
              codespace:
                type: string
                title: Namespace for the Code
              code:
                type: integer
                format: int64
                description: Response code.
              data:
                type: string
                description: Result bytes, if any.
              raw_log:
                type: string
                description: |-
                  The output of the application's logger (raw string). May be
                  non-deterministic.
              logs:
                type: array
                items:
                  type: object
                  properties:
                    msg_index:
                      type: integer
                      format: int64
                    log:
                      type: string
                    events:
                      type: array
                      items:
                        type: object
                        properties:
                          type:
                            type: string
                          attributes:
                            type: array
                            items:
                              type: object
                              properties:
                                key:
                                  type: string
                                value:
                                  type: string
                              description: >-
                                Attribute defines an attribute wrapper where the
                                key and value are

                                strings instead of raw bytes.
                        description: >-
                          StringEvent defines en Event object wrapper where all
                          the attributes

                          contain key/value pairs that are strings instead of raw bytes.
                      description: >-
                        Events contains a slice of Event objects that were
                        emitted during some

                        execution.
                  description: ABCIMessageLog defines a structure containing an indexed tx ABCI
                    message log.
                description: The output of the application's logger (typed). May be
                  non-deterministic.
              info:
                type: string
                description: Additional information. May be non-deterministic.
              gas_wanted:
                type: string
                format: int64
                description: Amount of gas requested for transaction.
              gas_used:
                type: string
                format: int64
                description: Amount of gas consumed by transaction.
              tx:
                type: object
                properties:
                  type_url:
                    type: string
                  value:
                    type: string
                    format: byte
                description: The request transaction bytes.
              timestamp:
                type: string
                description: >-
                  Time of the previous block. For heights > 1, it's the weighted
                  median of

                  the timestamps of the valid votes in the block.LastCommit. For height == 1,

                  it's genesis time.
              events:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: string
                    attributes:
                      type: array
                      items:
                        type: object
                        properties:
                          key:
                            type: string
                            format: byte
                          value:
                            type: string
                            format: byte
                          index:
                            type: boolean
                        description: EventAttribute is a single key-value pair, associated with an
                          event.
                  description: >-
                    Event allows application developers to attach additional
                    information to

                    ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.

                    Later, transactions may be queried using these events.
                description: >-
                  Events defines all the events emitted by processing a
                  transaction. Note,

                  these events include those emitted by processing all the messages and those

                  emitted from the ante handler. Whereas Logs contains the events, with

                  additional metadata, emitted only by processing the messages.


                  Since: cosmos-sdk 0.42.11, 0.44.5, 0.45
            description: >-
              TxResponse defines a structure containing relevant tx data and
              metadata. The

              tags are stringified and the log is JSON decoded.
          description: tx_responses is the list of queried TxResponses.
        pagination:
          description: pagination defines a pagination for the response.
          type: object
          properties:
            next_key:
              type: string
              format: byte
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
            total:
              type: string
              format: uint64
              title: >-
                total is total number of results available if
                PageRequest.count_total

                was set, its value is undefined otherwise
      description: |-
        GetTxsEventResponse is the response type for the Service.TxsByEvents
        RPC method.
    cosmos.tx.v1beta1.ModeInfo:
      type: object
      properties:
        single:
          title: single represents a single signer
          type: object
          properties:
            mode:
              title: mode is the signing mode of the single signer
              type: string
              enum:
                - SIGN_MODE_UNSPECIFIED
                - SIGN_MODE_DIRECT
                - SIGN_MODE_TEXTUAL
                - SIGN_MODE_LEGACY_AMINO_JSON
                - SIGN_MODE_EIP_191
              default: SIGN_MODE_UNSPECIFIED
              description: >-
                SignMode represents a signing mode with its own security
                guarantees.

                 - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
                rejected
                 - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
                verified with raw bytes from Tx
                 - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
                human-readable textual representation on top of the binary representation

                from SIGN_MODE_DIRECT
                 - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
                Amino JSON and will be removed in the future
                 - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
                SDK. Ref: https://eips.ethereum.org/EIPS/eip-191


                Currently, SIGN_MODE_EIP_191 is registered as a SignMode enum variant,

                but is not implemented on the SDK by default. To enable EIP-191, you need

                to pass a custom `TxConfig` that has an implementation of

                `SignModeHandler` for EIP-191. The SDK may decide to fully support

                EIP-191 in the future.


                Since: cosmos-sdk 0.45.2
        multi:
          title: multi represents a nested multisig signer
          type: object
          properties:
            bitarray:
              title: bitarray specifies which keys within the multisig are signing
              type: object
              properties:
                extra_bits_stored:
                  type: integer
                  format: int64
                elems:
                  type: string
                  format: byte
              description: >-
                CompactBitArray is an implementation of a space efficient bit
                array.

                This is used to ensure that the encoded data takes up a minimal amount of

                space after proto encoding.

                This is not thread safe, and is not intended for concurrent usage.
            mode_infos:
              type: array
              items: {}
              title: >-
                mode_infos is the corresponding modes of the signers of the
                multisig

                which could include nested multisig public keys
      description: ModeInfo describes the signing mode of a single or nested multisig
        signer.
    cosmos.tx.v1beta1.ModeInfo.Multi:
      type: object
      properties:
        bitarray:
          title: bitarray specifies which keys within the multisig are signing
          type: object
          properties:
            extra_bits_stored:
              type: integer
              format: int64
            elems:
              type: string
              format: byte
          description: >-
            CompactBitArray is an implementation of a space efficient bit array.

            This is used to ensure that the encoded data takes up a minimal amount of

            space after proto encoding.

            This is not thread safe, and is not intended for concurrent usage.
        mode_infos:
          type: array
          items: {}
          title: |-
            mode_infos is the corresponding modes of the signers of the multisig
            which could include nested multisig public keys
      title: Multi is the mode info for a multisig public key
    cosmos.tx.v1beta1.ModeInfo.Single:
      type: object
      properties:
        mode:
          title: mode is the signing mode of the single signer
          type: string
          enum:
            - SIGN_MODE_UNSPECIFIED
            - SIGN_MODE_DIRECT
            - SIGN_MODE_TEXTUAL
            - SIGN_MODE_LEGACY_AMINO_JSON
            - SIGN_MODE_EIP_191
          default: SIGN_MODE_UNSPECIFIED
          description: >-
            SignMode represents a signing mode with its own security guarantees.

             - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
            rejected
             - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
            verified with raw bytes from Tx
             - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
            human-readable textual representation on top of the binary representation

            from SIGN_MODE_DIRECT
             - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
            Amino JSON and will be removed in the future
             - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
            SDK. Ref: https://eips.ethereum.org/EIPS/eip-191


            Currently, SIGN_MODE_EIP_191 is registered as a SignMode enum variant,

            but is not implemented on the SDK by default. To enable EIP-191, you need

            to pass a custom `TxConfig` that has an implementation of

            `SignModeHandler` for EIP-191. The SDK may decide to fully support

            EIP-191 in the future.


            Since: cosmos-sdk 0.45.2
      title: >-
        Single is the mode info for a single signer. It is structured as a
        message

        to allow for additional fields such as locale for SIGN_MODE_TEXTUAL in the

        future
    cosmos.tx.v1beta1.OrderBy:
      type: string
      enum:
        - ORDER_BY_UNSPECIFIED
        - ORDER_BY_ASC
        - ORDER_BY_DESC
      default: ORDER_BY_UNSPECIFIED
      description: >-
        - ORDER_BY_UNSPECIFIED: ORDER_BY_UNSPECIFIED specifies an unknown
        sorting order. OrderBy defaults to ASC in this case.
         - ORDER_BY_ASC: ORDER_BY_ASC defines ascending order
         - ORDER_BY_DESC: ORDER_BY_DESC defines descending order
      title: OrderBy defines the sorting order
    cosmos.tx.v1beta1.SignerInfo:
      type: object
      properties:
        public_key:
          type: object
          properties:
            type_url:
              type: string
            value:
              type: string
              format: byte
          description: >-
            public_key is the public key of the signer. It is optional for
            accounts

            that already exist in state. If unset, the verifier can use the required \

            signer address for this position and lookup the public key.
        mode_info:
          title: |-
            mode_info describes the signing mode of the signer and is a nested
            structure to support nested multisig pubkey's
          type: object
          properties:
            single:
              title: single represents a single signer
              type: object
              properties:
                mode:
                  title: mode is the signing mode of the single signer
                  type: string
                  enum:
                    - SIGN_MODE_UNSPECIFIED
                    - SIGN_MODE_DIRECT
                    - SIGN_MODE_TEXTUAL
                    - SIGN_MODE_LEGACY_AMINO_JSON
                    - SIGN_MODE_EIP_191
                  default: SIGN_MODE_UNSPECIFIED
                  description: >-
                    SignMode represents a signing mode with its own security
                    guarantees.

                     - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
                    rejected
                     - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
                    verified with raw bytes from Tx
                     - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
                    human-readable textual representation on top of the binary representation

                    from SIGN_MODE_DIRECT
                     - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
                    Amino JSON and will be removed in the future
                     - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
                    SDK. Ref: https://eips.ethereum.org/EIPS/eip-191


                    Currently, SIGN_MODE_EIP_191 is registered as a SignMode enum variant,

                    but is not implemented on the SDK by default. To enable EIP-191, you need

                    to pass a custom `TxConfig` that has an implementation of

                    `SignModeHandler` for EIP-191. The SDK may decide to fully support

                    EIP-191 in the future.


                    Since: cosmos-sdk 0.45.2
            multi:
              title: multi represents a nested multisig signer
              type: object
              properties:
                bitarray:
                  title: bitarray specifies which keys within the multisig are signing
                  type: object
                  properties:
                    extra_bits_stored:
                      type: integer
                      format: int64
                    elems:
                      type: string
                      format: byte
                  description: >-
                    CompactBitArray is an implementation of a space efficient
                    bit array.

                    This is used to ensure that the encoded data takes up a minimal amount of

                    space after proto encoding.

                    This is not thread safe, and is not intended for concurrent usage.
                mode_infos:
                  type: array
                  items: {}
                  title: >-
                    mode_infos is the corresponding modes of the signers of the
                    multisig

                    which could include nested multisig public keys
          description: ModeInfo describes the signing mode of a single or nested multisig
            signer.
        sequence:
          type: string
          format: uint64
          description: >-
            sequence is the sequence of the account, which describes the

            number of committed transactions signed by a given address. It is used to

            prevent replay attacks.
      description: >-
        SignerInfo describes the public key and signing mode of a single
        top-level

        signer.
    cosmos.tx.v1beta1.SimulateRequest:
      type: object
      properties:
        tx:
          description: |-
            tx is the transaction to simulate.
            Deprecated. Send raw tx bytes instead.
          type: object
          properties:
            body:
              title: body is the processable content of the transaction
              type: object
              properties:
                messages:
                  type: array
                  items:
                    type: object
                    properties:
                      type_url:
                        type: string
                      value:
                        type: string
                        format: byte
                  description: >-
                    messages is a list of messages to be executed. The required
                    signers of

                    those messages define the number and order of elements in AuthInfo's

                    signer_infos and Tx's signatures. Each required signer address is added to

                    the list only the first time it occurs.

                    By convention, the first required signer (usually from the first message)

                    is referred to as the primary signer and pays the fee for the whole

                    transaction.
                memo:
                  type: string
                  description: >-
                    memo is any arbitrary note/comment to be added to the
                    transaction.

                    WARNING: in clients, any publicly exposed text should not be called memo,

                    but should be called `note` instead (see https://github.com/cosmos/cosmos-sdk/issues/9122).
                timeout_height:
                  type: string
                  format: uint64
                  title: >-
                    timeout is the block height after which this transaction
                    will not

                    be processed by the chain
                extension_options:
                  type: array
                  items:
                    type: object
                    properties:
                      type_url:
                        type: string
                      value:
                        type: string
                        format: byte
                  title: >-
                    extension_options are arbitrary options that can be added by
                    chains

                    when the default options are not sufficient. If any of these are present

                    and can't be handled, the transaction will be rejected
                non_critical_extension_options:
                  type: array
                  items:
                    type: object
                    properties:
                      type_url:
                        type: string
                      value:
                        type: string
                        format: byte
                  title: >-
                    extension_options are arbitrary options that can be added by
                    chains

                    when the default options are not sufficient. If any of these are present

                    and can't be handled, they will be ignored
              description: TxBody is the body of a transaction that all signers sign over.
            auth_info:
              title: >-
                auth_info is the authorization related content of the
                transaction,

                specifically signers, signer modes and fee
              type: object
              properties:
                signer_infos:
                  type: array
                  items:
                    type: object
                    properties:
                      public_key:
                        type: object
                        properties:
                          type_url:
                            type: string
                          value:
                            type: string
                            format: byte
                        description: >-
                          public_key is the public key of the signer. It is
                          optional for accounts

                          that already exist in state. If unset, the verifier can use the required \

                          signer address for this position and lookup the public key.
                      mode_info:
                        title: >-
                          mode_info describes the signing mode of the signer and
                          is a nested

                          structure to support nested multisig pubkey's
                        type: object
                        properties:
                          single:
                            title: single represents a single signer
                            type: object
                            properties:
                              mode:
                                title: mode is the signing mode of the single signer
                                type: string
                                enum:
                                  - SIGN_MODE_UNSPECIFIED
                                  - SIGN_MODE_DIRECT
                                  - SIGN_MODE_TEXTUAL
                                  - SIGN_MODE_LEGACY_AMINO_JSON
                                  - SIGN_MODE_EIP_191
                                default: SIGN_MODE_UNSPECIFIED
                                description: >-
                                  SignMode represents a signing mode with its
                                  own security guarantees.

                                   - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
                                  rejected
                                   - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
                                  verified with raw bytes from Tx
                                   - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
                                  human-readable textual representation on top of the binary representation

                                  from SIGN_MODE_DIRECT
                                   - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
                                  Amino JSON and will be removed in the future
                                   - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
                                  SDK. Ref: https://eips.ethereum.org/EIPS/eip-191


                                  Currently, SIGN_MODE_EIP_191 is registered as a SignMode enum variant,

                                  but is not implemented on the SDK by default. To enable EIP-191, you need

                                  to pass a custom `TxConfig` that has an implementation of

                                  `SignModeHandler` for EIP-191. The SDK may decide to fully support

                                  EIP-191 in the future.


                                  Since: cosmos-sdk 0.45.2
                          multi:
                            title: multi represents a nested multisig signer
                            type: object
                            properties:
                              bitarray:
                                title: bitarray specifies which keys within the multisig are signing
                                type: object
                                properties:
                                  extra_bits_stored:
                                    type: integer
                                    format: int64
                                  elems:
                                    type: string
                                    format: byte
                                description: >-
                                  CompactBitArray is an implementation of a
                                  space efficient bit array.

                                  This is used to ensure that the encoded data takes up a minimal amount of

                                  space after proto encoding.

                                  This is not thread safe, and is not intended for concurrent usage.
                              mode_infos:
                                type: array
                                items: {}
                                title: >-
                                  mode_infos is the corresponding modes of the
                                  signers of the multisig

                                  which could include nested multisig public keys
                        description: ModeInfo describes the signing mode of a single or nested multisig
                          signer.
                      sequence:
                        type: string
                        format: uint64
                        description: >-
                          sequence is the sequence of the account, which
                          describes the

                          number of committed transactions signed by a given address. It is used to

                          prevent replay attacks.
                    description: >-
                      SignerInfo describes the public key and signing mode of a
                      single top-level

                      signer.
                  description: >-
                    signer_infos defines the signing modes for the required
                    signers. The number

                    and order of elements must match the required signers from TxBody's

                    messages. The first element is the primary signer and the one which pays

                    the fee.
                fee:
                  description: >-
                    Fee is the fee and gas limit for the transaction. The first
                    signer is the

                    primary signer and the one which pays the fee. The fee can be calculated

                    based on the cost of evaluating the body and doing signature verification

                    of the signers. This can be estimated via simulation.
                  type: object
                  properties:
                    amount:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the custom method

                          signatures required by gogoproto.
                      title: amount is the amount of coins to be paid as a fee
                    gas_limit:
                      type: string
                      format: uint64
                      title: >-
                        gas_limit is the maximum gas that can be used in
                        transaction processing

                        before an out of gas error occurs
                    payer:
                      type: string
                      description: >-
                        if unset, the first signer is responsible for paying the
                        fees. If set, the specified account must pay the fees.

                        the payer must be a tx signer (and thus have signed this field in AuthInfo).

                        setting this field does *not* change the ordering of required signers for the transaction.
                    granter:
                      type: string
                      title: >-
                        if set, the fee payer (either the first signer or the
                        value of the payer field) requests that a fee grant be
                        used

                        to pay fees instead of the fee payer's own balance. If an appropriate fee grant does not exist or the chain does

                        not support fee grants, this will fail
              description: >-
                AuthInfo describes the fee and signer modes that are used to
                sign a

                transaction.
            signatures:
              type: array
              items:
                type: string
                format: byte
              description: >-
                signatures is a list of signatures that matches the length and
                order of

                AuthInfo's signer_infos to allow connecting signature meta information like

                public key and signing mode by position.
        tx_bytes:
          type: string
          format: byte
          description: |-
            tx_bytes is the raw transaction.

            Since: cosmos-sdk 0.43
      description: |-
        SimulateRequest is the request type for the Service.Simulate
        RPC method.
    cosmos.tx.v1beta1.SimulateResponse:
      type: object
      properties:
        gas_info:
          description: gas_info is the information about gas used in the simulation.
          type: object
          properties:
            gas_wanted:
              type: string
              format: uint64
              description: GasWanted is the maximum units of work we allow this tx to perform.
            gas_used:
              type: string
              format: uint64
              description: GasUsed is the amount of gas actually consumed.
        result:
          description: result is the result of the simulation.
          type: object
          properties:
            data:
              type: string
              format: byte
              description: >-
                Data is any data returned from message or handler execution. It
                MUST be

                length prefixed in order to separate data from multiple message executions.
            log:
              type: string
              description: Log contains the log information from message or handler execution.
            events:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                  attributes:
                    type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                          format: byte
                        value:
                          type: string
                          format: byte
                        index:
                          type: boolean
                      description: EventAttribute is a single key-value pair, associated with an
                        event.
                description: >-
                  Event allows application developers to attach additional
                  information to

                  ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.

                  Later, transactions may be queried using these events.
              description: >-
                Events contains a slice of Event objects that were emitted
                during message

                or handler execution.
      description: |-
        SimulateResponse is the response type for the
        Service.SimulateRPC method.
    cosmos.tx.v1beta1.Tx:
      type: object
      properties:
        body:
          title: body is the processable content of the transaction
          type: object
          properties:
            messages:
              type: array
              items:
                type: object
                properties:
                  type_url:
                    type: string
                  value:
                    type: string
                    format: byte
              description: >-
                messages is a list of messages to be executed. The required
                signers of

                those messages define the number and order of elements in AuthInfo's

                signer_infos and Tx's signatures. Each required signer address is added to

                the list only the first time it occurs.

                By convention, the first required signer (usually from the first message)

                is referred to as the primary signer and pays the fee for the whole

                transaction.
            memo:
              type: string
              description: >-
                memo is any arbitrary note/comment to be added to the
                transaction.

                WARNING: in clients, any publicly exposed text should not be called memo,

                but should be called `note` instead (see https://github.com/cosmos/cosmos-sdk/issues/9122).
            timeout_height:
              type: string
              format: uint64
              title: >-
                timeout is the block height after which this transaction will
                not

                be processed by the chain
            extension_options:
              type: array
              items:
                type: object
                properties:
                  type_url:
                    type: string
                  value:
                    type: string
                    format: byte
              title: >-
                extension_options are arbitrary options that can be added by
                chains

                when the default options are not sufficient. If any of these are present

                and can't be handled, the transaction will be rejected
            non_critical_extension_options:
              type: array
              items:
                type: object
                properties:
                  type_url:
                    type: string
                  value:
                    type: string
                    format: byte
              title: >-
                extension_options are arbitrary options that can be added by
                chains

                when the default options are not sufficient. If any of these are present

                and can't be handled, they will be ignored
          description: TxBody is the body of a transaction that all signers sign over.
        auth_info:
          title: |-
            auth_info is the authorization related content of the transaction,
            specifically signers, signer modes and fee
          type: object
          properties:
            signer_infos:
              type: array
              items:
                type: object
                properties:
                  public_key:
                    type: object
                    properties:
                      type_url:
                        type: string
                      value:
                        type: string
                        format: byte
                    description: >-
                      public_key is the public key of the signer. It is optional
                      for accounts

                      that already exist in state. If unset, the verifier can use the required \

                      signer address for this position and lookup the public key.
                  mode_info:
                    title: >-
                      mode_info describes the signing mode of the signer and is
                      a nested

                      structure to support nested multisig pubkey's
                    type: object
                    properties:
                      single:
                        title: single represents a single signer
                        type: object
                        properties:
                          mode:
                            title: mode is the signing mode of the single signer
                            type: string
                            enum:
                              - SIGN_MODE_UNSPECIFIED
                              - SIGN_MODE_DIRECT
                              - SIGN_MODE_TEXTUAL
                              - SIGN_MODE_LEGACY_AMINO_JSON
                              - SIGN_MODE_EIP_191
                            default: SIGN_MODE_UNSPECIFIED
                            description: >-
                              SignMode represents a signing mode with its own
                              security guarantees.

                               - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
                              rejected
                               - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
                              verified with raw bytes from Tx
                               - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
                              human-readable textual representation on top of the binary representation

                              from SIGN_MODE_DIRECT
                               - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
                              Amino JSON and will be removed in the future
                               - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
                              SDK. Ref: https://eips.ethereum.org/EIPS/eip-191


                              Currently, SIGN_MODE_EIP_191 is registered as a SignMode enum variant,

                              but is not implemented on the SDK by default. To enable EIP-191, you need

                              to pass a custom `TxConfig` that has an implementation of

                              `SignModeHandler` for EIP-191. The SDK may decide to fully support

                              EIP-191 in the future.


                              Since: cosmos-sdk 0.45.2
                      multi:
                        title: multi represents a nested multisig signer
                        type: object
                        properties:
                          bitarray:
                            title: bitarray specifies which keys within the multisig are signing
                            type: object
                            properties:
                              extra_bits_stored:
                                type: integer
                                format: int64
                              elems:
                                type: string
                                format: byte
                            description: >-
                              CompactBitArray is an implementation of a space
                              efficient bit array.

                              This is used to ensure that the encoded data takes up a minimal amount of

                              space after proto encoding.

                              This is not thread safe, and is not intended for concurrent usage.
                          mode_infos:
                            type: array
                            items: {}
                            title: >-
                              mode_infos is the corresponding modes of the
                              signers of the multisig

                              which could include nested multisig public keys
                    description: ModeInfo describes the signing mode of a single or nested multisig
                      signer.
                  sequence:
                    type: string
                    format: uint64
                    description: >-
                      sequence is the sequence of the account, which describes
                      the

                      number of committed transactions signed by a given address. It is used to

                      prevent replay attacks.
                description: >-
                  SignerInfo describes the public key and signing mode of a
                  single top-level

                  signer.
              description: >-
                signer_infos defines the signing modes for the required signers.
                The number

                and order of elements must match the required signers from TxBody's

                messages. The first element is the primary signer and the one which pays

                the fee.
            fee:
              description: >-
                Fee is the fee and gas limit for the transaction. The first
                signer is the

                primary signer and the one which pays the fee. The fee can be calculated

                based on the cost of evaluating the body and doing signature verification

                of the signers. This can be estimated via simulation.
              type: object
              properties:
                amount:
                  type: array
                  items:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the custom method

                      signatures required by gogoproto.
                  title: amount is the amount of coins to be paid as a fee
                gas_limit:
                  type: string
                  format: uint64
                  title: >-
                    gas_limit is the maximum gas that can be used in transaction
                    processing

                    before an out of gas error occurs
                payer:
                  type: string
                  description: >-
                    if unset, the first signer is responsible for paying the
                    fees. If set, the specified account must pay the fees.

                    the payer must be a tx signer (and thus have signed this field in AuthInfo).

                    setting this field does *not* change the ordering of required signers for the transaction.
                granter:
                  type: string
                  title: >-
                    if set, the fee payer (either the first signer or the value
                    of the payer field) requests that a fee grant be used

                    to pay fees instead of the fee payer's own balance. If an appropriate fee grant does not exist or the chain does

                    not support fee grants, this will fail
          description: |-
            AuthInfo describes the fee and signer modes that are used to sign a
            transaction.
        signatures:
          type: array
          items:
            type: string
            format: byte
          description: >-
            signatures is a list of signatures that matches the length and order
            of

            AuthInfo's signer_infos to allow connecting signature meta information like

            public key and signing mode by position.
      description: Tx is the standard type used for broadcasting transactions.
    cosmos.tx.v1beta1.TxBody:
      type: object
      properties:
        messages:
          type: array
          items:
            type: object
            properties:
              type_url:
                type: string
              value:
                type: string
                format: byte
          description: >-
            messages is a list of messages to be executed. The required signers
            of

            those messages define the number and order of elements in AuthInfo's

            signer_infos and Tx's signatures. Each required signer address is added to

            the list only the first time it occurs.

            By convention, the first required signer (usually from the first message)

            is referred to as the primary signer and pays the fee for the whole

            transaction.
        memo:
          type: string
          description: >-
            memo is any arbitrary note/comment to be added to the transaction.

            WARNING: in clients, any publicly exposed text should not be called memo,

            but should be called `note` instead (see https://github.com/cosmos/cosmos-sdk/issues/9122).
        timeout_height:
          type: string
          format: uint64
          title: |-
            timeout is the block height after which this transaction will not
            be processed by the chain
        extension_options:
          type: array
          items:
            type: object
            properties:
              type_url:
                type: string
              value:
                type: string
                format: byte
          title: >-
            extension_options are arbitrary options that can be added by chains

            when the default options are not sufficient. If any of these are present

            and can't be handled, the transaction will be rejected
        non_critical_extension_options:
          type: array
          items:
            type: object
            properties:
              type_url:
                type: string
              value:
                type: string
                format: byte
          title: >-
            extension_options are arbitrary options that can be added by chains

            when the default options are not sufficient. If any of these are present

            and can't be handled, they will be ignored
      description: TxBody is the body of a transaction that all signers sign over.
    google.protobuf.Any:
      type: object
      properties:
        type_url:
          type: string
        value:
          type: string
          format: byte
    grpc.gateway.runtime.Error:
      type: object
      properties:
        error:
          type: string
        code:
          type: integer
          format: int32
        message:
          type: string
        details:
          type: array
          items:
            type: object
            properties:
              type_url:
                type: string
              value:
                type: string
                format: byte
    tendermint.abci.Event:
      type: object
      properties:
        type:
          type: string
        attributes:
          type: array
          items:
            type: object
            properties:
              key:
                type: string
                format: byte
              value:
                type: string
                format: byte
              index:
                type: boolean
            description: EventAttribute is a single key-value pair, associated with an
              event.
      description: >-
        Event allows application developers to attach additional information to

        ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.

        Later, transactions may be queried using these events.
    tendermint.abci.EventAttribute:
      type: object
      properties:
        key:
          type: string
          format: byte
        value:
          type: string
          format: byte
        index:
          type: boolean
      description: EventAttribute is a single key-value pair, associated with an event.
    tendermint.crypto.PublicKey:
      type: object
      properties:
        ed25519:
          type: string
          format: byte
        secp256k1:
          type: string
          format: byte
      title: PublicKey defines the keys available for use with Validators
    tendermint.types.Block:
      type: object
      properties:
        header:
          type: object
          properties:
            version:
              title: basic block info
              type: object
              properties:
                block:
                  type: string
                  format: uint64
                app:
                  type: string
                  format: uint64
              description: >-
                Consensus captures the consensus rules for processing a block in
                the blockchain,

                including all blockchain data structures and the rules of the application's

                state transition machine.
            chain_id:
              type: string
            height:
              type: string
              format: int64
            time:
              type: string
              format: date-time
            last_block_id:
              type: object
              properties:
                hash:
                  type: string
                  format: byte
                part_set_header:
                  type: object
                  properties:
                    total:
                      type: integer
                      format: int64
                    hash:
                      type: string
                      format: byte
                  title: PartsetHeader
              title: BlockID
            last_commit_hash:
              type: string
              format: byte
              title: hashes of block data
            data_hash:
              type: string
              format: byte
            validators_hash:
              type: string
              format: byte
              title: hashes from the app output from the prev block
            next_validators_hash:
              type: string
              format: byte
            consensus_hash:
              type: string
              format: byte
            app_hash:
              type: string
              format: byte
            last_results_hash:
              type: string
              format: byte
            evidence_hash:
              type: string
              format: byte
              title: consensus info
            proposer_address:
              type: string
              format: byte
          description: Header defines the structure of a block header.
        data:
          type: object
          properties:
            txs:
              type: array
              items:
                type: string
                format: byte
              description: >-
                Txs that will be applied by state @ block.Height+1.

                NOTE: not all txs here are valid.  We're just agreeing on the order first.

                This means that block.AppHash does not include these txs.
          title: Data contains the set of transactions included in the block
        evidence:
          type: object
          properties:
            evidence:
              type: array
              items:
                type: object
                properties:
                  duplicate_vote_evidence:
                    type: object
                    properties:
                      vote_a:
                        type: object
                        properties:
                          type:
                            type: string
                            enum:
                              - SIGNED_MSG_TYPE_UNKNOWN
                              - SIGNED_MSG_TYPE_PREVOTE
                              - SIGNED_MSG_TYPE_PRECOMMIT
                              - SIGNED_MSG_TYPE_PROPOSAL
                            default: SIGNED_MSG_TYPE_UNKNOWN
                            description: >-
                              SignedMsgType is a type of signed message in the
                              consensus.

                               - SIGNED_MSG_TYPE_PREVOTE: Votes
                               - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                          height:
                            type: string
                            format: int64
                          round:
                            type: integer
                            format: int32
                          block_id:
                            type: object
                            properties:
                              hash:
                                type: string
                                format: byte
                              part_set_header:
                                type: object
                                properties:
                                  total:
                                    type: integer
                                    format: int64
                                  hash:
                                    type: string
                                    format: byte
                                title: PartsetHeader
                            title: BlockID
                          timestamp:
                            type: string
                            format: date-time
                          validator_address:
                            type: string
                            format: byte
                          validator_index:
                            type: integer
                            format: int32
                          signature:
                            type: string
                            format: byte
                        description: >-
                          Vote represents a prevote, precommit, or commit vote
                          from validators for

                          consensus.
                      vote_b:
                        type: object
                        properties:
                          type:
                            type: string
                            enum:
                              - SIGNED_MSG_TYPE_UNKNOWN
                              - SIGNED_MSG_TYPE_PREVOTE
                              - SIGNED_MSG_TYPE_PRECOMMIT
                              - SIGNED_MSG_TYPE_PROPOSAL
                            default: SIGNED_MSG_TYPE_UNKNOWN
                            description: >-
                              SignedMsgType is a type of signed message in the
                              consensus.

                               - SIGNED_MSG_TYPE_PREVOTE: Votes
                               - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                          height:
                            type: string
                            format: int64
                          round:
                            type: integer
                            format: int32
                          block_id:
                            type: object
                            properties:
                              hash:
                                type: string
                                format: byte
                              part_set_header:
                                type: object
                                properties:
                                  total:
                                    type: integer
                                    format: int64
                                  hash:
                                    type: string
                                    format: byte
                                title: PartsetHeader
                            title: BlockID
                          timestamp:
                            type: string
                            format: date-time
                          validator_address:
                            type: string
                            format: byte
                          validator_index:
                            type: integer
                            format: int32
                          signature:
                            type: string
                            format: byte
                        description: >-
                          Vote represents a prevote, precommit, or commit vote
                          from validators for

                          consensus.
                      total_voting_power:
                        type: string
                        format: int64
                      validator_power:
                        type: string
                        format: int64
                      timestamp:
                        type: string
                        format: date-time
                    description: DuplicateVoteEvidence contains evidence of a validator signed two
                      conflicting votes.
                  light_client_attack_evidence:
                    type: object
                    properties:
                      conflicting_block:
                        type: object
                        properties:
                          signed_header:
                            type: object
                            properties:
                              header:
                                type: object
                                properties:
                                  version:
                                    title: basic block info
                                    type: object
                                    properties:
                                      block:
                                        type: string
                                        format: uint64
                                      app:
                                        type: string
                                        format: uint64
                                    description: >-
                                      Consensus captures the consensus rules for
                                      processing a block in the blockchain,

                                      including all blockchain data structures and the rules of the application's

                                      state transition machine.
                                  chain_id:
                                    type: string
                                  height:
                                    type: string
                                    format: int64
                                  time:
                                    type: string
                                    format: date-time
                                  last_block_id:
                                    type: object
                                    properties:
                                      hash:
                                        type: string
                                        format: byte
                                      part_set_header:
                                        type: object
                                        properties:
                                          total:
                                            type: integer
                                            format: int64
                                          hash:
                                            type: string
                                            format: byte
                                        title: PartsetHeader
                                    title: BlockID
                                  last_commit_hash:
                                    type: string
                                    format: byte
                                    title: hashes of block data
                                  data_hash:
                                    type: string
                                    format: byte
                                  validators_hash:
                                    type: string
                                    format: byte
                                    title: hashes from the app output from the prev block
                                  next_validators_hash:
                                    type: string
                                    format: byte
                                  consensus_hash:
                                    type: string
                                    format: byte
                                  app_hash:
                                    type: string
                                    format: byte
                                  last_results_hash:
                                    type: string
                                    format: byte
                                  evidence_hash:
                                    type: string
                                    format: byte
                                    title: consensus info
                                  proposer_address:
                                    type: string
                                    format: byte
                                description: Header defines the structure of a block header.
                              commit:
                                type: object
                                properties:
                                  height:
                                    type: string
                                    format: int64
                                  round:
                                    type: integer
                                    format: int32
                                  block_id:
                                    type: object
                                    properties:
                                      hash:
                                        type: string
                                        format: byte
                                      part_set_header:
                                        type: object
                                        properties:
                                          total:
                                            type: integer
                                            format: int64
                                          hash:
                                            type: string
                                            format: byte
                                        title: PartsetHeader
                                    title: BlockID
                                  signatures:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        block_id_flag:
                                          type: string
                                          enum:
                                            - BLOCK_ID_FLAG_UNKNOWN
                                            - BLOCK_ID_FLAG_ABSENT
                                            - BLOCK_ID_FLAG_COMMIT
                                            - BLOCK_ID_FLAG_NIL
                                          default: BLOCK_ID_FLAG_UNKNOWN
                                          title: BlockIdFlag indicates which BlcokID the signature is for
                                        validator_address:
                                          type: string
                                          format: byte
                                        timestamp:
                                          type: string
                                          format: date-time
                                        signature:
                                          type: string
                                          format: byte
                                      description: CommitSig is a part of the Vote included in a Commit.
                                description: Commit contains the evidence that a block was committed by a set of
                                  validators.
                          validator_set:
                            type: object
                            properties:
                              validators:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    address:
                                      type: string
                                      format: byte
                                    pub_key:
                                      type: object
                                      properties:
                                        ed25519:
                                          type: string
                                          format: byte
                                        secp256k1:
                                          type: string
                                          format: byte
                                      title: PublicKey defines the keys available for use with Validators
                                    voting_power:
                                      type: string
                                      format: int64
                                    proposer_priority:
                                      type: string
                                      format: int64
                              proposer:
                                type: object
                                properties:
                                  address:
                                    type: string
                                    format: byte
                                  pub_key:
                                    type: object
                                    properties:
                                      ed25519:
                                        type: string
                                        format: byte
                                      secp256k1:
                                        type: string
                                        format: byte
                                    title: PublicKey defines the keys available for use with Validators
                                  voting_power:
                                    type: string
                                    format: int64
                                  proposer_priority:
                                    type: string
                                    format: int64
                              total_voting_power:
                                type: string
                                format: int64
                      common_height:
                        type: string
                        format: int64
                      byzantine_validators:
                        type: array
                        items:
                          type: object
                          properties:
                            address:
                              type: string
                              format: byte
                            pub_key:
                              type: object
                              properties:
                                ed25519:
                                  type: string
                                  format: byte
                                secp256k1:
                                  type: string
                                  format: byte
                              title: PublicKey defines the keys available for use with Validators
                            voting_power:
                              type: string
                              format: int64
                            proposer_priority:
                              type: string
                              format: int64
                      total_voting_power:
                        type: string
                        format: int64
                      timestamp:
                        type: string
                        format: date-time
                    description: LightClientAttackEvidence contains evidence of a set of validators
                      attempting to mislead a light client.
        last_commit:
          type: object
          properties:
            height:
              type: string
              format: int64
            round:
              type: integer
              format: int32
            block_id:
              type: object
              properties:
                hash:
                  type: string
                  format: byte
                part_set_header:
                  type: object
                  properties:
                    total:
                      type: integer
                      format: int64
                    hash:
                      type: string
                      format: byte
                  title: PartsetHeader
              title: BlockID
            signatures:
              type: array
              items:
                type: object
                properties:
                  block_id_flag:
                    type: string
                    enum:
                      - BLOCK_ID_FLAG_UNKNOWN
                      - BLOCK_ID_FLAG_ABSENT
                      - BLOCK_ID_FLAG_COMMIT
                      - BLOCK_ID_FLAG_NIL
                    default: BLOCK_ID_FLAG_UNKNOWN
                    title: BlockIdFlag indicates which BlcokID the signature is for
                  validator_address:
                    type: string
                    format: byte
                  timestamp:
                    type: string
                    format: date-time
                  signature:
                    type: string
                    format: byte
                description: CommitSig is a part of the Vote included in a Commit.
          description: Commit contains the evidence that a block was committed by a set of
            validators.
    tendermint.types.BlockID:
      type: object
      properties:
        hash:
          type: string
          format: byte
        part_set_header:
          type: object
          properties:
            total:
              type: integer
              format: int64
            hash:
              type: string
              format: byte
          title: PartsetHeader
      title: BlockID
    tendermint.types.BlockIDFlag:
      type: string
      enum:
        - BLOCK_ID_FLAG_UNKNOWN
        - BLOCK_ID_FLAG_ABSENT
        - BLOCK_ID_FLAG_COMMIT
        - BLOCK_ID_FLAG_NIL
      default: BLOCK_ID_FLAG_UNKNOWN
      title: BlockIdFlag indicates which BlcokID the signature is for
    tendermint.types.Commit:
      type: object
      properties:
        height:
          type: string
          format: int64
        round:
          type: integer
          format: int32
        block_id:
          type: object
          properties:
            hash:
              type: string
              format: byte
            part_set_header:
              type: object
              properties:
                total:
                  type: integer
                  format: int64
                hash:
                  type: string
                  format: byte
              title: PartsetHeader
          title: BlockID
        signatures:
          type: array
          items:
            type: object
            properties:
              block_id_flag:
                type: string
                enum:
                  - BLOCK_ID_FLAG_UNKNOWN
                  - BLOCK_ID_FLAG_ABSENT
                  - BLOCK_ID_FLAG_COMMIT
                  - BLOCK_ID_FLAG_NIL
                default: BLOCK_ID_FLAG_UNKNOWN
                title: BlockIdFlag indicates which BlcokID the signature is for
              validator_address:
                type: string
                format: byte
              timestamp:
                type: string
                format: date-time
              signature:
                type: string
                format: byte
            description: CommitSig is a part of the Vote included in a Commit.
      description: Commit contains the evidence that a block was committed by a set of
        validators.
    tendermint.types.CommitSig:
      type: object
      properties:
        block_id_flag:
          type: string
          enum:
            - BLOCK_ID_FLAG_UNKNOWN
            - BLOCK_ID_FLAG_ABSENT
            - BLOCK_ID_FLAG_COMMIT
            - BLOCK_ID_FLAG_NIL
          default: BLOCK_ID_FLAG_UNKNOWN
          title: BlockIdFlag indicates which BlcokID the signature is for
        validator_address:
          type: string
          format: byte
        timestamp:
          type: string
          format: date-time
        signature:
          type: string
          format: byte
      description: CommitSig is a part of the Vote included in a Commit.
    tendermint.types.Data:
      type: object
      properties:
        txs:
          type: array
          items:
            type: string
            format: byte
          description: >-
            Txs that will be applied by state @ block.Height+1.

            NOTE: not all txs here are valid.  We're just agreeing on the order first.

            This means that block.AppHash does not include these txs.
      title: Data contains the set of transactions included in the block
    tendermint.types.DuplicateVoteEvidence:
      type: object
      properties:
        vote_a:
          type: object
          properties:
            type:
              type: string
              enum:
                - SIGNED_MSG_TYPE_UNKNOWN
                - SIGNED_MSG_TYPE_PREVOTE
                - SIGNED_MSG_TYPE_PRECOMMIT
                - SIGNED_MSG_TYPE_PROPOSAL
              default: SIGNED_MSG_TYPE_UNKNOWN
              description: |-
                SignedMsgType is a type of signed message in the consensus.

                 - SIGNED_MSG_TYPE_PREVOTE: Votes
                 - SIGNED_MSG_TYPE_PROPOSAL: Proposals
            height:
              type: string
              format: int64
            round:
              type: integer
              format: int32
            block_id:
              type: object
              properties:
                hash:
                  type: string
                  format: byte
                part_set_header:
                  type: object
                  properties:
                    total:
                      type: integer
                      format: int64
                    hash:
                      type: string
                      format: byte
                  title: PartsetHeader
              title: BlockID
            timestamp:
              type: string
              format: date-time
            validator_address:
              type: string
              format: byte
            validator_index:
              type: integer
              format: int32
            signature:
              type: string
              format: byte
          description: >-
            Vote represents a prevote, precommit, or commit vote from validators
            for

            consensus.
        vote_b:
          type: object
          properties:
            type:
              type: string
              enum:
                - SIGNED_MSG_TYPE_UNKNOWN
                - SIGNED_MSG_TYPE_PREVOTE
                - SIGNED_MSG_TYPE_PRECOMMIT
                - SIGNED_MSG_TYPE_PROPOSAL
              default: SIGNED_MSG_TYPE_UNKNOWN
              description: |-
                SignedMsgType is a type of signed message in the consensus.

                 - SIGNED_MSG_TYPE_PREVOTE: Votes
                 - SIGNED_MSG_TYPE_PROPOSAL: Proposals
            height:
              type: string
              format: int64
            round:
              type: integer
              format: int32
            block_id:
              type: object
              properties:
                hash:
                  type: string
                  format: byte
                part_set_header:
                  type: object
                  properties:
                    total:
                      type: integer
                      format: int64
                    hash:
                      type: string
                      format: byte
                  title: PartsetHeader
              title: BlockID
            timestamp:
              type: string
              format: date-time
            validator_address:
              type: string
              format: byte
            validator_index:
              type: integer
              format: int32
            signature:
              type: string
              format: byte
          description: >-
            Vote represents a prevote, precommit, or commit vote from validators
            for

            consensus.
        total_voting_power:
          type: string
          format: int64
        validator_power:
          type: string
          format: int64
        timestamp:
          type: string
          format: date-time
      description: DuplicateVoteEvidence contains evidence of a validator signed two
        conflicting votes.
    tendermint.types.Evidence:
      type: object
      properties:
        duplicate_vote_evidence:
          type: object
          properties:
            vote_a:
              type: object
              properties:
                type:
                  type: string
                  enum:
                    - SIGNED_MSG_TYPE_UNKNOWN
                    - SIGNED_MSG_TYPE_PREVOTE
                    - SIGNED_MSG_TYPE_PRECOMMIT
                    - SIGNED_MSG_TYPE_PROPOSAL
                  default: SIGNED_MSG_TYPE_UNKNOWN
                  description: |-
                    SignedMsgType is a type of signed message in the consensus.

                     - SIGNED_MSG_TYPE_PREVOTE: Votes
                     - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                height:
                  type: string
                  format: int64
                round:
                  type: integer
                  format: int32
                block_id:
                  type: object
                  properties:
                    hash:
                      type: string
                      format: byte
                    part_set_header:
                      type: object
                      properties:
                        total:
                          type: integer
                          format: int64
                        hash:
                          type: string
                          format: byte
                      title: PartsetHeader
                  title: BlockID
                timestamp:
                  type: string
                  format: date-time
                validator_address:
                  type: string
                  format: byte
                validator_index:
                  type: integer
                  format: int32
                signature:
                  type: string
                  format: byte
              description: >-
                Vote represents a prevote, precommit, or commit vote from
                validators for

                consensus.
            vote_b:
              type: object
              properties:
                type:
                  type: string
                  enum:
                    - SIGNED_MSG_TYPE_UNKNOWN
                    - SIGNED_MSG_TYPE_PREVOTE
                    - SIGNED_MSG_TYPE_PRECOMMIT
                    - SIGNED_MSG_TYPE_PROPOSAL
                  default: SIGNED_MSG_TYPE_UNKNOWN
                  description: |-
                    SignedMsgType is a type of signed message in the consensus.

                     - SIGNED_MSG_TYPE_PREVOTE: Votes
                     - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                height:
                  type: string
                  format: int64
                round:
                  type: integer
                  format: int32
                block_id:
                  type: object
                  properties:
                    hash:
                      type: string
                      format: byte
                    part_set_header:
                      type: object
                      properties:
                        total:
                          type: integer
                          format: int64
                        hash:
                          type: string
                          format: byte
                      title: PartsetHeader
                  title: BlockID
                timestamp:
                  type: string
                  format: date-time
                validator_address:
                  type: string
                  format: byte
                validator_index:
                  type: integer
                  format: int32
                signature:
                  type: string
                  format: byte
              description: >-
                Vote represents a prevote, precommit, or commit vote from
                validators for

                consensus.
            total_voting_power:
              type: string
              format: int64
            validator_power:
              type: string
              format: int64
            timestamp:
              type: string
              format: date-time
          description: DuplicateVoteEvidence contains evidence of a validator signed two
            conflicting votes.
        light_client_attack_evidence:
          type: object
          properties:
            conflicting_block:
              type: object
              properties:
                signed_header:
                  type: object
                  properties:
                    header:
                      type: object
                      properties:
                        version:
                          title: basic block info
                          type: object
                          properties:
                            block:
                              type: string
                              format: uint64
                            app:
                              type: string
                              format: uint64
                          description: >-
                            Consensus captures the consensus rules for
                            processing a block in the blockchain,

                            including all blockchain data structures and the rules of the application's

                            state transition machine.
                        chain_id:
                          type: string
                        height:
                          type: string
                          format: int64
                        time:
                          type: string
                          format: date-time
                        last_block_id:
                          type: object
                          properties:
                            hash:
                              type: string
                              format: byte
                            part_set_header:
                              type: object
                              properties:
                                total:
                                  type: integer
                                  format: int64
                                hash:
                                  type: string
                                  format: byte
                              title: PartsetHeader
                          title: BlockID
                        last_commit_hash:
                          type: string
                          format: byte
                          title: hashes of block data
                        data_hash:
                          type: string
                          format: byte
                        validators_hash:
                          type: string
                          format: byte
                          title: hashes from the app output from the prev block
                        next_validators_hash:
                          type: string
                          format: byte
                        consensus_hash:
                          type: string
                          format: byte
                        app_hash:
                          type: string
                          format: byte
                        last_results_hash:
                          type: string
                          format: byte
                        evidence_hash:
                          type: string
                          format: byte
                          title: consensus info
                        proposer_address:
                          type: string
                          format: byte
                      description: Header defines the structure of a block header.
                    commit:
                      type: object
                      properties:
                        height:
                          type: string
                          format: int64
                        round:
                          type: integer
                          format: int32
                        block_id:
                          type: object
                          properties:
                            hash:
                              type: string
                              format: byte
                            part_set_header:
                              type: object
                              properties:
                                total:
                                  type: integer
                                  format: int64
                                hash:
                                  type: string
                                  format: byte
                              title: PartsetHeader
                          title: BlockID
                        signatures:
                          type: array
                          items:
                            type: object
                            properties:
                              block_id_flag:
                                type: string
                                enum:
                                  - BLOCK_ID_FLAG_UNKNOWN
                                  - BLOCK_ID_FLAG_ABSENT
                                  - BLOCK_ID_FLAG_COMMIT
                                  - BLOCK_ID_FLAG_NIL
                                default: BLOCK_ID_FLAG_UNKNOWN
                                title: BlockIdFlag indicates which BlcokID the signature is for
                              validator_address:
                                type: string
                                format: byte
                              timestamp:
                                type: string
                                format: date-time
                              signature:
                                type: string
                                format: byte
                            description: CommitSig is a part of the Vote included in a Commit.
                      description: Commit contains the evidence that a block was committed by a set of
                        validators.
                validator_set:
                  type: object
                  properties:
                    validators:
                      type: array
                      items:
                        type: object
                        properties:
                          address:
                            type: string
                            format: byte
                          pub_key:
                            type: object
                            properties:
                              ed25519:
                                type: string
                                format: byte
                              secp256k1:
                                type: string
                                format: byte
                            title: PublicKey defines the keys available for use with Validators
                          voting_power:
                            type: string
                            format: int64
                          proposer_priority:
                            type: string
                            format: int64
                    proposer:
                      type: object
                      properties:
                        address:
                          type: string
                          format: byte
                        pub_key:
                          type: object
                          properties:
                            ed25519:
                              type: string
                              format: byte
                            secp256k1:
                              type: string
                              format: byte
                          title: PublicKey defines the keys available for use with Validators
                        voting_power:
                          type: string
                          format: int64
                        proposer_priority:
                          type: string
                          format: int64
                    total_voting_power:
                      type: string
                      format: int64
            common_height:
              type: string
              format: int64
            byzantine_validators:
              type: array
              items:
                type: object
                properties:
                  address:
                    type: string
                    format: byte
                  pub_key:
                    type: object
                    properties:
                      ed25519:
                        type: string
                        format: byte
                      secp256k1:
                        type: string
                        format: byte
                    title: PublicKey defines the keys available for use with Validators
                  voting_power:
                    type: string
                    format: int64
                  proposer_priority:
                    type: string
                    format: int64
            total_voting_power:
              type: string
              format: int64
            timestamp:
              type: string
              format: date-time
          description: LightClientAttackEvidence contains evidence of a set of validators
            attempting to mislead a light client.
    tendermint.types.EvidenceList:
      type: object
      properties:
        evidence:
          type: array
          items:
            type: object
            properties:
              duplicate_vote_evidence:
                type: object
                properties:
                  vote_a:
                    type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - SIGNED_MSG_TYPE_UNKNOWN
                          - SIGNED_MSG_TYPE_PREVOTE
                          - SIGNED_MSG_TYPE_PRECOMMIT
                          - SIGNED_MSG_TYPE_PROPOSAL
                        default: SIGNED_MSG_TYPE_UNKNOWN
                        description: >-
                          SignedMsgType is a type of signed message in the
                          consensus.

                           - SIGNED_MSG_TYPE_PREVOTE: Votes
                           - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                      height:
                        type: string
                        format: int64
                      round:
                        type: integer
                        format: int32
                      block_id:
                        type: object
                        properties:
                          hash:
                            type: string
                            format: byte
                          part_set_header:
                            type: object
                            properties:
                              total:
                                type: integer
                                format: int64
                              hash:
                                type: string
                                format: byte
                            title: PartsetHeader
                        title: BlockID
                      timestamp:
                        type: string
                        format: date-time
                      validator_address:
                        type: string
                        format: byte
                      validator_index:
                        type: integer
                        format: int32
                      signature:
                        type: string
                        format: byte
                    description: >-
                      Vote represents a prevote, precommit, or commit vote from
                      validators for

                      consensus.
                  vote_b:
                    type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - SIGNED_MSG_TYPE_UNKNOWN
                          - SIGNED_MSG_TYPE_PREVOTE
                          - SIGNED_MSG_TYPE_PRECOMMIT
                          - SIGNED_MSG_TYPE_PROPOSAL
                        default: SIGNED_MSG_TYPE_UNKNOWN
                        description: >-
                          SignedMsgType is a type of signed message in the
                          consensus.

                           - SIGNED_MSG_TYPE_PREVOTE: Votes
                           - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                      height:
                        type: string
                        format: int64
                      round:
                        type: integer
                        format: int32
                      block_id:
                        type: object
                        properties:
                          hash:
                            type: string
                            format: byte
                          part_set_header:
                            type: object
                            properties:
                              total:
                                type: integer
                                format: int64
                              hash:
                                type: string
                                format: byte
                            title: PartsetHeader
                        title: BlockID
                      timestamp:
                        type: string
                        format: date-time
                      validator_address:
                        type: string
                        format: byte
                      validator_index:
                        type: integer
                        format: int32
                      signature:
                        type: string
                        format: byte
                    description: >-
                      Vote represents a prevote, precommit, or commit vote from
                      validators for

                      consensus.
                  total_voting_power:
                    type: string
                    format: int64
                  validator_power:
                    type: string
                    format: int64
                  timestamp:
                    type: string
                    format: date-time
                description: DuplicateVoteEvidence contains evidence of a validator signed two
                  conflicting votes.
              light_client_attack_evidence:
                type: object
                properties:
                  conflicting_block:
                    type: object
                    properties:
                      signed_header:
                        type: object
                        properties:
                          header:
                            type: object
                            properties:
                              version:
                                title: basic block info
                                type: object
                                properties:
                                  block:
                                    type: string
                                    format: uint64
                                  app:
                                    type: string
                                    format: uint64
                                description: >-
                                  Consensus captures the consensus rules for
                                  processing a block in the blockchain,

                                  including all blockchain data structures and the rules of the application's

                                  state transition machine.
                              chain_id:
                                type: string
                              height:
                                type: string
                                format: int64
                              time:
                                type: string
                                format: date-time
                              last_block_id:
                                type: object
                                properties:
                                  hash:
                                    type: string
                                    format: byte
                                  part_set_header:
                                    type: object
                                    properties:
                                      total:
                                        type: integer
                                        format: int64
                                      hash:
                                        type: string
                                        format: byte
                                    title: PartsetHeader
                                title: BlockID
                              last_commit_hash:
                                type: string
                                format: byte
                                title: hashes of block data
                              data_hash:
                                type: string
                                format: byte
                              validators_hash:
                                type: string
                                format: byte
                                title: hashes from the app output from the prev block
                              next_validators_hash:
                                type: string
                                format: byte
                              consensus_hash:
                                type: string
                                format: byte
                              app_hash:
                                type: string
                                format: byte
                              last_results_hash:
                                type: string
                                format: byte
                              evidence_hash:
                                type: string
                                format: byte
                                title: consensus info
                              proposer_address:
                                type: string
                                format: byte
                            description: Header defines the structure of a block header.
                          commit:
                            type: object
                            properties:
                              height:
                                type: string
                                format: int64
                              round:
                                type: integer
                                format: int32
                              block_id:
                                type: object
                                properties:
                                  hash:
                                    type: string
                                    format: byte
                                  part_set_header:
                                    type: object
                                    properties:
                                      total:
                                        type: integer
                                        format: int64
                                      hash:
                                        type: string
                                        format: byte
                                    title: PartsetHeader
                                title: BlockID
                              signatures:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    block_id_flag:
                                      type: string
                                      enum:
                                        - BLOCK_ID_FLAG_UNKNOWN
                                        - BLOCK_ID_FLAG_ABSENT
                                        - BLOCK_ID_FLAG_COMMIT
                                        - BLOCK_ID_FLAG_NIL
                                      default: BLOCK_ID_FLAG_UNKNOWN
                                      title: BlockIdFlag indicates which BlcokID the signature is for
                                    validator_address:
                                      type: string
                                      format: byte
                                    timestamp:
                                      type: string
                                      format: date-time
                                    signature:
                                      type: string
                                      format: byte
                                  description: CommitSig is a part of the Vote included in a Commit.
                            description: Commit contains the evidence that a block was committed by a set of
                              validators.
                      validator_set:
                        type: object
                        properties:
                          validators:
                            type: array
                            items:
                              type: object
                              properties:
                                address:
                                  type: string
                                  format: byte
                                pub_key:
                                  type: object
                                  properties:
                                    ed25519:
                                      type: string
                                      format: byte
                                    secp256k1:
                                      type: string
                                      format: byte
                                  title: PublicKey defines the keys available for use with Validators
                                voting_power:
                                  type: string
                                  format: int64
                                proposer_priority:
                                  type: string
                                  format: int64
                          proposer:
                            type: object
                            properties:
                              address:
                                type: string
                                format: byte
                              pub_key:
                                type: object
                                properties:
                                  ed25519:
                                    type: string
                                    format: byte
                                  secp256k1:
                                    type: string
                                    format: byte
                                title: PublicKey defines the keys available for use with Validators
                              voting_power:
                                type: string
                                format: int64
                              proposer_priority:
                                type: string
                                format: int64
                          total_voting_power:
                            type: string
                            format: int64
                  common_height:
                    type: string
                    format: int64
                  byzantine_validators:
                    type: array
                    items:
                      type: object
                      properties:
                        address:
                          type: string
                          format: byte
                        pub_key:
                          type: object
                          properties:
                            ed25519:
                              type: string
                              format: byte
                            secp256k1:
                              type: string
                              format: byte
                          title: PublicKey defines the keys available for use with Validators
                        voting_power:
                          type: string
                          format: int64
                        proposer_priority:
                          type: string
                          format: int64
                  total_voting_power:
                    type: string
                    format: int64
                  timestamp:
                    type: string
                    format: date-time
                description: LightClientAttackEvidence contains evidence of a set of validators
                  attempting to mislead a light client.
    tendermint.types.Header:
      type: object
      properties:
        version:
          title: basic block info
          type: object
          properties:
            block:
              type: string
              format: uint64
            app:
              type: string
              format: uint64
          description: >-
            Consensus captures the consensus rules for processing a block in the
            blockchain,

            including all blockchain data structures and the rules of the application's

            state transition machine.
        chain_id:
          type: string
        height:
          type: string
          format: int64
        time:
          type: string
          format: date-time
        last_block_id:
          type: object
          properties:
            hash:
              type: string
              format: byte
            part_set_header:
              type: object
              properties:
                total:
                  type: integer
                  format: int64
                hash:
                  type: string
                  format: byte
              title: PartsetHeader
          title: BlockID
        last_commit_hash:
          type: string
          format: byte
          title: hashes of block data
        data_hash:
          type: string
          format: byte
        validators_hash:
          type: string
          format: byte
          title: hashes from the app output from the prev block
        next_validators_hash:
          type: string
          format: byte
        consensus_hash:
          type: string
          format: byte
        app_hash:
          type: string
          format: byte
        last_results_hash:
          type: string
          format: byte
        evidence_hash:
          type: string
          format: byte
          title: consensus info
        proposer_address:
          type: string
          format: byte
      description: Header defines the structure of a block header.
    tendermint.types.LightBlock:
      type: object
      properties:
        signed_header:
          type: object
          properties:
            header:
              type: object
              properties:
                version:
                  title: basic block info
                  type: object
                  properties:
                    block:
                      type: string
                      format: uint64
                    app:
                      type: string
                      format: uint64
                  description: >-
                    Consensus captures the consensus rules for processing a
                    block in the blockchain,

                    including all blockchain data structures and the rules of the application's

                    state transition machine.
                chain_id:
                  type: string
                height:
                  type: string
                  format: int64
                time:
                  type: string
                  format: date-time
                last_block_id:
                  type: object
                  properties:
                    hash:
                      type: string
                      format: byte
                    part_set_header:
                      type: object
                      properties:
                        total:
                          type: integer
                          format: int64
                        hash:
                          type: string
                          format: byte
                      title: PartsetHeader
                  title: BlockID
                last_commit_hash:
                  type: string
                  format: byte
                  title: hashes of block data
                data_hash:
                  type: string
                  format: byte
                validators_hash:
                  type: string
                  format: byte
                  title: hashes from the app output from the prev block
                next_validators_hash:
                  type: string
                  format: byte
                consensus_hash:
                  type: string
                  format: byte
                app_hash:
                  type: string
                  format: byte
                last_results_hash:
                  type: string
                  format: byte
                evidence_hash:
                  type: string
                  format: byte
                  title: consensus info
                proposer_address:
                  type: string
                  format: byte
              description: Header defines the structure of a block header.
            commit:
              type: object
              properties:
                height:
                  type: string
                  format: int64
                round:
                  type: integer
                  format: int32
                block_id:
                  type: object
                  properties:
                    hash:
                      type: string
                      format: byte
                    part_set_header:
                      type: object
                      properties:
                        total:
                          type: integer
                          format: int64
                        hash:
                          type: string
                          format: byte
                      title: PartsetHeader
                  title: BlockID
                signatures:
                  type: array
                  items:
                    type: object
                    properties:
                      block_id_flag:
                        type: string
                        enum:
                          - BLOCK_ID_FLAG_UNKNOWN
                          - BLOCK_ID_FLAG_ABSENT
                          - BLOCK_ID_FLAG_COMMIT
                          - BLOCK_ID_FLAG_NIL
                        default: BLOCK_ID_FLAG_UNKNOWN
                        title: BlockIdFlag indicates which BlcokID the signature is for
                      validator_address:
                        type: string
                        format: byte
                      timestamp:
                        type: string
                        format: date-time
                      signature:
                        type: string
                        format: byte
                    description: CommitSig is a part of the Vote included in a Commit.
              description: Commit contains the evidence that a block was committed by a set of
                validators.
        validator_set:
          type: object
          properties:
            validators:
              type: array
              items:
                type: object
                properties:
                  address:
                    type: string
                    format: byte
                  pub_key:
                    type: object
                    properties:
                      ed25519:
                        type: string
                        format: byte
                      secp256k1:
                        type: string
                        format: byte
                    title: PublicKey defines the keys available for use with Validators
                  voting_power:
                    type: string
                    format: int64
                  proposer_priority:
                    type: string
                    format: int64
            proposer:
              type: object
              properties:
                address:
                  type: string
                  format: byte
                pub_key:
                  type: object
                  properties:
                    ed25519:
                      type: string
                      format: byte
                    secp256k1:
                      type: string
                      format: byte
                  title: PublicKey defines the keys available for use with Validators
                voting_power:
                  type: string
                  format: int64
                proposer_priority:
                  type: string
                  format: int64
            total_voting_power:
              type: string
              format: int64
    tendermint.types.LightClientAttackEvidence:
      type: object
      properties:
        conflicting_block:
          type: object
          properties:
            signed_header:
              type: object
              properties:
                header:
                  type: object
                  properties:
                    version:
                      title: basic block info
                      type: object
                      properties:
                        block:
                          type: string
                          format: uint64
                        app:
                          type: string
                          format: uint64
                      description: >-
                        Consensus captures the consensus rules for processing a
                        block in the blockchain,

                        including all blockchain data structures and the rules of the application's

                        state transition machine.
                    chain_id:
                      type: string
                    height:
                      type: string
                      format: int64
                    time:
                      type: string
                      format: date-time
                    last_block_id:
                      type: object
                      properties:
                        hash:
                          type: string
                          format: byte
                        part_set_header:
                          type: object
                          properties:
                            total:
                              type: integer
                              format: int64
                            hash:
                              type: string
                              format: byte
                          title: PartsetHeader
                      title: BlockID
                    last_commit_hash:
                      type: string
                      format: byte
                      title: hashes of block data
                    data_hash:
                      type: string
                      format: byte
                    validators_hash:
                      type: string
                      format: byte
                      title: hashes from the app output from the prev block
                    next_validators_hash:
                      type: string
                      format: byte
                    consensus_hash:
                      type: string
                      format: byte
                    app_hash:
                      type: string
                      format: byte
                    last_results_hash:
                      type: string
                      format: byte
                    evidence_hash:
                      type: string
                      format: byte
                      title: consensus info
                    proposer_address:
                      type: string
                      format: byte
                  description: Header defines the structure of a block header.
                commit:
                  type: object
                  properties:
                    height:
                      type: string
                      format: int64
                    round:
                      type: integer
                      format: int32
                    block_id:
                      type: object
                      properties:
                        hash:
                          type: string
                          format: byte
                        part_set_header:
                          type: object
                          properties:
                            total:
                              type: integer
                              format: int64
                            hash:
                              type: string
                              format: byte
                          title: PartsetHeader
                      title: BlockID
                    signatures:
                      type: array
                      items:
                        type: object
                        properties:
                          block_id_flag:
                            type: string
                            enum:
                              - BLOCK_ID_FLAG_UNKNOWN
                              - BLOCK_ID_FLAG_ABSENT
                              - BLOCK_ID_FLAG_COMMIT
                              - BLOCK_ID_FLAG_NIL
                            default: BLOCK_ID_FLAG_UNKNOWN
                            title: BlockIdFlag indicates which BlcokID the signature is for
                          validator_address:
                            type: string
                            format: byte
                          timestamp:
                            type: string
                            format: date-time
                          signature:
                            type: string
                            format: byte
                        description: CommitSig is a part of the Vote included in a Commit.
                  description: Commit contains the evidence that a block was committed by a set of
                    validators.
            validator_set:
              type: object
              properties:
                validators:
                  type: array
                  items:
                    type: object
                    properties:
                      address:
                        type: string
                        format: byte
                      pub_key:
                        type: object
                        properties:
                          ed25519:
                            type: string
                            format: byte
                          secp256k1:
                            type: string
                            format: byte
                        title: PublicKey defines the keys available for use with Validators
                      voting_power:
                        type: string
                        format: int64
                      proposer_priority:
                        type: string
                        format: int64
                proposer:
                  type: object
                  properties:
                    address:
                      type: string
                      format: byte
                    pub_key:
                      type: object
                      properties:
                        ed25519:
                          type: string
                          format: byte
                        secp256k1:
                          type: string
                          format: byte
                      title: PublicKey defines the keys available for use with Validators
                    voting_power:
                      type: string
                      format: int64
                    proposer_priority:
                      type: string
                      format: int64
                total_voting_power:
                  type: string
                  format: int64
        common_height:
          type: string
          format: int64
        byzantine_validators:
          type: array
          items:
            type: object
            properties:
              address:
                type: string
                format: byte
              pub_key:
                type: object
                properties:
                  ed25519:
                    type: string
                    format: byte
                  secp256k1:
                    type: string
                    format: byte
                title: PublicKey defines the keys available for use with Validators
              voting_power:
                type: string
                format: int64
              proposer_priority:
                type: string
                format: int64
        total_voting_power:
          type: string
          format: int64
        timestamp:
          type: string
          format: date-time
      description: LightClientAttackEvidence contains evidence of a set of validators
        attempting to mislead a light client.
    tendermint.types.PartSetHeader:
      type: object
      properties:
        total:
          type: integer
          format: int64
        hash:
          type: string
          format: byte
      title: PartsetHeader
    tendermint.types.SignedHeader:
      type: object
      properties:
        header:
          type: object
          properties:
            version:
              title: basic block info
              type: object
              properties:
                block:
                  type: string
                  format: uint64
                app:
                  type: string
                  format: uint64
              description: >-
                Consensus captures the consensus rules for processing a block in
                the blockchain,

                including all blockchain data structures and the rules of the application's

                state transition machine.
            chain_id:
              type: string
            height:
              type: string
              format: int64
            time:
              type: string
              format: date-time
            last_block_id:
              type: object
              properties:
                hash:
                  type: string
                  format: byte
                part_set_header:
                  type: object
                  properties:
                    total:
                      type: integer
                      format: int64
                    hash:
                      type: string
                      format: byte
                  title: PartsetHeader
              title: BlockID
            last_commit_hash:
              type: string
              format: byte
              title: hashes of block data
            data_hash:
              type: string
              format: byte
            validators_hash:
              type: string
              format: byte
              title: hashes from the app output from the prev block
            next_validators_hash:
              type: string
              format: byte
            consensus_hash:
              type: string
              format: byte
            app_hash:
              type: string
              format: byte
            last_results_hash:
              type: string
              format: byte
            evidence_hash:
              type: string
              format: byte
              title: consensus info
            proposer_address:
              type: string
              format: byte
          description: Header defines the structure of a block header.
        commit:
          type: object
          properties:
            height:
              type: string
              format: int64
            round:
              type: integer
              format: int32
            block_id:
              type: object
              properties:
                hash:
                  type: string
                  format: byte
                part_set_header:
                  type: object
                  properties:
                    total:
                      type: integer
                      format: int64
                    hash:
                      type: string
                      format: byte
                  title: PartsetHeader
              title: BlockID
            signatures:
              type: array
              items:
                type: object
                properties:
                  block_id_flag:
                    type: string
                    enum:
                      - BLOCK_ID_FLAG_UNKNOWN
                      - BLOCK_ID_FLAG_ABSENT
                      - BLOCK_ID_FLAG_COMMIT
                      - BLOCK_ID_FLAG_NIL
                    default: BLOCK_ID_FLAG_UNKNOWN
                    title: BlockIdFlag indicates which BlcokID the signature is for
                  validator_address:
                    type: string
                    format: byte
                  timestamp:
                    type: string
                    format: date-time
                  signature:
                    type: string
                    format: byte
                description: CommitSig is a part of the Vote included in a Commit.
          description: Commit contains the evidence that a block was committed by a set of
            validators.
    tendermint.types.SignedMsgType:
      type: string
      enum:
        - SIGNED_MSG_TYPE_UNKNOWN
        - SIGNED_MSG_TYPE_PREVOTE
        - SIGNED_MSG_TYPE_PRECOMMIT
        - SIGNED_MSG_TYPE_PROPOSAL
      default: SIGNED_MSG_TYPE_UNKNOWN
      description: |-
        SignedMsgType is a type of signed message in the consensus.

         - SIGNED_MSG_TYPE_PREVOTE: Votes
         - SIGNED_MSG_TYPE_PROPOSAL: Proposals
    tendermint.types.Validator:
      type: object
      properties:
        address:
          type: string
          format: byte
        pub_key:
          type: object
          properties:
            ed25519:
              type: string
              format: byte
            secp256k1:
              type: string
              format: byte
          title: PublicKey defines the keys available for use with Validators
        voting_power:
          type: string
          format: int64
        proposer_priority:
          type: string
          format: int64
    tendermint.types.ValidatorSet:
      type: object
      properties:
        validators:
          type: array
          items:
            type: object
            properties:
              address:
                type: string
                format: byte
              pub_key:
                type: object
                properties:
                  ed25519:
                    type: string
                    format: byte
                  secp256k1:
                    type: string
                    format: byte
                title: PublicKey defines the keys available for use with Validators
              voting_power:
                type: string
                format: int64
              proposer_priority:
                type: string
                format: int64
        proposer:
          type: object
          properties:
            address:
              type: string
              format: byte
            pub_key:
              type: object
              properties:
                ed25519:
                  type: string
                  format: byte
                secp256k1:
                  type: string
                  format: byte
              title: PublicKey defines the keys available for use with Validators
            voting_power:
              type: string
              format: int64
            proposer_priority:
              type: string
              format: int64
        total_voting_power:
          type: string
          format: int64
    tendermint.types.Vote:
      type: object
      properties:
        type:
          type: string
          enum:
            - SIGNED_MSG_TYPE_UNKNOWN
            - SIGNED_MSG_TYPE_PREVOTE
            - SIGNED_MSG_TYPE_PRECOMMIT
            - SIGNED_MSG_TYPE_PROPOSAL
          default: SIGNED_MSG_TYPE_UNKNOWN
          description: |-
            SignedMsgType is a type of signed message in the consensus.

             - SIGNED_MSG_TYPE_PREVOTE: Votes
             - SIGNED_MSG_TYPE_PROPOSAL: Proposals
        height:
          type: string
          format: int64
        round:
          type: integer
          format: int32
        block_id:
          type: object
          properties:
            hash:
              type: string
              format: byte
            part_set_header:
              type: object
              properties:
                total:
                  type: integer
                  format: int64
                hash:
                  type: string
                  format: byte
              title: PartsetHeader
          title: BlockID
        timestamp:
          type: string
          format: date-time
        validator_address:
          type: string
          format: byte
        validator_index:
          type: integer
          format: int32
        signature:
          type: string
          format: byte
      description: |-
        Vote represents a prevote, precommit, or commit vote from validators for
        consensus.
    tendermint.version.Consensus:
      type: object
      properties:
        block:
          type: string
          format: uint64
        app:
          type: string
          format: uint64
      description: >-
        Consensus captures the consensus rules for processing a block in the
        blockchain,

        including all blockchain data structures and the rules of the application's

        state transition machine.
    cosmos.params.v1beta1.ParamChange:
      type: object
      properties:
        subspace:
          type: string
        key:
          type: string
        value:
          type: string
      description: |-
        ParamChange defines an individual parameter change, for use in
        ParameterChangeProposal.
    cosmos.params.v1beta1.QueryParamsResponse:
      type: object
      properties:
        param:
          description: param defines the queried parameter.
          type: object
          properties:
            subspace:
              type: string
            key:
              type: string
            value:
              type: string
      description: QueryParamsResponse is response type for the Query/Params RPC method.
    cosmos.evidence.v1beta1.QueryAllEvidenceResponse:
      type: object
      properties:
        evidence:
          type: array
          items:
            type: object
            properties:
              type_url:
                type: string
              value:
                type: string
                format: byte
          description: evidence returns all evidences.
        pagination:
          description: pagination defines the pagination in the response.
          type: object
          properties:
            next_key:
              type: string
              format: byte
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
            total:
              type: string
              format: uint64
              title: >-
                total is total number of results available if
                PageRequest.count_total

                was set, its value is undefined otherwise
      description: >-
        QueryAllEvidenceResponse is the response type for the Query/AllEvidence
        RPC

        method.
    cosmos.evidence.v1beta1.QueryEvidenceResponse:
      type: object
      properties:
        evidence:
          type: object
          properties:
            type_url:
              type: string
            value:
              type: string
              format: byte
          description: evidence returns the requested evidence.
      description: QueryEvidenceResponse is the response type for the Query/Evidence
        RPC method.
    ibc.applications.interchain_accounts.controller.v1.Params:
      type: object
      properties:
        controller_enabled:
          type: boolean
          description: controller_enabled enables or disables the controller submodule.
      description: >-
        Params defines the set of on-chain interchain accounts parameters.

        The following parameters may be used to disable the controller submodule.
    ibc.applications.interchain_accounts.controller.v1.QueryInterchainAccountResponse:
      type: object
      properties:
        address:
          type: string
      description: QueryInterchainAccountResponse the response type for the
        Query/InterchainAccount RPC method.
    ibc.applications.interchain_accounts.controller.v1.QueryParamsResponse:
      type: object
      properties:
        params:
          description: params defines the parameters of the module.
          type: object
          properties:
            controller_enabled:
              type: boolean
              description: controller_enabled enables or disables the controller submodule.
      description: QueryParamsResponse is the response type for the Query/Params RPC method.
    ibc.core.channel.v1.Channel:
      type: object
      properties:
        state:
          title: current state of the channel end
          type: string
          enum:
            - STATE_UNINITIALIZED_UNSPECIFIED
            - STATE_INIT
            - STATE_TRYOPEN
            - STATE_OPEN
            - STATE_CLOSED
          default: STATE_UNINITIALIZED_UNSPECIFIED
          description: >-
            State defines if a channel is in one of the following states:

            CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.

             - STATE_UNINITIALIZED_UNSPECIFIED: Default State
             - STATE_INIT: A channel has just started the opening handshake.
             - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
             - STATE_OPEN: A channel has completed the handshake. Open channels are
            ready to send and receive packets.
             - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
            packets.
        ordering:
          title: whether the channel is ordered or unordered
          type: string
          enum:
            - ORDER_NONE_UNSPECIFIED
            - ORDER_UNORDERED
            - ORDER_ORDERED
          default: ORDER_NONE_UNSPECIFIED
          description: >-
            - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
             - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
            which they were sent.
             - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
        counterparty:
          title: counterparty channel end
          type: object
          properties:
            port_id:
              type: string
              description: port on the counterparty chain which owns the other end of the
                channel.
            channel_id:
              type: string
              title: channel end on the counterparty chain
        connection_hops:
          type: array
          items:
            type: string
          title: >-
            list of connection identifiers, in order, along which packets sent
            on

            this channel will travel
        version:
          type: string
          title: opaque channel version, which is agreed upon during the handshake
      description: >-
        Channel defines pipeline for exactly-once packet delivery between
        specific

        modules on separate blockchains, which has at least one end capable of

        sending packets and one end capable of receiving packets.
    ibc.core.channel.v1.Counterparty:
      type: object
      properties:
        port_id:
          type: string
          description: port on the counterparty chain which owns the other end of the
            channel.
        channel_id:
          type: string
          title: channel end on the counterparty chain
      title: Counterparty defines a channel end counterparty
    ibc.core.channel.v1.IdentifiedChannel:
      type: object
      properties:
        state:
          title: current state of the channel end
          type: string
          enum:
            - STATE_UNINITIALIZED_UNSPECIFIED
            - STATE_INIT
            - STATE_TRYOPEN
            - STATE_OPEN
            - STATE_CLOSED
          default: STATE_UNINITIALIZED_UNSPECIFIED
          description: >-
            State defines if a channel is in one of the following states:

            CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.

             - STATE_UNINITIALIZED_UNSPECIFIED: Default State
             - STATE_INIT: A channel has just started the opening handshake.
             - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
             - STATE_OPEN: A channel has completed the handshake. Open channels are
            ready to send and receive packets.
             - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
            packets.
        ordering:
          title: whether the channel is ordered or unordered
          type: string
          enum:
            - ORDER_NONE_UNSPECIFIED
            - ORDER_UNORDERED
            - ORDER_ORDERED
          default: ORDER_NONE_UNSPECIFIED
          description: >-
            - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
             - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
            which they were sent.
             - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
        counterparty:
          title: counterparty channel end
          type: object
          properties:
            port_id:
              type: string
              description: port on the counterparty chain which owns the other end of the
                channel.
            channel_id:
              type: string
              title: channel end on the counterparty chain
        connection_hops:
          type: array
          items:
            type: string
          title: >-
            list of connection identifiers, in order, along which packets sent
            on

            this channel will travel
        version:
          type: string
          title: opaque channel version, which is agreed upon during the handshake
        port_id:
          type: string
          title: port identifier
        channel_id:
          type: string
          title: channel identifier
      description: |-
        IdentifiedChannel defines a channel with additional port and channel
        identifier fields.
    ibc.core.channel.v1.Order:
      type: string
      enum:
        - ORDER_NONE_UNSPECIFIED
        - ORDER_UNORDERED
        - ORDER_ORDERED
      default: ORDER_NONE_UNSPECIFIED
      description: >-
        - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
         - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
        which they were sent.
         - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
      title: Order defines if a channel is ORDERED or UNORDERED
    ibc.core.channel.v1.PacketState:
      type: object
      properties:
        port_id:
          type: string
          description: channel port identifier.
        channel_id:
          type: string
          description: channel unique identifier.
        sequence:
          type: string
          format: uint64
          description: packet sequence.
        data:
          type: string
          format: byte
          description: embedded data that represents packet state.
      description: >-
        PacketState defines the generic type necessary to retrieve and store

        packet commitments, acknowledgements, and receipts.

        Caller is responsible for knowing the context necessary to interpret this

        state as a commitment, acknowledgement, or a receipt.
    ibc.core.channel.v1.QueryChannelClientStateResponse:
      type: object
      properties:
        identified_client_state:
          title: client state associated with the channel
          type: object
          properties:
            client_id:
              type: string
              title: client identifier
            client_state:
              type: object
              properties:
                type_url:
                  type: string
                value:
                  type: string
                  format: byte
              title: client state
          description: >-
            IdentifiedClientState defines a client state with an additional
            client

            identifier field.
        proof:
          type: string
          format: byte
          title: merkle proof of existence
        proof_height:
          title: height at which the proof was retrieved
          type: object
          properties:
            revision_number:
              type: string
              format: uint64
              title: the revision that the client is currently on
            revision_height:
              type: string
              format: uint64
              title: the height within the given revision
          description: >-
            Normally the RevisionHeight is incremented at each height while
            keeping

            RevisionNumber the same. However some consensus algorithms may choose to

            reset the height in certain conditions e.g. hard forks, state-machine

            breaking changes In these cases, the RevisionNumber is incremented so that

            height continues to be monitonically increasing even as the RevisionHeight

            gets reset
      title: |-
        QueryChannelClientStateResponse is the Response type for the
        Query/QueryChannelClientState RPC method
    ibc.core.channel.v1.QueryChannelConsensusStateResponse:
      type: object
      properties:
        consensus_state:
          type: object
          properties:
            type_url:
              type: string
            value:
              type: string
              format: byte
          title: consensus state associated with the channel
        client_id:
          type: string
          title: client ID associated with the consensus state
        proof:
          type: string
          format: byte
          title: merkle proof of existence
        proof_height:
          title: height at which the proof was retrieved
          type: object
          properties:
            revision_number:
              type: string
              format: uint64
              title: the revision that the client is currently on
            revision_height:
              type: string
              format: uint64
              title: the height within the given revision
          description: >-
            Normally the RevisionHeight is incremented at each height while
            keeping

            RevisionNumber the same. However some consensus algorithms may choose to

            reset the height in certain conditions e.g. hard forks, state-machine

            breaking changes In these cases, the RevisionNumber is incremented so that

            height continues to be monitonically increasing even as the RevisionHeight

            gets reset
      title: |-
        QueryChannelClientStateResponse is the Response type for the
        Query/QueryChannelClientState RPC method
    ibc.core.channel.v1.QueryChannelResponse:
      type: object
      properties:
        channel:
          title: channel associated with the request identifiers
          type: object
          properties:
            state:
              title: current state of the channel end
              type: string
              enum:
                - STATE_UNINITIALIZED_UNSPECIFIED
                - STATE_INIT
                - STATE_TRYOPEN
                - STATE_OPEN
                - STATE_CLOSED
              default: STATE_UNINITIALIZED_UNSPECIFIED
              description: >-
                State defines if a channel is in one of the following states:

                CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.

                 - STATE_UNINITIALIZED_UNSPECIFIED: Default State
                 - STATE_INIT: A channel has just started the opening handshake.
                 - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
                 - STATE_OPEN: A channel has completed the handshake. Open channels are
                ready to send and receive packets.
                 - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
                packets.
            ordering:
              title: whether the channel is ordered or unordered
              type: string
              enum:
                - ORDER_NONE_UNSPECIFIED
                - ORDER_UNORDERED
                - ORDER_ORDERED
              default: ORDER_NONE_UNSPECIFIED
              description: >-
                - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
                 - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
                which they were sent.
                 - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
            counterparty:
              title: counterparty channel end
              type: object
              properties:
                port_id:
                  type: string
                  description: port on the counterparty chain which owns the other end of the
                    channel.
                channel_id:
                  type: string
                  title: channel end on the counterparty chain
            connection_hops:
              type: array
              items:
                type: string
              title: >-
                list of connection identifiers, in order, along which packets
                sent on

                this channel will travel
            version:
              type: string
              title: opaque channel version, which is agreed upon during the handshake
          description: >-
            Channel defines pipeline for exactly-once packet delivery between
            specific

            modules on separate blockchains, which has at least one end capable of

            sending packets and one end capable of receiving packets.
        proof:
          type: string
          format: byte
          title: merkle proof of existence
        proof_height:
          title: height at which the proof was retrieved
          type: object
          properties:
            revision_number:
              type: string
              format: uint64
              title: the revision that the client is currently on
            revision_height:
              type: string
              format: uint64
              title: the height within the given revision
          description: >-
            Normally the RevisionHeight is incremented at each height while
            keeping

            RevisionNumber the same. However some consensus algorithms may choose to

            reset the height in certain conditions e.g. hard forks, state-machine

            breaking changes In these cases, the RevisionNumber is incremented so that

            height continues to be monitonically increasing even as the RevisionHeight

            gets reset
      description: >-
        QueryChannelResponse is the response type for the Query/Channel RPC
        method.

        Besides the Channel end, it includes a proof and the height from which the

        proof was retrieved.
    ibc.core.channel.v1.QueryChannelsResponse:
      type: object
      properties:
        channels:
          type: array
          items:
            type: object
            properties:
              state:
                title: current state of the channel end
                type: string
                enum:
                  - STATE_UNINITIALIZED_UNSPECIFIED
                  - STATE_INIT
                  - STATE_TRYOPEN
                  - STATE_OPEN
                  - STATE_CLOSED
                default: STATE_UNINITIALIZED_UNSPECIFIED
                description: >-
                  State defines if a channel is in one of the following states:

                  CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.

                   - STATE_UNINITIALIZED_UNSPECIFIED: Default State
                   - STATE_INIT: A channel has just started the opening handshake.
                   - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
                   - STATE_OPEN: A channel has completed the handshake. Open channels are
                  ready to send and receive packets.
                   - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
                  packets.
              ordering:
                title: whether the channel is ordered or unordered
                type: string
                enum:
                  - ORDER_NONE_UNSPECIFIED
                  - ORDER_UNORDERED
                  - ORDER_ORDERED
                default: ORDER_NONE_UNSPECIFIED
                description: >-
                  - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
                   - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
                  which they were sent.
                   - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
              counterparty:
                title: counterparty channel end
                type: object
                properties:
                  port_id:
                    type: string
                    description: port on the counterparty chain which owns the other end of the
                      channel.
                  channel_id:
                    type: string
                    title: channel end on the counterparty chain
              connection_hops:
                type: array
                items:
                  type: string
                title: >-
                  list of connection identifiers, in order, along which packets
                  sent on

                  this channel will travel
              version:
                type: string
                title: opaque channel version, which is agreed upon during the handshake
              port_id:
                type: string
                title: port identifier
              channel_id:
                type: string
                title: channel identifier
            description: >-
              IdentifiedChannel defines a channel with additional port and
              channel

              identifier fields.
          description: list of stored channels of the chain.
        pagination:
          title: pagination response
          type: object
          properties:
            next_key:
              type: string
              format: byte
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
            total:
              type: string
              format: uint64
              title: >-
                total is total number of results available if
                PageRequest.count_total

                was set, its value is undefined otherwise
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
        height:
          title: query block height
          type: object
          properties:
            revision_number:
              type: string
              format: uint64
              title: the revision that the client is currently on
            revision_height:
              type: string
              format: uint64
              title: the height within the given revision
          description: >-
            Normally the RevisionHeight is incremented at each height while
            keeping

            RevisionNumber the same. However some consensus algorithms may choose to

            reset the height in certain conditions e.g. hard forks, state-machine

            breaking changes In these cases, the RevisionNumber is incremented so that

            height continues to be monitonically increasing even as the RevisionHeight

            gets reset
      description: QueryChannelsResponse is the response type for the Query/Channels
        RPC method.
    ibc.core.channel.v1.QueryConnectionChannelsResponse:
      type: object
      properties:
        channels:
          type: array
          items:
            type: object
            properties:
              state:
                title: current state of the channel end
                type: string
                enum:
                  - STATE_UNINITIALIZED_UNSPECIFIED
                  - STATE_INIT
                  - STATE_TRYOPEN
                  - STATE_OPEN
                  - STATE_CLOSED
                default: STATE_UNINITIALIZED_UNSPECIFIED
                description: >-
                  State defines if a channel is in one of the following states:

                  CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.

                   - STATE_UNINITIALIZED_UNSPECIFIED: Default State
                   - STATE_INIT: A channel has just started the opening handshake.
                   - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
                   - STATE_OPEN: A channel has completed the handshake. Open channels are
                  ready to send and receive packets.
                   - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
                  packets.
              ordering:
                title: whether the channel is ordered or unordered
                type: string
                enum:
                  - ORDER_NONE_UNSPECIFIED
                  - ORDER_UNORDERED
                  - ORDER_ORDERED
                default: ORDER_NONE_UNSPECIFIED
                description: >-
                  - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
                   - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
                  which they were sent.
                   - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
              counterparty:
                title: counterparty channel end
                type: object
                properties:
                  port_id:
                    type: string
                    description: port on the counterparty chain which owns the other end of the
                      channel.
                  channel_id:
                    type: string
                    title: channel end on the counterparty chain
              connection_hops:
                type: array
                items:
                  type: string
                title: >-
                  list of connection identifiers, in order, along which packets
                  sent on

                  this channel will travel
              version:
                type: string
                title: opaque channel version, which is agreed upon during the handshake
              port_id:
                type: string
                title: port identifier
              channel_id:
                type: string
                title: channel identifier
            description: >-
              IdentifiedChannel defines a channel with additional port and
              channel

              identifier fields.
          description: list of channels associated with a connection.
        pagination:
          title: pagination response
          type: object
          properties:
            next_key:
              type: string
              format: byte
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
            total:
              type: string
              format: uint64
              title: >-
                total is total number of results available if
                PageRequest.count_total

                was set, its value is undefined otherwise
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
        height:
          title: query block height
          type: object
          properties:
            revision_number:
              type: string
              format: uint64
              title: the revision that the client is currently on
            revision_height:
              type: string
              format: uint64
              title: the height within the given revision
          description: >-
            Normally the RevisionHeight is incremented at each height while
            keeping

            RevisionNumber the same. However some consensus algorithms may choose to

            reset the height in certain conditions e.g. hard forks, state-machine

            breaking changes In these cases, the RevisionNumber is incremented so that

            height continues to be monitonically increasing even as the RevisionHeight

            gets reset
      title: |-
        QueryConnectionChannelsResponse is the Response type for the
        Query/QueryConnectionChannels RPC method
    ibc.core.channel.v1.QueryNextSequenceReceiveResponse:
      type: object
      properties:
        next_sequence_receive:
          type: string
          format: uint64
          title: next sequence receive number
        proof:
          type: string
          format: byte
          title: merkle proof of existence
        proof_height:
          title: height at which the proof was retrieved
          type: object
          properties:
            revision_number:
              type: string
              format: uint64
              title: the revision that the client is currently on
            revision_height:
              type: string
              format: uint64
              title: the height within the given revision
          description: >-
            Normally the RevisionHeight is incremented at each height while
            keeping

            RevisionNumber the same. However some consensus algorithms may choose to

            reset the height in certain conditions e.g. hard forks, state-machine

            breaking changes In these cases, the RevisionNumber is incremented so that

            height continues to be monitonically increasing even as the RevisionHeight

            gets reset
      title: |-
        QuerySequenceResponse is the request type for the
        Query/QueryNextSequenceReceiveResponse RPC method
    ibc.core.channel.v1.QueryPacketAcknowledgementResponse:
      type: object
      properties:
        acknowledgement:
          type: string
          format: byte
          title: packet associated with the request fields
        proof:
          type: string
          format: byte
          title: merkle proof of existence
        proof_height:
          title: height at which the proof was retrieved
          type: object
          properties:
            revision_number:
              type: string
              format: uint64
              title: the revision that the client is currently on
            revision_height:
              type: string
              format: uint64
              title: the height within the given revision
          description: >-
            Normally the RevisionHeight is incremented at each height while
            keeping

            RevisionNumber the same. However some consensus algorithms may choose to

            reset the height in certain conditions e.g. hard forks, state-machine

            breaking changes In these cases, the RevisionNumber is incremented so that

            height continues to be monitonically increasing even as the RevisionHeight

            gets reset
      title: >-
        QueryPacketAcknowledgementResponse defines the client query response for
        a

        packet which also includes a proof and the height from which the

        proof was retrieved
    ibc.core.channel.v1.QueryPacketAcknowledgementsResponse:
      type: object
      properties:
        acknowledgements:
          type: array
          items:
            type: object
            properties:
              port_id:
                type: string
                description: channel port identifier.
              channel_id:
                type: string
                description: channel unique identifier.
              sequence:
                type: string
                format: uint64
                description: packet sequence.
              data:
                type: string
                format: byte
                description: embedded data that represents packet state.
            description: >-
              PacketState defines the generic type necessary to retrieve and
              store

              packet commitments, acknowledgements, and receipts.

              Caller is responsible for knowing the context necessary to interpret this

              state as a commitment, acknowledgement, or a receipt.
        pagination:
          title: pagination response
          type: object
          properties:
            next_key:
              type: string
              format: byte
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
            total:
              type: string
              format: uint64
              title: >-
                total is total number of results available if
                PageRequest.count_total

                was set, its value is undefined otherwise
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
        height:
          title: query block height
          type: object
          properties:
            revision_number:
              type: string
              format: uint64
              title: the revision that the client is currently on
            revision_height:
              type: string
              format: uint64
              title: the height within the given revision
          description: >-
            Normally the RevisionHeight is incremented at each height while
            keeping

            RevisionNumber the same. However some consensus algorithms may choose to

            reset the height in certain conditions e.g. hard forks, state-machine

            breaking changes In these cases, the RevisionNumber is incremented so that

            height continues to be monitonically increasing even as the RevisionHeight

            gets reset
      title: |-
        QueryPacketAcknowledgemetsResponse is the request type for the
        Query/QueryPacketAcknowledgements RPC method
    ibc.core.channel.v1.QueryPacketCommitmentResponse:
      type: object
      properties:
        commitment:
          type: string
          format: byte
          title: packet associated with the request fields
        proof:
          type: string
          format: byte
          title: merkle proof of existence
        proof_height:
          title: height at which the proof was retrieved
          type: object
          properties:
            revision_number:
              type: string
              format: uint64
              title: the revision that the client is currently on
            revision_height:
              type: string
              format: uint64
              title: the height within the given revision
          description: >-
            Normally the RevisionHeight is incremented at each height while
            keeping

            RevisionNumber the same. However some consensus algorithms may choose to

            reset the height in certain conditions e.g. hard forks, state-machine

            breaking changes In these cases, the RevisionNumber is incremented so that

            height continues to be monitonically increasing even as the RevisionHeight

            gets reset
      title: >-
        QueryPacketCommitmentResponse defines the client query response for a
        packet

        which also includes a proof and the height from which the proof was

        retrieved
    ibc.core.channel.v1.QueryPacketCommitmentsResponse:
      type: object
      properties:
        commitments:
          type: array
          items:
            type: object
            properties:
              port_id:
                type: string
                description: channel port identifier.
              channel_id:
                type: string
                description: channel unique identifier.
              sequence:
                type: string
                format: uint64
                description: packet sequence.
              data:
                type: string
                format: byte
                description: embedded data that represents packet state.
            description: >-
              PacketState defines the generic type necessary to retrieve and
              store

              packet commitments, acknowledgements, and receipts.

              Caller is responsible for knowing the context necessary to interpret this

              state as a commitment, acknowledgement, or a receipt.
        pagination:
          title: pagination response
          type: object
          properties:
            next_key:
              type: string
              format: byte
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
            total:
              type: string
              format: uint64
              title: >-
                total is total number of results available if
                PageRequest.count_total

                was set, its value is undefined otherwise
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
        height:
          title: query block height
          type: object
          properties:
            revision_number:
              type: string
              format: uint64
              title: the revision that the client is currently on
            revision_height:
              type: string
              format: uint64
              title: the height within the given revision
          description: >-
            Normally the RevisionHeight is incremented at each height while
            keeping

            RevisionNumber the same. However some consensus algorithms may choose to

            reset the height in certain conditions e.g. hard forks, state-machine

            breaking changes In these cases, the RevisionNumber is incremented so that

            height continues to be monitonically increasing even as the RevisionHeight

            gets reset
      title: |-
        QueryPacketCommitmentsResponse is the request type for the
        Query/QueryPacketCommitments RPC method
    ibc.core.channel.v1.QueryPacketReceiptResponse:
      type: object
      properties:
        received:
          type: boolean
          title: success flag for if receipt exists
        proof:
          type: string
          format: byte
          title: merkle proof of existence
        proof_height:
          title: height at which the proof was retrieved
          type: object
          properties:
            revision_number:
              type: string
              format: uint64
              title: the revision that the client is currently on
            revision_height:
              type: string
              format: uint64
              title: the height within the given revision
          description: >-
            Normally the RevisionHeight is incremented at each height while
            keeping

            RevisionNumber the same. However some consensus algorithms may choose to

            reset the height in certain conditions e.g. hard forks, state-machine

            breaking changes In these cases, the RevisionNumber is incremented so that

            height continues to be monitonically increasing even as the RevisionHeight

            gets reset
      title: >-
        QueryPacketReceiptResponse defines the client query response for a
        packet

        receipt which also includes a proof, and the height from which the proof was

        retrieved
    ibc.core.channel.v1.QueryUnreceivedAcksResponse:
      type: object
      properties:
        sequences:
          type: array
          items:
            type: string
            format: uint64
          title: list of unreceived acknowledgement sequences
        height:
          title: query block height
          type: object
          properties:
            revision_number:
              type: string
              format: uint64
              title: the revision that the client is currently on
            revision_height:
              type: string
              format: uint64
              title: the height within the given revision
          description: >-
            Normally the RevisionHeight is incremented at each height while
            keeping

            RevisionNumber the same. However some consensus algorithms may choose to

            reset the height in certain conditions e.g. hard forks, state-machine

            breaking changes In these cases, the RevisionNumber is incremented so that

            height continues to be monitonically increasing even as the RevisionHeight

            gets reset
      title: |-
        QueryUnreceivedAcksResponse is the response type for the
        Query/UnreceivedAcks RPC method
    ibc.core.channel.v1.QueryUnreceivedPacketsResponse:
      type: object
      properties:
        sequences:
          type: array
          items:
            type: string
            format: uint64
          title: list of unreceived packet sequences
        height:
          title: query block height
          type: object
          properties:
            revision_number:
              type: string
              format: uint64
              title: the revision that the client is currently on
            revision_height:
              type: string
              format: uint64
              title: the height within the given revision
          description: >-
            Normally the RevisionHeight is incremented at each height while
            keeping

            RevisionNumber the same. However some consensus algorithms may choose to

            reset the height in certain conditions e.g. hard forks, state-machine

            breaking changes In these cases, the RevisionNumber is incremented so that

            height continues to be monitonically increasing even as the RevisionHeight

            gets reset
      title: |-
        QueryUnreceivedPacketsResponse is the response type for the
        Query/UnreceivedPacketCommitments RPC method
    ibc.core.channel.v1.State:
      type: string
      enum:
        - STATE_UNINITIALIZED_UNSPECIFIED
        - STATE_INIT
        - STATE_TRYOPEN
        - STATE_OPEN
        - STATE_CLOSED
      default: STATE_UNINITIALIZED_UNSPECIFIED
      description: >-
        State defines if a channel is in one of the following states:

        CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.

         - STATE_UNINITIALIZED_UNSPECIFIED: Default State
         - STATE_INIT: A channel has just started the opening handshake.
         - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
         - STATE_OPEN: A channel has completed the handshake. Open channels are
        ready to send and receive packets.
         - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
        packets.
    ibc.core.client.v1.Height:
      type: object
      properties:
        revision_number:
          type: string
          format: uint64
          title: the revision that the client is currently on
        revision_height:
          type: string
          format: uint64
          title: the height within the given revision
      description: >-
        Normally the RevisionHeight is incremented at each height while keeping

        RevisionNumber the same. However some consensus algorithms may choose to

        reset the height in certain conditions e.g. hard forks, state-machine

        breaking changes In these cases, the RevisionNumber is incremented so that

        height continues to be monitonically increasing even as the RevisionHeight

        gets reset
      title: >-
        Height is a monotonically increasing data type

        that can be compared against another Height for the purposes of updating and

        freezing clients
    ibc.core.client.v1.IdentifiedClientState:
      type: object
      properties:
        client_id:
          type: string
          title: client identifier
        client_state:
          type: object
          properties:
            type_url:
              type: string
            value:
              type: string
              format: byte
          title: client state
      description: |-
        IdentifiedClientState defines a client state with an additional client
        identifier field.
    ibc.core.client.v1.ConsensusStateWithHeight:
      type: object
      properties:
        height:
          title: consensus state height
          type: object
          properties:
            revision_number:
              type: string
              format: uint64
              title: the revision that the client is currently on
            revision_height:
              type: string
              format: uint64
              title: the height within the given revision
          description: >-
            Normally the RevisionHeight is incremented at each height while
            keeping

            RevisionNumber the same. However some consensus algorithms may choose to

            reset the height in certain conditions e.g. hard forks, state-machine

            breaking changes In these cases, the RevisionNumber is incremented so that

            height continues to be monitonically increasing even as the RevisionHeight

            gets reset
        consensus_state:
          type: object
          properties:
            type_url:
              type: string
            value:
              type: string
              format: byte
          title: consensus state
      description: >-
        ConsensusStateWithHeight defines a consensus state with an additional
        height

        field.
    ibc.core.client.v1.Params:
      type: object
      properties:
        allowed_clients:
          type: array
          items:
            type: string
          description: allowed_clients defines the list of allowed client state types.
      description: Params defines the set of IBC light client parameters.
    ibc.core.client.v1.QueryClientParamsResponse:
      type: object
      properties:
        params:
          description: params defines the parameters of the module.
          type: object
          properties:
            allowed_clients:
              type: array
              items:
                type: string
              description: allowed_clients defines the list of allowed client state types.
      description: >-
        QueryClientParamsResponse is the response type for the
        Query/ClientParams RPC

        method.
    ibc.core.client.v1.QueryClientStateResponse:
      type: object
      properties:
        client_state:
          type: object
          properties:
            type_url:
              type: string
            value:
              type: string
              format: byte
          title: client state associated with the request identifier
        proof:
          type: string
          format: byte
          title: merkle proof of existence
        proof_height:
          title: height at which the proof was retrieved
          type: object
          properties:
            revision_number:
              type: string
              format: uint64
              title: the revision that the client is currently on
            revision_height:
              type: string
              format: uint64
              title: the height within the given revision
          description: >-
            Normally the RevisionHeight is incremented at each height while
            keeping

            RevisionNumber the same. However some consensus algorithms may choose to

            reset the height in certain conditions e.g. hard forks, state-machine

            breaking changes In these cases, the RevisionNumber is incremented so that

            height continues to be monitonically increasing even as the RevisionHeight

            gets reset
      description: >-
        QueryClientStateResponse is the response type for the Query/ClientState
        RPC

        method. Besides the client state, it includes a proof and the height from

        which the proof was retrieved.
    ibc.core.client.v1.QueryClientStatesResponse:
      type: object
      properties:
        client_states:
          type: array
          items:
            type: object
            properties:
              client_id:
                type: string
                title: client identifier
              client_state:
                type: object
                properties:
                  type_url:
                    type: string
                  value:
                    type: string
                    format: byte
                title: client state
            description: >-
              IdentifiedClientState defines a client state with an additional
              client

              identifier field.
          description: list of stored ClientStates of the chain.
        pagination:
          title: pagination response
          type: object
          properties:
            next_key:
              type: string
              format: byte
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
            total:
              type: string
              format: uint64
              title: >-
                total is total number of results available if
                PageRequest.count_total

                was set, its value is undefined otherwise
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
      description: >-
        QueryClientStatesResponse is the response type for the
        Query/ClientStates RPC

        method.
    ibc.core.client.v1.QueryClientStatusResponse:
      type: object
      properties:
        status:
          type: string
      description: >-
        QueryClientStatusResponse is the response type for the
        Query/ClientStatus RPC

        method. It returns the current status of the IBC client.
    ibc.core.client.v1.QueryConsensusStateHeightsResponse:
      type: object
      properties:
        consensus_state_heights:
          type: array
          items:
            type: object
            properties:
              revision_number:
                type: string
                format: uint64
                title: the revision that the client is currently on
              revision_height:
                type: string
                format: uint64
                title: the height within the given revision
            description: >-
              Normally the RevisionHeight is incremented at each height while
              keeping

              RevisionNumber the same. However some consensus algorithms may choose to

              reset the height in certain conditions e.g. hard forks, state-machine

              breaking changes In these cases, the RevisionNumber is incremented so that

              height continues to be monitonically increasing even as the RevisionHeight

              gets reset
            title: >-
              Height is a monotonically increasing data type

              that can be compared against another Height for the purposes of updating and

              freezing clients
          title: consensus state heights
        pagination:
          title: pagination response
          type: object
          properties:
            next_key:
              type: string
              format: byte
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
            total:
              type: string
              format: uint64
              title: >-
                total is total number of results available if
                PageRequest.count_total

                was set, its value is undefined otherwise
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
      title: |-
        QueryConsensusStateHeightsResponse is the response type for the
        Query/ConsensusStateHeights RPC method
    ibc.core.client.v1.QueryConsensusStateResponse:
      type: object
      properties:
        consensus_state:
          type: object
          properties:
            type_url:
              type: string
            value:
              type: string
              format: byte
          title: consensus state associated with the client identifier at the given height
        proof:
          type: string
          format: byte
          title: merkle proof of existence
        proof_height:
          type: object
          properties:
            revision_number:
              type: string
              format: uint64
              title: the revision that the client is currently on
            revision_height:
              type: string
              format: uint64
              title: the height within the given revision
          description: >-
            Normally the RevisionHeight is incremented at each height while
            keeping

            RevisionNumber the same. However some consensus algorithms may choose to

            reset the height in certain conditions e.g. hard forks, state-machine

            breaking changes In these cases, the RevisionNumber is incremented so that

            height continues to be monitonically increasing even as the RevisionHeight

            gets reset
          title: >-
            Height is a monotonically increasing data type

            that can be compared against another Height for the purposes of updating and

            freezing clients
      title: >-
        QueryConsensusStateResponse is the response type for the
        Query/ConsensusState

        RPC method
    ibc.core.client.v1.QueryConsensusStatesResponse:
      type: object
      properties:
        consensus_states:
          type: array
          items:
            type: object
            properties:
              height:
                title: consensus state height
                type: object
                properties:
                  revision_number:
                    type: string
                    format: uint64
                    title: the revision that the client is currently on
                  revision_height:
                    type: string
                    format: uint64
                    title: the height within the given revision
                description: >-
                  Normally the RevisionHeight is incremented at each height
                  while keeping

                  RevisionNumber the same. However some consensus algorithms may choose to

                  reset the height in certain conditions e.g. hard forks, state-machine

                  breaking changes In these cases, the RevisionNumber is incremented so that

                  height continues to be monitonically increasing even as the RevisionHeight

                  gets reset
              consensus_state:
                type: object
                properties:
                  type_url:
                    type: string
                  value:
                    type: string
                    format: byte
                title: consensus state
            description: >-
              ConsensusStateWithHeight defines a consensus state with an
              additional height

              field.
          title: consensus states associated with the identifier
        pagination:
          title: pagination response
          type: object
          properties:
            next_key:
              type: string
              format: byte
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
            total:
              type: string
              format: uint64
              title: >-
                total is total number of results available if
                PageRequest.count_total

                was set, its value is undefined otherwise
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
      title: |-
        QueryConsensusStatesResponse is the response type for the
        Query/ConsensusStates RPC method
    ibc.core.client.v1.QueryUpgradedClientStateResponse:
      type: object
      properties:
        upgraded_client_state:
          type: object
          properties:
            type_url:
              type: string
            value:
              type: string
              format: byte
          title: client state associated with the request identifier
      description: |-
        QueryUpgradedClientStateResponse is the response type for the
        Query/UpgradedClientState RPC method.
    ibc.core.client.v1.QueryUpgradedConsensusStateResponse:
      type: object
      properties:
        upgraded_consensus_state:
          type: object
          properties:
            type_url:
              type: string
            value:
              type: string
              format: byte
          title: Consensus state associated with the request identifier
      description: |-
        QueryUpgradedConsensusStateResponse is the response type for the
        Query/UpgradedConsensusState RPC method.
    cosmos.mint.v1beta1.Params:
      type: object
      properties:
        mint_denom:
          type: string
          title: type of coin to mint
        inflation_rate_change:
          type: string
          title: maximum annual change in inflation rate
        inflation_max:
          type: string
          title: maximum inflation rate
        inflation_min:
          type: string
          title: minimum inflation rate
        goal_bonded:
          type: string
          title: goal of percent bonded atoms
        blocks_per_year:
          type: string
          format: uint64
          title: expected blocks per year
      description: Params holds parameters for the mint module.
    cosmos.mint.v1beta1.QueryAnnualProvisionsResponse:
      type: object
      properties:
        annual_provisions:
          type: string
          format: byte
          description: annual_provisions is the current minting annual provisions value.
      description: |-
        QueryAnnualProvisionsResponse is the response type for the
        Query/AnnualProvisions RPC method.
    cosmos.mint.v1beta1.QueryInflationResponse:
      type: object
      properties:
        inflation:
          type: string
          format: byte
          description: inflation is the current minting inflation value.
      description: |-
        QueryInflationResponse is the response type for the Query/Inflation RPC
        method.
    cosmos.mint.v1beta1.QueryParamsResponse:
      type: object
      properties:
        params:
          description: params defines the parameters of the module.
          type: object
          properties:
            mint_denom:
              type: string
              title: type of coin to mint
            inflation_rate_change:
              type: string
              title: maximum annual change in inflation rate
            inflation_max:
              type: string
              title: maximum inflation rate
            inflation_min:
              type: string
              title: minimum inflation rate
            goal_bonded:
              type: string
              title: goal of percent bonded atoms
            blocks_per_year:
              type: string
              format: uint64
              title: expected blocks per year
      description: QueryParamsResponse is the response type for the Query/Params RPC method.
    cosmos.staking.v1beta1.BondStatus:
      type: string
      enum:
        - BOND_STATUS_UNSPECIFIED
        - BOND_STATUS_UNBONDED
        - BOND_STATUS_UNBONDING
        - BOND_STATUS_BONDED
      default: BOND_STATUS_UNSPECIFIED
      description: >-
        BondStatus is the status of a validator.

         - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.
         - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.
         - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.
         - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.
    cosmos.staking.v1beta1.Commission:
      type: object
      properties:
        commission_rates:
          description: commission_rates defines the initial commission rates to be used
            for creating a validator.
          type: object
          properties:
            rate:
              type: string
              description: rate is the commission rate charged to delegators, as a fraction.
            max_rate:
              type: string
              description: max_rate defines the maximum commission rate which validator can
                ever charge, as a fraction.
            max_change_rate:
              type: string
              description: max_change_rate defines the maximum daily increase of the validator
                commission, as a fraction.
        update_time:
          type: string
          format: date-time
          description: update_time is the last time the commission rate was changed.
      description: Commission defines commission parameters for a given validator.
    cosmos.staking.v1beta1.CommissionRates:
      type: object
      properties:
        rate:
          type: string
          description: rate is the commission rate charged to delegators, as a fraction.
        max_rate:
          type: string
          description: max_rate defines the maximum commission rate which validator can
            ever charge, as a fraction.
        max_change_rate:
          type: string
          description: max_change_rate defines the maximum daily increase of the validator
            commission, as a fraction.
      description: >-
        CommissionRates defines the initial commission rates to be used for
        creating

        a validator.
    cosmos.staking.v1beta1.Delegation:
      type: object
      properties:
        delegator_address:
          type: string
          description: delegator_address is the bech32-encoded address of the delegator.
        validator_address:
          type: string
          description: validator_address is the bech32-encoded address of the validator.
        shares:
          type: string
          description: shares define the delegation shares received.
      description: |-
        Delegation represents the bond with tokens held by an account. It is
        owned by one delegator, and is associated with the voting power of one
        validator.
    cosmos.staking.v1beta1.DelegationResponse:
      type: object
      properties:
        delegation:
          type: object
          properties:
            delegator_address:
              type: string
              description: delegator_address is the bech32-encoded address of the delegator.
            validator_address:
              type: string
              description: validator_address is the bech32-encoded address of the validator.
            shares:
              type: string
              description: shares define the delegation shares received.
          description: >-
            Delegation represents the bond with tokens held by an account. It is

            owned by one delegator, and is associated with the voting power of one

            validator.
        balance:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
      description: >-
        DelegationResponse is equivalent to Delegation except that it contains a

        balance in addition to shares which is more suitable for client responses.
    cosmos.staking.v1beta1.Description:
      type: object
      properties:
        moniker:
          type: string
          description: moniker defines a human-readable name for the validator.
        identity:
          type: string
          description: identity defines an optional identity signature (ex. UPort or
            Keybase).
        website:
          type: string
          description: website defines an optional website link.
        security_contact:
          type: string
          description: security_contact defines an optional email for security contact.
        details:
          type: string
          description: details define other optional details.
      description: Description defines a validator description.
    cosmos.staking.v1beta1.HistoricalInfo:
      type: object
      properties:
        header:
          type: object
          properties:
            version:
              title: basic block info
              type: object
              properties:
                block:
                  type: string
                  format: uint64
                app:
                  type: string
                  format: uint64
              description: >-
                Consensus captures the consensus rules for processing a block in
                the blockchain,

                including all blockchain data structures and the rules of the application's

                state transition machine.
            chain_id:
              type: string
            height:
              type: string
              format: int64
            time:
              type: string
              format: date-time
            last_block_id:
              type: object
              properties:
                hash:
                  type: string
                  format: byte
                part_set_header:
                  type: object
                  properties:
                    total:
                      type: integer
                      format: int64
                    hash:
                      type: string
                      format: byte
                  title: PartsetHeader
              title: BlockID
            last_commit_hash:
              type: string
              format: byte
              title: hashes of block data
            data_hash:
              type: string
              format: byte
            validators_hash:
              type: string
              format: byte
              title: hashes from the app output from the prev block
            next_validators_hash:
              type: string
              format: byte
            consensus_hash:
              type: string
              format: byte
            app_hash:
              type: string
              format: byte
            last_results_hash:
              type: string
              format: byte
            evidence_hash:
              type: string
              format: byte
              title: consensus info
            proposer_address:
              type: string
              format: byte
          description: Header defines the structure of a block header.
        valset:
          type: array
          items:
            type: object
            properties:
              operator_address:
                type: string
                description: operator_address defines the address of the validator's operator;
                  bech encoded in JSON.
              consensus_pubkey:
                type: object
                properties:
                  type_url:
                    type: string
                  value:
                    type: string
                    format: byte
                description: consensus_pubkey is the consensus public key of the validator, as a
                  Protobuf Any.
              jailed:
                type: boolean
                description: jailed defined whether the validator has been jailed from bonded
                  status or not.
              status:
                description: status is the validator status (bonded/unbonding/unbonded).
                type: string
                enum:
                  - BOND_STATUS_UNSPECIFIED
                  - BOND_STATUS_UNBONDED
                  - BOND_STATUS_UNBONDING
                  - BOND_STATUS_BONDED
                default: BOND_STATUS_UNSPECIFIED
              tokens:
                type: string
                description: tokens define the delegated tokens (incl. self-delegation).
              delegator_shares:
                type: string
                description: delegator_shares defines total shares issued to a validator's
                  delegators.
              description:
                description: description defines the description terms for the validator.
                type: object
                properties:
                  moniker:
                    type: string
                    description: moniker defines a human-readable name for the validator.
                  identity:
                    type: string
                    description: identity defines an optional identity signature (ex. UPort or
                      Keybase).
                  website:
                    type: string
                    description: website defines an optional website link.
                  security_contact:
                    type: string
                    description: security_contact defines an optional email for security contact.
                  details:
                    type: string
                    description: details define other optional details.
              unbonding_height:
                type: string
                format: int64
                description: unbonding_height defines, if unbonding, the height at which this
                  validator has begun unbonding.
              unbonding_time:
                type: string
                format: date-time
                description: unbonding_time defines, if unbonding, the min time for the
                  validator to complete unbonding.
              commission:
                description: commission defines the commission parameters.
                type: object
                properties:
                  commission_rates:
                    description: commission_rates defines the initial commission rates to be used
                      for creating a validator.
                    type: object
                    properties:
                      rate:
                        type: string
                        description: rate is the commission rate charged to delegators, as a fraction.
                      max_rate:
                        type: string
                        description: max_rate defines the maximum commission rate which validator can
                          ever charge, as a fraction.
                      max_change_rate:
                        type: string
                        description: max_change_rate defines the maximum daily increase of the validator
                          commission, as a fraction.
                  update_time:
                    type: string
                    format: date-time
                    description: update_time is the last time the commission rate was changed.
              min_self_delegation:
                type: string
                description: min_self_delegation is the validator's self declared minimum self
                  delegation.
            description: >-
              Validator defines a validator, together with the total amount of
              the

              Validator's bond shares and their exchange rate to coins. Slashing results in

              a decrease in the exchange rate, allowing correct calculation of future

              undelegations without iterating over delegators. When coins are delegated to

              this validator, the validator is credited with a delegation whose number of

              bond shares is based on the amount of coins delegated divided by the current

              exchange rate. Voting power can be calculated as total bonded shares

              multiplied by exchange rate.
      description: >-
        HistoricalInfo contains header and validator information for a given
        block.

        It is stored as part of staking module's state, which persists the `n` most

        recent HistoricalInfo

        (`n` is set by the staking module's `historical_entries` parameter).
    cosmos.staking.v1beta1.Params:
      type: object
      properties:
        unbonding_time:
          type: string
          description: unbonding_time is the time duration of unbonding.
        max_validators:
          type: integer
          format: int64
          description: max_validators is the maximum number of validators.
        max_entries:
          type: integer
          format: int64
          description: max_entries is the max entries for either unbonding delegation or
            redelegation (per pair/trio).
        historical_entries:
          type: integer
          format: int64
          description: historical_entries is the number of historical entries to persist.
        bond_denom:
          type: string
          description: bond_denom defines the bondable coin denomination.
      description: Params defines the parameters for the staking module.
    cosmos.staking.v1beta1.Pool:
      type: object
      properties:
        not_bonded_tokens:
          type: string
        bonded_tokens:
          type: string
      description: |-
        Pool is used for tracking bonded and not-bonded token supply of the bond
        denomination.
    cosmos.staking.v1beta1.QueryDelegationResponse:
      type: object
      properties:
        delegation_response:
          type: object
          properties:
            delegation:
              type: object
              properties:
                delegator_address:
                  type: string
                  description: delegator_address is the bech32-encoded address of the delegator.
                validator_address:
                  type: string
                  description: validator_address is the bech32-encoded address of the validator.
                shares:
                  type: string
                  description: shares define the delegation shares received.
              description: >-
                Delegation represents the bond with tokens held by an account.
                It is

                owned by one delegator, and is associated with the voting power of one

                validator.
            balance:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom method

                signatures required by gogoproto.
          description: >-
            DelegationResponse is equivalent to Delegation except that it
            contains a

            balance in addition to shares which is more suitable for client responses.
      description: QueryDelegationResponse is response type for the Query/Delegation
        RPC method.
    cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse:
      type: object
      properties:
        delegation_responses:
          type: array
          items:
            type: object
            properties:
              delegation:
                type: object
                properties:
                  delegator_address:
                    type: string
                    description: delegator_address is the bech32-encoded address of the delegator.
                  validator_address:
                    type: string
                    description: validator_address is the bech32-encoded address of the validator.
                  shares:
                    type: string
                    description: shares define the delegation shares received.
                description: >-
                  Delegation represents the bond with tokens held by an account.
                  It is

                  owned by one delegator, and is associated with the voting power of one

                  validator.
              balance:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.
            description: >-
              DelegationResponse is equivalent to Delegation except that it
              contains a

              balance in addition to shares which is more suitable for client responses.
          description: delegation_responses defines all the delegations' info of a
            delegator.
        pagination:
          description: pagination defines the pagination in the response.
          type: object
          properties:
            next_key:
              type: string
              format: byte
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
            total:
              type: string
              format: uint64
              title: >-
                total is total number of results available if
                PageRequest.count_total

                was set, its value is undefined otherwise
      description: |-
        QueryDelegatorDelegationsResponse is response type for the
        Query/DelegatorDelegations RPC method.
    cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse:
      type: object
      properties:
        unbonding_responses:
          type: array
          items:
            type: object
            properties:
              delegator_address:
                type: string
                description: delegator_address is the bech32-encoded address of the delegator.
              validator_address:
                type: string
                description: validator_address is the bech32-encoded address of the validator.
              entries:
                type: array
                items:
                  type: object
                  properties:
                    creation_height:
                      type: string
                      format: int64
                      description: creation_height is the height which the unbonding took place.
                    completion_time:
                      type: string
                      format: date-time
                      description: completion_time is the unix time for unbonding completion.
                    initial_balance:
                      type: string
                      description: initial_balance defines the tokens initially scheduled to receive
                        at completion.
                    balance:
                      type: string
                      description: balance defines the tokens to receive at completion.
                  description: UnbondingDelegationEntry defines an unbonding object with relevant
                    metadata.
                description: entries are the unbonding delegation entries.
            description: >-
              UnbondingDelegation stores all of a single delegator's unbonding
              bonds

              for a single validator in an time-ordered list.
        pagination:
          description: pagination defines the pagination in the response.
          type: object
          properties:
            next_key:
              type: string
              format: byte
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
            total:
              type: string
              format: uint64
              title: >-
                total is total number of results available if
                PageRequest.count_total

                was set, its value is undefined otherwise
      description: |-
        QueryUnbondingDelegatorDelegationsResponse is response type for the
        Query/UnbondingDelegatorDelegations RPC method.
    cosmos.staking.v1beta1.QueryDelegatorValidatorResponse:
      type: object
      properties:
        validator:
          type: object
          properties:
            operator_address:
              type: string
              description: operator_address defines the address of the validator's operator;
                bech encoded in JSON.
            consensus_pubkey:
              type: object
              properties:
                type_url:
                  type: string
                value:
                  type: string
                  format: byte
              description: consensus_pubkey is the consensus public key of the validator, as a
                Protobuf Any.
            jailed:
              type: boolean
              description: jailed defined whether the validator has been jailed from bonded
                status or not.
            status:
              description: status is the validator status (bonded/unbonding/unbonded).
              type: string
              enum:
                - BOND_STATUS_UNSPECIFIED
                - BOND_STATUS_UNBONDED
                - BOND_STATUS_UNBONDING
                - BOND_STATUS_BONDED
              default: BOND_STATUS_UNSPECIFIED
            tokens:
              type: string
              description: tokens define the delegated tokens (incl. self-delegation).
            delegator_shares:
              type: string
              description: delegator_shares defines total shares issued to a validator's
                delegators.
            description:
              description: description defines the description terms for the validator.
              type: object
              properties:
                moniker:
                  type: string
                  description: moniker defines a human-readable name for the validator.
                identity:
                  type: string
                  description: identity defines an optional identity signature (ex. UPort or
                    Keybase).
                website:
                  type: string
                  description: website defines an optional website link.
                security_contact:
                  type: string
                  description: security_contact defines an optional email for security contact.
                details:
                  type: string
                  description: details define other optional details.
            unbonding_height:
              type: string
              format: int64
              description: unbonding_height defines, if unbonding, the height at which this
                validator has begun unbonding.
            unbonding_time:
              type: string
              format: date-time
              description: unbonding_time defines, if unbonding, the min time for the
                validator to complete unbonding.
            commission:
              description: commission defines the commission parameters.
              type: object
              properties:
                commission_rates:
                  description: commission_rates defines the initial commission rates to be used
                    for creating a validator.
                  type: object
                  properties:
                    rate:
                      type: string
                      description: rate is the commission rate charged to delegators, as a fraction.
                    max_rate:
                      type: string
                      description: max_rate defines the maximum commission rate which validator can
                        ever charge, as a fraction.
                    max_change_rate:
                      type: string
                      description: max_change_rate defines the maximum daily increase of the validator
                        commission, as a fraction.
                update_time:
                  type: string
                  format: date-time
                  description: update_time is the last time the commission rate was changed.
            min_self_delegation:
              type: string
              description: min_self_delegation is the validator's self declared minimum self
                delegation.
          description: >-
            Validator defines a validator, together with the total amount of the

            Validator's bond shares and their exchange rate to coins. Slashing results in

            a decrease in the exchange rate, allowing correct calculation of future

            undelegations without iterating over delegators. When coins are delegated to

            this validator, the validator is credited with a delegation whose number of

            bond shares is based on the amount of coins delegated divided by the current

            exchange rate. Voting power can be calculated as total bonded shares

            multiplied by exchange rate.
      description: |-
        QueryDelegatorValidatorResponse response type for the
        Query/DelegatorValidator RPC method.
    cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse:
      type: object
      properties:
        validators:
          type: array
          items:
            type: object
            properties:
              operator_address:
                type: string
                description: operator_address defines the address of the validator's operator;
                  bech encoded in JSON.
              consensus_pubkey:
                type: object
                properties:
                  type_url:
                    type: string
                  value:
                    type: string
                    format: byte
                description: consensus_pubkey is the consensus public key of the validator, as a
                  Protobuf Any.
              jailed:
                type: boolean
                description: jailed defined whether the validator has been jailed from bonded
                  status or not.
              status:
                description: status is the validator status (bonded/unbonding/unbonded).
                type: string
                enum:
                  - BOND_STATUS_UNSPECIFIED
                  - BOND_STATUS_UNBONDED
                  - BOND_STATUS_UNBONDING
                  - BOND_STATUS_BONDED
                default: BOND_STATUS_UNSPECIFIED
              tokens:
                type: string
                description: tokens define the delegated tokens (incl. self-delegation).
              delegator_shares:
                type: string
                description: delegator_shares defines total shares issued to a validator's
                  delegators.
              description:
                description: description defines the description terms for the validator.
                type: object
                properties:
                  moniker:
                    type: string
                    description: moniker defines a human-readable name for the validator.
                  identity:
                    type: string
                    description: identity defines an optional identity signature (ex. UPort or
                      Keybase).
                  website:
                    type: string
                    description: website defines an optional website link.
                  security_contact:
                    type: string
                    description: security_contact defines an optional email for security contact.
                  details:
                    type: string
                    description: details define other optional details.
              unbonding_height:
                type: string
                format: int64
                description: unbonding_height defines, if unbonding, the height at which this
                  validator has begun unbonding.
              unbonding_time:
                type: string
                format: date-time
                description: unbonding_time defines, if unbonding, the min time for the
                  validator to complete unbonding.
              commission:
                description: commission defines the commission parameters.
                type: object
                properties:
                  commission_rates:
                    description: commission_rates defines the initial commission rates to be used
                      for creating a validator.
                    type: object
                    properties:
                      rate:
                        type: string
                        description: rate is the commission rate charged to delegators, as a fraction.
                      max_rate:
                        type: string
                        description: max_rate defines the maximum commission rate which validator can
                          ever charge, as a fraction.
                      max_change_rate:
                        type: string
                        description: max_change_rate defines the maximum daily increase of the validator
                          commission, as a fraction.
                  update_time:
                    type: string
                    format: date-time
                    description: update_time is the last time the commission rate was changed.
              min_self_delegation:
                type: string
                description: min_self_delegation is the validator's self declared minimum self
                  delegation.
            description: >-
              Validator defines a validator, together with the total amount of
              the

              Validator's bond shares and their exchange rate to coins. Slashing results in

              a decrease in the exchange rate, allowing correct calculation of future

              undelegations without iterating over delegators. When coins are delegated to

              this validator, the validator is credited with a delegation whose number of

              bond shares is based on the amount of coins delegated divided by the current

              exchange rate. Voting power can be calculated as total bonded shares

              multiplied by exchange rate.
          description: validators defines the the validators' info of a delegator.
        pagination:
          description: pagination defines the pagination in the response.
          type: object
          properties:
            next_key:
              type: string
              format: byte
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
            total:
              type: string
              format: uint64
              title: >-
                total is total number of results available if
                PageRequest.count_total

                was set, its value is undefined otherwise
      description: |-
        QueryDelegatorValidatorsResponse is response type for the
        Query/DelegatorValidators RPC method.
    cosmos.staking.v1beta1.QueryHistoricalInfoResponse:
      type: object
      properties:
        hist:
          description: hist defines the historical info at the given height.
          type: object
          properties:
            header:
              type: object
              properties:
                version:
                  title: basic block info
                  type: object
                  properties:
                    block:
                      type: string
                      format: uint64
                    app:
                      type: string
                      format: uint64
                  description: >-
                    Consensus captures the consensus rules for processing a
                    block in the blockchain,

                    including all blockchain data structures and the rules of the application's

                    state transition machine.
                chain_id:
                  type: string
                height:
                  type: string
                  format: int64
                time:
                  type: string
                  format: date-time
                last_block_id:
                  type: object
                  properties:
                    hash:
                      type: string
                      format: byte
                    part_set_header:
                      type: object
                      properties:
                        total:
                          type: integer
                          format: int64
                        hash:
                          type: string
                          format: byte
                      title: PartsetHeader
                  title: BlockID
                last_commit_hash:
                  type: string
                  format: byte
                  title: hashes of block data
                data_hash:
                  type: string
                  format: byte
                validators_hash:
                  type: string
                  format: byte
                  title: hashes from the app output from the prev block
                next_validators_hash:
                  type: string
                  format: byte
                consensus_hash:
                  type: string
                  format: byte
                app_hash:
                  type: string
                  format: byte
                last_results_hash:
                  type: string
                  format: byte
                evidence_hash:
                  type: string
                  format: byte
                  title: consensus info
                proposer_address:
                  type: string
                  format: byte
              description: Header defines the structure of a block header.
            valset:
              type: array
              items:
                type: object
                properties:
                  operator_address:
                    type: string
                    description: operator_address defines the address of the validator's operator;
                      bech encoded in JSON.
                  consensus_pubkey:
                    type: object
                    properties:
                      type_url:
                        type: string
                      value:
                        type: string
                        format: byte
                    description: consensus_pubkey is the consensus public key of the validator, as a
                      Protobuf Any.
                  jailed:
                    type: boolean
                    description: jailed defined whether the validator has been jailed from bonded
                      status or not.
                  status:
                    description: status is the validator status (bonded/unbonding/unbonded).
                    type: string
                    enum:
                      - BOND_STATUS_UNSPECIFIED
                      - BOND_STATUS_UNBONDED
                      - BOND_STATUS_UNBONDING
                      - BOND_STATUS_BONDED
                    default: BOND_STATUS_UNSPECIFIED
                  tokens:
                    type: string
                    description: tokens define the delegated tokens (incl. self-delegation).
                  delegator_shares:
                    type: string
                    description: delegator_shares defines total shares issued to a validator's
                      delegators.
                  description:
                    description: description defines the description terms for the validator.
                    type: object
                    properties:
                      moniker:
                        type: string
                        description: moniker defines a human-readable name for the validator.
                      identity:
                        type: string
                        description: identity defines an optional identity signature (ex. UPort or
                          Keybase).
                      website:
                        type: string
                        description: website defines an optional website link.
                      security_contact:
                        type: string
                        description: security_contact defines an optional email for security contact.
                      details:
                        type: string
                        description: details define other optional details.
                  unbonding_height:
                    type: string
                    format: int64
                    description: unbonding_height defines, if unbonding, the height at which this
                      validator has begun unbonding.
                  unbonding_time:
                    type: string
                    format: date-time
                    description: unbonding_time defines, if unbonding, the min time for the
                      validator to complete unbonding.
                  commission:
                    description: commission defines the commission parameters.
                    type: object
                    properties:
                      commission_rates:
                        description: commission_rates defines the initial commission rates to be used
                          for creating a validator.
                        type: object
                        properties:
                          rate:
                            type: string
                            description: rate is the commission rate charged to delegators, as a fraction.
                          max_rate:
                            type: string
                            description: max_rate defines the maximum commission rate which validator can
                              ever charge, as a fraction.
                          max_change_rate:
                            type: string
                            description: max_change_rate defines the maximum daily increase of the validator
                              commission, as a fraction.
                      update_time:
                        type: string
                        format: date-time
                        description: update_time is the last time the commission rate was changed.
                  min_self_delegation:
                    type: string
                    description: min_self_delegation is the validator's self declared minimum self
                      delegation.
                description: >-
                  Validator defines a validator, together with the total amount
                  of the

                  Validator's bond shares and their exchange rate to coins. Slashing results in

                  a decrease in the exchange rate, allowing correct calculation of future

                  undelegations without iterating over delegators. When coins are delegated to

                  this validator, the validator is credited with a delegation whose number of

                  bond shares is based on the amount of coins delegated divided by the current

                  exchange rate. Voting power can be calculated as total bonded shares

                  multiplied by exchange rate.
      description: >-
        QueryHistoricalInfoResponse is response type for the
        Query/HistoricalInfo RPC

        method.
    cosmos.staking.v1beta1.QueryParamsResponse:
      type: object
      properties:
        params:
          description: params holds all the parameters of this module.
          type: object
          properties:
            unbonding_time:
              type: string
              description: unbonding_time is the time duration of unbonding.
            max_validators:
              type: integer
              format: int64
              description: max_validators is the maximum number of validators.
            max_entries:
              type: integer
              format: int64
              description: max_entries is the max entries for either unbonding delegation or
                redelegation (per pair/trio).
            historical_entries:
              type: integer
              format: int64
              description: historical_entries is the number of historical entries to persist.
            bond_denom:
              type: string
              description: bond_denom defines the bondable coin denomination.
      description: QueryParamsResponse is response type for the Query/Params RPC method.
    cosmos.staking.v1beta1.QueryPoolResponse:
      type: object
      properties:
        pool:
          description: pool defines the pool info.
          type: object
          properties:
            not_bonded_tokens:
              type: string
            bonded_tokens:
              type: string
      description: QueryPoolResponse is response type for the Query/Pool RPC method.
    cosmos.staking.v1beta1.QueryRedelegationsResponse:
      type: object
      properties:
        redelegation_responses:
          type: array
          items:
            type: object
            properties:
              redelegation:
                type: object
                properties:
                  delegator_address:
                    type: string
                    description: delegator_address is the bech32-encoded address of the delegator.
                  validator_src_address:
                    type: string
                    description: validator_src_address is the validator redelegation source operator
                      address.
                  validator_dst_address:
                    type: string
                    description: validator_dst_address is the validator redelegation destination
                      operator address.
                  entries:
                    type: array
                    items:
                      type: object
                      properties:
                        creation_height:
                          type: string
                          format: int64
                          description: creation_height  defines the height which the redelegation took
                            place.
                        completion_time:
                          type: string
                          format: date-time
                          description: completion_time defines the unix time for redelegation completion.
                        initial_balance:
                          type: string
                          description: initial_balance defines the initial balance when redelegation
                            started.
                        shares_dst:
                          type: string
                          description: shares_dst is the amount of destination-validator shares created by
                            redelegation.
                      description: RedelegationEntry defines a redelegation object with relevant
                        metadata.
                    description: entries are the redelegation entries.
                description: >-
                  Redelegation contains the list of a particular delegator's
                  redelegating bonds

                  from a particular source validator to a particular destination validator.
              entries:
                type: array
                items:
                  type: object
                  properties:
                    redelegation_entry:
                      type: object
                      properties:
                        creation_height:
                          type: string
                          format: int64
                          description: creation_height  defines the height which the redelegation took
                            place.
                        completion_time:
                          type: string
                          format: date-time
                          description: completion_time defines the unix time for redelegation completion.
                        initial_balance:
                          type: string
                          description: initial_balance defines the initial balance when redelegation
                            started.
                        shares_dst:
                          type: string
                          description: shares_dst is the amount of destination-validator shares created by
                            redelegation.
                      description: RedelegationEntry defines a redelegation object with relevant
                        metadata.
                    balance:
                      type: string
                  description: >-
                    RedelegationEntryResponse is equivalent to a
                    RedelegationEntry except that it

                    contains a balance in addition to shares which is more suitable for client

                    responses.
            description: >-
              RedelegationResponse is equivalent to a Redelegation except that
              its entries

              contain a balance in addition to shares which is more suitable for client

              responses.
        pagination:
          description: pagination defines the pagination in the response.
          type: object
          properties:
            next_key:
              type: string
              format: byte
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
            total:
              type: string
              format: uint64
              title: >-
                total is total number of results available if
                PageRequest.count_total

                was set, its value is undefined otherwise
      description: >-
        QueryRedelegationsResponse is response type for the Query/Redelegations
        RPC

        method.
    cosmos.staking.v1beta1.QueryUnbondingDelegationResponse:
      type: object
      properties:
        unbond:
          type: object
          properties:
            delegator_address:
              type: string
              description: delegator_address is the bech32-encoded address of the delegator.
            validator_address:
              type: string
              description: validator_address is the bech32-encoded address of the validator.
            entries:
              type: array
              items:
                type: object
                properties:
                  creation_height:
                    type: string
                    format: int64
                    description: creation_height is the height which the unbonding took place.
                  completion_time:
                    type: string
                    format: date-time
                    description: completion_time is the unix time for unbonding completion.
                  initial_balance:
                    type: string
                    description: initial_balance defines the tokens initially scheduled to receive
                      at completion.
                  balance:
                    type: string
                    description: balance defines the tokens to receive at completion.
                description: UnbondingDelegationEntry defines an unbonding object with relevant
                  metadata.
              description: entries are the unbonding delegation entries.
          description: >-
            UnbondingDelegation stores all of a single delegator's unbonding
            bonds

            for a single validator in an time-ordered list.
      description: >-
        QueryDelegationResponse is response type for the
        Query/UnbondingDelegation

        RPC method.
    cosmos.staking.v1beta1.QueryValidatorDelegationsResponse:
      type: object
      properties:
        delegation_responses:
          type: array
          items:
            type: object
            properties:
              delegation:
                type: object
                properties:
                  delegator_address:
                    type: string
                    description: delegator_address is the bech32-encoded address of the delegator.
                  validator_address:
                    type: string
                    description: validator_address is the bech32-encoded address of the validator.
                  shares:
                    type: string
                    description: shares define the delegation shares received.
                description: >-
                  Delegation represents the bond with tokens held by an account.
                  It is

                  owned by one delegator, and is associated with the voting power of one

                  validator.
              balance:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.
            description: >-
              DelegationResponse is equivalent to Delegation except that it
              contains a

              balance in addition to shares which is more suitable for client responses.
        pagination:
          description: pagination defines the pagination in the response.
          type: object
          properties:
            next_key:
              type: string
              format: byte
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
            total:
              type: string
              format: uint64
              title: >-
                total is total number of results available if
                PageRequest.count_total

                was set, its value is undefined otherwise
      title: |-
        QueryValidatorDelegationsResponse is response type for the
        Query/ValidatorDelegations RPC method
    cosmos.staking.v1beta1.QueryValidatorResponse:
      type: object
      properties:
        validator:
          type: object
          properties:
            operator_address:
              type: string
              description: operator_address defines the address of the validator's operator;
                bech encoded in JSON.
            consensus_pubkey:
              type: object
              properties:
                type_url:
                  type: string
                value:
                  type: string
                  format: byte
              description: consensus_pubkey is the consensus public key of the validator, as a
                Protobuf Any.
            jailed:
              type: boolean
              description: jailed defined whether the validator has been jailed from bonded
                status or not.
            status:
              description: status is the validator status (bonded/unbonding/unbonded).
              type: string
              enum:
                - BOND_STATUS_UNSPECIFIED
                - BOND_STATUS_UNBONDED
                - BOND_STATUS_UNBONDING
                - BOND_STATUS_BONDED
              default: BOND_STATUS_UNSPECIFIED
            tokens:
              type: string
              description: tokens define the delegated tokens (incl. self-delegation).
            delegator_shares:
              type: string
              description: delegator_shares defines total shares issued to a validator's
                delegators.
            description:
              description: description defines the description terms for the validator.
              type: object
              properties:
                moniker:
                  type: string
                  description: moniker defines a human-readable name for the validator.
                identity:
                  type: string
                  description: identity defines an optional identity signature (ex. UPort or
                    Keybase).
                website:
                  type: string
                  description: website defines an optional website link.
                security_contact:
                  type: string
                  description: security_contact defines an optional email for security contact.
                details:
                  type: string
                  description: details define other optional details.
            unbonding_height:
              type: string
              format: int64
              description: unbonding_height defines, if unbonding, the height at which this
                validator has begun unbonding.
            unbonding_time:
              type: string
              format: date-time
              description: unbonding_time defines, if unbonding, the min time for the
                validator to complete unbonding.
            commission:
              description: commission defines the commission parameters.
              type: object
              properties:
                commission_rates:
                  description: commission_rates defines the initial commission rates to be used
                    for creating a validator.
                  type: object
                  properties:
                    rate:
                      type: string
                      description: rate is the commission rate charged to delegators, as a fraction.
                    max_rate:
                      type: string
                      description: max_rate defines the maximum commission rate which validator can
                        ever charge, as a fraction.
                    max_change_rate:
                      type: string
                      description: max_change_rate defines the maximum daily increase of the validator
                        commission, as a fraction.
                update_time:
                  type: string
                  format: date-time
                  description: update_time is the last time the commission rate was changed.
            min_self_delegation:
              type: string
              description: min_self_delegation is the validator's self declared minimum self
                delegation.
          description: >-
            Validator defines a validator, together with the total amount of the

            Validator's bond shares and their exchange rate to coins. Slashing results in

            a decrease in the exchange rate, allowing correct calculation of future

            undelegations without iterating over delegators. When coins are delegated to

            this validator, the validator is credited with a delegation whose number of

            bond shares is based on the amount of coins delegated divided by the current

            exchange rate. Voting power can be calculated as total bonded shares

            multiplied by exchange rate.
      title: QueryValidatorResponse is response type for the Query/Validator RPC
        method
    cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse:
      type: object
      properties:
        unbonding_responses:
          type: array
          items:
            type: object
            properties:
              delegator_address:
                type: string
                description: delegator_address is the bech32-encoded address of the delegator.
              validator_address:
                type: string
                description: validator_address is the bech32-encoded address of the validator.
              entries:
                type: array
                items:
                  type: object
                  properties:
                    creation_height:
                      type: string
                      format: int64
                      description: creation_height is the height which the unbonding took place.
                    completion_time:
                      type: string
                      format: date-time
                      description: completion_time is the unix time for unbonding completion.
                    initial_balance:
                      type: string
                      description: initial_balance defines the tokens initially scheduled to receive
                        at completion.
                    balance:
                      type: string
                      description: balance defines the tokens to receive at completion.
                  description: UnbondingDelegationEntry defines an unbonding object with relevant
                    metadata.
                description: entries are the unbonding delegation entries.
            description: >-
              UnbondingDelegation stores all of a single delegator's unbonding
              bonds

              for a single validator in an time-ordered list.
        pagination:
          description: pagination defines the pagination in the response.
          type: object
          properties:
            next_key:
              type: string
              format: byte
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
            total:
              type: string
              format: uint64
              title: >-
                total is total number of results available if
                PageRequest.count_total

                was set, its value is undefined otherwise
      description: |-
        QueryValidatorUnbondingDelegationsResponse is response type for the
        Query/ValidatorUnbondingDelegations RPC method.
    cosmos.staking.v1beta1.QueryValidatorsResponse:
      type: object
      properties:
        validators:
          type: array
          items:
            type: object
            properties:
              operator_address:
                type: string
                description: operator_address defines the address of the validator's operator;
                  bech encoded in JSON.
              consensus_pubkey:
                type: object
                properties:
                  type_url:
                    type: string
                  value:
                    type: string
                    format: byte
                description: consensus_pubkey is the consensus public key of the validator, as a
                  Protobuf Any.
              jailed:
                type: boolean
                description: jailed defined whether the validator has been jailed from bonded
                  status or not.
              status:
                description: status is the validator status (bonded/unbonding/unbonded).
                type: string
                enum:
                  - BOND_STATUS_UNSPECIFIED
                  - BOND_STATUS_UNBONDED
                  - BOND_STATUS_UNBONDING
                  - BOND_STATUS_BONDED
                default: BOND_STATUS_UNSPECIFIED
              tokens:
                type: string
                description: tokens define the delegated tokens (incl. self-delegation).
              delegator_shares:
                type: string
                description: delegator_shares defines total shares issued to a validator's
                  delegators.
              description:
                description: description defines the description terms for the validator.
                type: object
                properties:
                  moniker:
                    type: string
                    description: moniker defines a human-readable name for the validator.
                  identity:
                    type: string
                    description: identity defines an optional identity signature (ex. UPort or
                      Keybase).
                  website:
                    type: string
                    description: website defines an optional website link.
                  security_contact:
                    type: string
                    description: security_contact defines an optional email for security contact.
                  details:
                    type: string
                    description: details define other optional details.
              unbonding_height:
                type: string
                format: int64
                description: unbonding_height defines, if unbonding, the height at which this
                  validator has begun unbonding.
              unbonding_time:
                type: string
                format: date-time
                description: unbonding_time defines, if unbonding, the min time for the
                  validator to complete unbonding.
              commission:
                description: commission defines the commission parameters.
                type: object
                properties:
                  commission_rates:
                    description: commission_rates defines the initial commission rates to be used
                      for creating a validator.
                    type: object
                    properties:
                      rate:
                        type: string
                        description: rate is the commission rate charged to delegators, as a fraction.
                      max_rate:
                        type: string
                        description: max_rate defines the maximum commission rate which validator can
                          ever charge, as a fraction.
                      max_change_rate:
                        type: string
                        description: max_change_rate defines the maximum daily increase of the validator
                          commission, as a fraction.
                  update_time:
                    type: string
                    format: date-time
                    description: update_time is the last time the commission rate was changed.
              min_self_delegation:
                type: string
                description: min_self_delegation is the validator's self declared minimum self
                  delegation.
            description: >-
              Validator defines a validator, together with the total amount of
              the

              Validator's bond shares and their exchange rate to coins. Slashing results in

              a decrease in the exchange rate, allowing correct calculation of future

              undelegations without iterating over delegators. When coins are delegated to

              this validator, the validator is credited with a delegation whose number of

              bond shares is based on the amount of coins delegated divided by the current

              exchange rate. Voting power can be calculated as total bonded shares

              multiplied by exchange rate.
          description: validators contains all the queried validators.
        pagination:
          description: pagination defines the pagination in the response.
          type: object
          properties:
            next_key:
              type: string
              format: byte
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
            total:
              type: string
              format: uint64
              title: >-
                total is total number of results available if
                PageRequest.count_total

                was set, its value is undefined otherwise
      title: QueryValidatorsResponse is response type for the Query/Validators RPC
        method
    cosmos.staking.v1beta1.Redelegation:
      type: object
      properties:
        delegator_address:
          type: string
          description: delegator_address is the bech32-encoded address of the delegator.
        validator_src_address:
          type: string
          description: validator_src_address is the validator redelegation source operator
            address.
        validator_dst_address:
          type: string
          description: validator_dst_address is the validator redelegation destination
            operator address.
        entries:
          type: array
          items:
            type: object
            properties:
              creation_height:
                type: string
                format: int64
                description: creation_height  defines the height which the redelegation took
                  place.
              completion_time:
                type: string
                format: date-time
                description: completion_time defines the unix time for redelegation completion.
              initial_balance:
                type: string
                description: initial_balance defines the initial balance when redelegation
                  started.
              shares_dst:
                type: string
                description: shares_dst is the amount of destination-validator shares created by
                  redelegation.
            description: RedelegationEntry defines a redelegation object with relevant
              metadata.
          description: entries are the redelegation entries.
      description: >-
        Redelegation contains the list of a particular delegator's redelegating
        bonds

        from a particular source validator to a particular destination validator.
    cosmos.staking.v1beta1.RedelegationEntry:
      type: object
      properties:
        creation_height:
          type: string
          format: int64
          description: creation_height  defines the height which the redelegation took
            place.
        completion_time:
          type: string
          format: date-time
          description: completion_time defines the unix time for redelegation completion.
        initial_balance:
          type: string
          description: initial_balance defines the initial balance when redelegation
            started.
        shares_dst:
          type: string
          description: shares_dst is the amount of destination-validator shares created by
            redelegation.
      description: RedelegationEntry defines a redelegation object with relevant metadata.
    cosmos.staking.v1beta1.RedelegationEntryResponse:
      type: object
      properties:
        redelegation_entry:
          type: object
          properties:
            creation_height:
              type: string
              format: int64
              description: creation_height  defines the height which the redelegation took
                place.
            completion_time:
              type: string
              format: date-time
              description: completion_time defines the unix time for redelegation completion.
            initial_balance:
              type: string
              description: initial_balance defines the initial balance when redelegation
                started.
            shares_dst:
              type: string
              description: shares_dst is the amount of destination-validator shares created by
                redelegation.
          description: RedelegationEntry defines a redelegation object with relevant
            metadata.
        balance:
          type: string
      description: >-
        RedelegationEntryResponse is equivalent to a RedelegationEntry except
        that it

        contains a balance in addition to shares which is more suitable for client

        responses.
    cosmos.staking.v1beta1.RedelegationResponse:
      type: object
      properties:
        redelegation:
          type: object
          properties:
            delegator_address:
              type: string
              description: delegator_address is the bech32-encoded address of the delegator.
            validator_src_address:
              type: string
              description: validator_src_address is the validator redelegation source operator
                address.
            validator_dst_address:
              type: string
              description: validator_dst_address is the validator redelegation destination
                operator address.
            entries:
              type: array
              items:
                type: object
                properties:
                  creation_height:
                    type: string
                    format: int64
                    description: creation_height  defines the height which the redelegation took
                      place.
                  completion_time:
                    type: string
                    format: date-time
                    description: completion_time defines the unix time for redelegation completion.
                  initial_balance:
                    type: string
                    description: initial_balance defines the initial balance when redelegation
                      started.
                  shares_dst:
                    type: string
                    description: shares_dst is the amount of destination-validator shares created by
                      redelegation.
                description: RedelegationEntry defines a redelegation object with relevant
                  metadata.
              description: entries are the redelegation entries.
          description: >-
            Redelegation contains the list of a particular delegator's
            redelegating bonds

            from a particular source validator to a particular destination validator.
        entries:
          type: array
          items:
            type: object
            properties:
              redelegation_entry:
                type: object
                properties:
                  creation_height:
                    type: string
                    format: int64
                    description: creation_height  defines the height which the redelegation took
                      place.
                  completion_time:
                    type: string
                    format: date-time
                    description: completion_time defines the unix time for redelegation completion.
                  initial_balance:
                    type: string
                    description: initial_balance defines the initial balance when redelegation
                      started.
                  shares_dst:
                    type: string
                    description: shares_dst is the amount of destination-validator shares created by
                      redelegation.
                description: RedelegationEntry defines a redelegation object with relevant
                  metadata.
              balance:
                type: string
            description: >-
              RedelegationEntryResponse is equivalent to a RedelegationEntry
              except that it

              contains a balance in addition to shares which is more suitable for client

              responses.
      description: >-
        RedelegationResponse is equivalent to a Redelegation except that its
        entries

        contain a balance in addition to shares which is more suitable for client

        responses.
    cosmos.staking.v1beta1.UnbondingDelegation:
      type: object
      properties:
        delegator_address:
          type: string
          description: delegator_address is the bech32-encoded address of the delegator.
        validator_address:
          type: string
          description: validator_address is the bech32-encoded address of the validator.
        entries:
          type: array
          items:
            type: object
            properties:
              creation_height:
                type: string
                format: int64
                description: creation_height is the height which the unbonding took place.
              completion_time:
                type: string
                format: date-time
                description: completion_time is the unix time for unbonding completion.
              initial_balance:
                type: string
                description: initial_balance defines the tokens initially scheduled to receive
                  at completion.
              balance:
                type: string
                description: balance defines the tokens to receive at completion.
            description: UnbondingDelegationEntry defines an unbonding object with relevant
              metadata.
          description: entries are the unbonding delegation entries.
      description: |-
        UnbondingDelegation stores all of a single delegator's unbonding bonds
        for a single validator in an time-ordered list.
    cosmos.staking.v1beta1.UnbondingDelegationEntry:
      type: object
      properties:
        creation_height:
          type: string
          format: int64
          description: creation_height is the height which the unbonding took place.
        completion_time:
          type: string
          format: date-time
          description: completion_time is the unix time for unbonding completion.
        initial_balance:
          type: string
          description: initial_balance defines the tokens initially scheduled to receive
            at completion.
        balance:
          type: string
          description: balance defines the tokens to receive at completion.
      description: UnbondingDelegationEntry defines an unbonding object with relevant
        metadata.
    cosmos.staking.v1beta1.Validator:
      type: object
      properties:
        operator_address:
          type: string
          description: operator_address defines the address of the validator's operator;
            bech encoded in JSON.
        consensus_pubkey:
          type: object
          properties:
            type_url:
              type: string
            value:
              type: string
              format: byte
          description: consensus_pubkey is the consensus public key of the validator, as a
            Protobuf Any.
        jailed:
          type: boolean
          description: jailed defined whether the validator has been jailed from bonded
            status or not.
        status:
          description: status is the validator status (bonded/unbonding/unbonded).
          type: string
          enum:
            - BOND_STATUS_UNSPECIFIED
            - BOND_STATUS_UNBONDED
            - BOND_STATUS_UNBONDING
            - BOND_STATUS_BONDED
          default: BOND_STATUS_UNSPECIFIED
        tokens:
          type: string
          description: tokens define the delegated tokens (incl. self-delegation).
        delegator_shares:
          type: string
          description: delegator_shares defines total shares issued to a validator's
            delegators.
        description:
          description: description defines the description terms for the validator.
          type: object
          properties:
            moniker:
              type: string
              description: moniker defines a human-readable name for the validator.
            identity:
              type: string
              description: identity defines an optional identity signature (ex. UPort or
                Keybase).
            website:
              type: string
              description: website defines an optional website link.
            security_contact:
              type: string
              description: security_contact defines an optional email for security contact.
            details:
              type: string
              description: details define other optional details.
        unbonding_height:
          type: string
          format: int64
          description: unbonding_height defines, if unbonding, the height at which this
            validator has begun unbonding.
        unbonding_time:
          type: string
          format: date-time
          description: unbonding_time defines, if unbonding, the min time for the
            validator to complete unbonding.
        commission:
          description: commission defines the commission parameters.
          type: object
          properties:
            commission_rates:
              description: commission_rates defines the initial commission rates to be used
                for creating a validator.
              type: object
              properties:
                rate:
                  type: string
                  description: rate is the commission rate charged to delegators, as a fraction.
                max_rate:
                  type: string
                  description: max_rate defines the maximum commission rate which validator can
                    ever charge, as a fraction.
                max_change_rate:
                  type: string
                  description: max_change_rate defines the maximum daily increase of the validator
                    commission, as a fraction.
            update_time:
              type: string
              format: date-time
              description: update_time is the last time the commission rate was changed.
        min_self_delegation:
          type: string
          description: min_self_delegation is the validator's self declared minimum self
            delegation.
      description: >-
        Validator defines a validator, together with the total amount of the

        Validator's bond shares and their exchange rate to coins. Slashing results in

        a decrease in the exchange rate, allowing correct calculation of future

        undelegations without iterating over delegators. When coins are delegated to

        this validator, the validator is credited with a delegation whose number of

        bond shares is based on the amount of coins delegated divided by the current

        exchange rate. Voting power can be calculated as total bonded shares

        multiplied by exchange rate.
    cosmos.base.v1beta1.DecCoin:
      type: object
      properties:
        denom:
          type: string
        amount:
          type: string
      description: |-
        DecCoin defines a token with a denomination and a decimal amount.

        NOTE: The amount field is an Dec which implements the custom method
        signatures required by gogoproto.
    cosmos.distribution.v1beta1.DelegationDelegatorReward:
      type: object
      properties:
        validator_address:
          type: string
        reward:
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              DecCoin defines a token with a denomination and a decimal amount.


              NOTE: The amount field is an Dec which implements the custom method

              signatures required by gogoproto.
      description: |-
        DelegationDelegatorReward represents the properties
        of a delegator's delegation reward.
    cosmos.distribution.v1beta1.Params:
      type: object
      properties:
        community_tax:
          type: string
        base_proposer_reward:
          type: string
        bonus_proposer_reward:
          type: string
        withdraw_addr_enabled:
          type: boolean
      description: Params defines the set of params for the distribution module.
    cosmos.distribution.v1beta1.QueryCommunityPoolResponse:
      type: object
      properties:
        pool:
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              DecCoin defines a token with a denomination and a decimal amount.


              NOTE: The amount field is an Dec which implements the custom method

              signatures required by gogoproto.
          description: pool defines community pool's coins.
      description: >-
        QueryCommunityPoolResponse is the response type for the
        Query/CommunityPool

        RPC method.
    cosmos.distribution.v1beta1.QueryDelegationRewardsResponse:
      type: object
      properties:
        rewards:
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              DecCoin defines a token with a denomination and a decimal amount.


              NOTE: The amount field is an Dec which implements the custom method

              signatures required by gogoproto.
          description: rewards defines the rewards accrued by a delegation.
      description: |-
        QueryDelegationRewardsResponse is the response type for the
        Query/DelegationRewards RPC method.
    cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse:
      type: object
      properties:
        rewards:
          type: array
          items:
            type: object
            properties:
              validator_address:
                type: string
              reward:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    DecCoin defines a token with a denomination and a decimal
                    amount.


                    NOTE: The amount field is an Dec which implements the custom method

                    signatures required by gogoproto.
            description: |-
              DelegationDelegatorReward represents the properties
              of a delegator's delegation reward.
          description: rewards defines all the rewards accrued by a delegator.
        total:
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              DecCoin defines a token with a denomination and a decimal amount.


              NOTE: The amount field is an Dec which implements the custom method

              signatures required by gogoproto.
          description: total defines the sum of all the rewards.
      description: |-
        QueryDelegationTotalRewardsResponse is the response type for the
        Query/DelegationTotalRewards RPC method.
    cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse:
      type: object
      properties:
        validators:
          type: array
          items:
            type: string
          description: validators defines the validators a delegator is delegating for.
      description: |-
        QueryDelegatorValidatorsResponse is the response type for the
        Query/DelegatorValidators RPC method.
    cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse:
      type: object
      properties:
        withdraw_address:
          type: string
          description: withdraw_address defines the delegator address to query for.
      description: |-
        QueryDelegatorWithdrawAddressResponse is the response type for the
        Query/DelegatorWithdrawAddress RPC method.
    cosmos.distribution.v1beta1.QueryParamsResponse:
      type: object
      properties:
        params:
          description: params defines the parameters of the module.
          type: object
          properties:
            community_tax:
              type: string
            base_proposer_reward:
              type: string
            bonus_proposer_reward:
              type: string
            withdraw_addr_enabled:
              type: boolean
      description: QueryParamsResponse is the response type for the Query/Params RPC method.
    cosmos.distribution.v1beta1.QueryValidatorCommissionResponse:
      type: object
      properties:
        commission:
          description: commission defines the commision the validator received.
          type: object
          properties:
            commission:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  DecCoin defines a token with a denomination and a decimal
                  amount.


                  NOTE: The amount field is an Dec which implements the custom method

                  signatures required by gogoproto.
      title: |-
        QueryValidatorCommissionResponse is the response type for the
        Query/ValidatorCommission RPC method
    cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse:
      type: object
      properties:
        rewards:
          type: object
          properties:
            rewards:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  DecCoin defines a token with a denomination and a decimal
                  amount.


                  NOTE: The amount field is an Dec which implements the custom method

                  signatures required by gogoproto.
          description: >-
            ValidatorOutstandingRewards represents outstanding (un-withdrawn)
            rewards

            for a validator inexpensive to track, allows simple sanity checks.
      description: |-
        QueryValidatorOutstandingRewardsResponse is the response type for the
        Query/ValidatorOutstandingRewards RPC method.
    cosmos.distribution.v1beta1.QueryValidatorSlashesResponse:
      type: object
      properties:
        slashes:
          type: array
          items:
            type: object
            properties:
              validator_period:
                type: string
                format: uint64
              fraction:
                type: string
            description: |-
              ValidatorSlashEvent represents a validator slash event.
              Height is implicit within the store key.
              This is needed to calculate appropriate amount of staking tokens
              for delegations which are withdrawn after a slash has occurred.
          description: slashes defines the slashes the validator received.
        pagination:
          description: pagination defines the pagination in the response.
          type: object
          properties:
            next_key:
              type: string
              format: byte
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
            total:
              type: string
              format: uint64
              title: >-
                total is total number of results available if
                PageRequest.count_total

                was set, its value is undefined otherwise
      description: |-
        QueryValidatorSlashesResponse is the response type for the
        Query/ValidatorSlashes RPC method.
    cosmos.distribution.v1beta1.ValidatorAccumulatedCommission:
      type: object
      properties:
        commission:
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              DecCoin defines a token with a denomination and a decimal amount.


              NOTE: The amount field is an Dec which implements the custom method

              signatures required by gogoproto.
      description: |-
        ValidatorAccumulatedCommission represents accumulated commission
        for a validator kept as a running counter, can be withdrawn at any time.
    cosmos.distribution.v1beta1.ValidatorOutstandingRewards:
      type: object
      properties:
        rewards:
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              DecCoin defines a token with a denomination and a decimal amount.


              NOTE: The amount field is an Dec which implements the custom method

              signatures required by gogoproto.
      description: >-
        ValidatorOutstandingRewards represents outstanding (un-withdrawn)
        rewards

        for a validator inexpensive to track, allows simple sanity checks.
    cosmos.distribution.v1beta1.ValidatorSlashEvent:
      type: object
      properties:
        validator_period:
          type: string
          format: uint64
        fraction:
          type: string
      description: |-
        ValidatorSlashEvent represents a validator slash event.
        Height is implicit within the store key.
        This is needed to calculate appropriate amount of staking tokens
        for delegations which are withdrawn after a slash has occurred.
    cosmos.feegrant.v1beta1.Grant:
      type: object
      properties:
        granter:
          type: string
          description: granter is the address of the user granting an allowance of their
            funds.
        grantee:
          type: string
          description: grantee is the address of the user being granted an allowance of
            another user's funds.
        allowance:
          type: object
          properties:
            type_url:
              type: string
            value:
              type: string
              format: byte
          description: allowance can be any of basic and filtered fee allowance.
      title: Grant is stored in the KVStore to record a grant with full context
    cosmos.feegrant.v1beta1.QueryAllowanceResponse:
      type: object
      properties:
        allowance:
          description: allowance is a allowance granted for grantee by granter.
          type: object
          properties:
            granter:
              type: string
              description: granter is the address of the user granting an allowance of their
                funds.
            grantee:
              type: string
              description: grantee is the address of the user being granted an allowance of
                another user's funds.
            allowance:
              type: object
              properties:
                type_url:
                  type: string
                value:
                  type: string
                  format: byte
              description: allowance can be any of basic and filtered fee allowance.
          title: Grant is stored in the KVStore to record a grant with full context
      description: QueryAllowanceResponse is the response type for the Query/Allowance
        RPC method.
    cosmos.feegrant.v1beta1.QueryAllowancesByGranterResponse:
      type: object
      properties:
        allowances:
          type: array
          items:
            type: object
            properties:
              granter:
                type: string
                description: granter is the address of the user granting an allowance of their
                  funds.
              grantee:
                type: string
                description: grantee is the address of the user being granted an allowance of
                  another user's funds.
              allowance:
                type: object
                properties:
                  type_url:
                    type: string
                  value:
                    type: string
                    format: byte
                description: allowance can be any of basic and filtered fee allowance.
            title: Grant is stored in the KVStore to record a grant with full context
          description: allowances that have been issued by the granter.
        pagination:
          description: pagination defines an pagination for the response.
          type: object
          properties:
            next_key:
              type: string
              format: byte
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
            total:
              type: string
              format: uint64
              title: >-
                total is total number of results available if
                PageRequest.count_total

                was set, its value is undefined otherwise
      description: QueryAllowancesByGranterResponse is the response type for the
        Query/AllowancesByGranter RPC method.
    cosmos.feegrant.v1beta1.QueryAllowancesResponse:
      type: object
      properties:
        allowances:
          type: array
          items:
            type: object
            properties:
              granter:
                type: string
                description: granter is the address of the user granting an allowance of their
                  funds.
              grantee:
                type: string
                description: grantee is the address of the user being granted an allowance of
                  another user's funds.
              allowance:
                type: object
                properties:
                  type_url:
                    type: string
                  value:
                    type: string
                    format: byte
                description: allowance can be any of basic and filtered fee allowance.
            title: Grant is stored in the KVStore to record a grant with full context
          description: allowances are allowance's granted for grantee by granter.
        pagination:
          description: pagination defines an pagination for the response.
          type: object
          properties:
            next_key:
              type: string
              format: byte
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
            total:
              type: string
              format: uint64
              title: >-
                total is total number of results available if
                PageRequest.count_total

                was set, its value is undefined otherwise
      description: QueryAllowancesResponse is the response type for the
        Query/Allowances RPC method.
    OmniFlix.onft.v1beta1.Collection:
      type: object
      properties:
        denom:
          type: object
          properties:
            id:
              type: string
            symbol:
              type: string
            name:
              type: string
            schema:
              type: string
            creator:
              type: string
            description:
              type: string
            preview_uri:
              type: string
        onfts:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              metadata:
                type: object
                properties:
                  name:
                    type: string
                  description:
                    type: string
                  media_uri:
                    type: string
                  preview_uri:
                    type: string
              data:
                type: string
              owner:
                type: string
              transferable:
                type: boolean
              extensible:
                type: boolean
              created_at:
                type: string
                format: date-time
              nsfw:
                type: boolean
              royalty_share:
                type: string
            title: ASSET or ONFT
      title: Collection
    OmniFlix.onft.v1beta1.Denom:
      type: object
      properties:
        id:
          type: string
        symbol:
          type: string
        name:
          type: string
        schema:
          type: string
        creator:
          type: string
        description:
          type: string
        preview_uri:
          type: string
    OmniFlix.onft.v1beta1.Metadata:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        media_uri:
          type: string
        preview_uri:
          type: string
    OmniFlix.onft.v1beta1.ONFT:
      type: object
      properties:
        id:
          type: string
        metadata:
          type: object
          properties:
            name:
              type: string
            description:
              type: string
            media_uri:
              type: string
            preview_uri:
              type: string
        data:
          type: string
        owner:
          type: string
        transferable:
          type: boolean
        extensible:
          type: boolean
        created_at:
          type: string
          format: date-time
        nsfw:
          type: boolean
        royalty_share:
          type: string
      title: ASSET or ONFT
    OmniFlix.onft.v1beta1.OwnerONFTCollection:
      type: object
      properties:
        denom:
          type: object
          properties:
            id:
              type: string
            symbol:
              type: string
            name:
              type: string
            schema:
              type: string
            creator:
              type: string
            description:
              type: string
            preview_uri:
              type: string
        onfts:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              metadata:
                type: object
                properties:
                  name:
                    type: string
                  description:
                    type: string
                  media_uri:
                    type: string
                  preview_uri:
                    type: string
              data:
                type: string
              owner:
                type: string
              transferable:
                type: boolean
              extensible:
                type: boolean
              created_at:
                type: string
                format: date-time
              nsfw:
                type: boolean
              royalty_share:
                type: string
            title: ASSET or ONFT
    OmniFlix.onft.v1beta1.Params:
      type: object
      properties:
        denom_creation_fee:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
    OmniFlix.onft.v1beta1.QueryCollectionResponse:
      type: object
      properties:
        collection:
          type: object
          properties:
            denom:
              type: object
              properties:
                id:
                  type: string
                symbol:
                  type: string
                name:
                  type: string
                schema:
                  type: string
                creator:
                  type: string
                description:
                  type: string
                preview_uri:
                  type: string
            onfts:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                  metadata:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      media_uri:
                        type: string
                      preview_uri:
                        type: string
                  data:
                    type: string
                  owner:
                    type: string
                  transferable:
                    type: boolean
                  extensible:
                    type: boolean
                  created_at:
                    type: string
                    format: date-time
                  nsfw:
                    type: boolean
                  royalty_share:
                    type: string
                title: ASSET or ONFT
          title: Collection
        pagination:
          type: object
          properties:
            next_key:
              type: string
              format: byte
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
            total:
              type: string
              format: uint64
              title: >-
                total is total number of results available if
                PageRequest.count_total

                was set, its value is undefined otherwise
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
    OmniFlix.onft.v1beta1.QueryDenomResponse:
      type: object
      properties:
        denom:
          type: object
          properties:
            id:
              type: string
            symbol:
              type: string
            name:
              type: string
            schema:
              type: string
            creator:
              type: string
            description:
              type: string
            preview_uri:
              type: string
    OmniFlix.onft.v1beta1.QueryDenomsResponse:
      type: object
      properties:
        denoms:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              symbol:
                type: string
              name:
                type: string
              schema:
                type: string
              creator:
                type: string
              description:
                type: string
              preview_uri:
                type: string
        pagination:
          type: object
          properties:
            next_key:
              type: string
              format: byte
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
            total:
              type: string
              format: uint64
              title: >-
                total is total number of results available if
                PageRequest.count_total

                was set, its value is undefined otherwise
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
    OmniFlix.onft.v1beta1.QueryONFTResponse:
      type: object
      properties:
        onft:
          type: object
          properties:
            id:
              type: string
            metadata:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                media_uri:
                  type: string
                preview_uri:
                  type: string
            data:
              type: string
            owner:
              type: string
            transferable:
              type: boolean
            extensible:
              type: boolean
            created_at:
              type: string
              format: date-time
            nsfw:
              type: boolean
            royalty_share:
              type: string
          title: ASSET or ONFT
    OmniFlix.onft.v1beta1.QueryOwnerONFTsResponse:
      type: object
      properties:
        owner:
          type: string
        collections:
          type: array
          items:
            type: object
            properties:
              denom:
                type: object
                properties:
                  id:
                    type: string
                  symbol:
                    type: string
                  name:
                    type: string
                  schema:
                    type: string
                  creator:
                    type: string
                  description:
                    type: string
                  preview_uri:
                    type: string
              onfts:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    metadata:
                      type: object
                      properties:
                        name:
                          type: string
                        description:
                          type: string
                        media_uri:
                          type: string
                        preview_uri:
                          type: string
                    data:
                      type: string
                    owner:
                      type: string
                    transferable:
                      type: boolean
                    extensible:
                      type: boolean
                    created_at:
                      type: string
                      format: date-time
                    nsfw:
                      type: boolean
                    royalty_share:
                      type: string
                  title: ASSET or ONFT
        pagination:
          type: object
          properties:
            next_key:
              type: string
              format: byte
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
            total:
              type: string
              format: uint64
              title: >-
                total is total number of results available if
                PageRequest.count_total

                was set, its value is undefined otherwise
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
    OmniFlix.onft.v1beta1.QueryParamsResponse:
      type: object
      properties:
        params:
          description: params defines the parameters of the module.
          type: object
          properties:
            denom_creation_fee:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom method

                signatures required by gogoproto.
      description: QueryParamsResponse is the response type for the Query/Params RPC method.
    OmniFlix.onft.v1beta1.QuerySupplyResponse:
      type: object
      properties:
        amount:
          type: string
          format: uint64
    cosmos.gov.v1beta1.Deposit:
      type: object
      properties:
        proposal_id:
          type: string
          format: uint64
        depositor:
          type: string
        amount:
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom method

              signatures required by gogoproto.
      description: |-
        Deposit defines an amount deposited by an account address to an active
        proposal.
    cosmos.gov.v1beta1.DepositParams:
      type: object
      properties:
        min_deposit:
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom method

              signatures required by gogoproto.
          description: Minimum deposit for a proposal to enter voting period.
        max_deposit_period:
          type: string
          description: >-
            Maximum period for Atom holders to deposit on a proposal. Initial
            value: 2
             months.
      description: DepositParams defines the params for deposits on governance proposals.
    cosmos.gov.v1beta1.Proposal:
      type: object
      properties:
        proposal_id:
          type: string
          format: uint64
        content:
          type: object
          properties:
            type_url:
              type: string
            value:
              type: string
              format: byte
        status:
          type: string
          enum:
            - PROPOSAL_STATUS_UNSPECIFIED
            - PROPOSAL_STATUS_DEPOSIT_PERIOD
            - PROPOSAL_STATUS_VOTING_PERIOD
            - PROPOSAL_STATUS_PASSED
            - PROPOSAL_STATUS_REJECTED
            - PROPOSAL_STATUS_FAILED
          default: PROPOSAL_STATUS_UNSPECIFIED
          description: >-
            ProposalStatus enumerates the valid statuses of a proposal.

             - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.
             - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
            period.
             - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
            period.
             - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
            passed.
             - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
            been rejected.
             - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
            failed.
        final_tally_result:
          type: object
          properties:
            yes:
              type: string
            abstain:
              type: string
            no:
              type: string
            no_with_veto:
              type: string
          description: TallyResult defines a standard tally for a governance proposal.
        submit_time:
          type: string
          format: date-time
        deposit_end_time:
          type: string
          format: date-time
        total_deposit:
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom method

              signatures required by gogoproto.
        voting_start_time:
          type: string
          format: date-time
        voting_end_time:
          type: string
          format: date-time
      description: Proposal defines the core field members of a governance proposal.
    cosmos.gov.v1beta1.ProposalStatus:
      type: string
      enum:
        - PROPOSAL_STATUS_UNSPECIFIED
        - PROPOSAL_STATUS_DEPOSIT_PERIOD
        - PROPOSAL_STATUS_VOTING_PERIOD
        - PROPOSAL_STATUS_PASSED
        - PROPOSAL_STATUS_REJECTED
        - PROPOSAL_STATUS_FAILED
      default: PROPOSAL_STATUS_UNSPECIFIED
      description: >-
        ProposalStatus enumerates the valid statuses of a proposal.

         - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.
         - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
        period.
         - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
        period.
         - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
        passed.
         - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
        been rejected.
         - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
        failed.
    cosmos.gov.v1beta1.QueryDepositResponse:
      type: object
      properties:
        deposit:
          type: object
          properties:
            proposal_id:
              type: string
              format: uint64
            depositor:
              type: string
            amount:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.
          description: >-
            Deposit defines an amount deposited by an account address to an
            active

            proposal.
      description: QueryDepositResponse is the response type for the Query/Deposit RPC
        method.
    cosmos.gov.v1beta1.QueryDepositsResponse:
      type: object
      properties:
        deposits:
          type: array
          items:
            type: object
            properties:
              proposal_id:
                type: string
                format: uint64
              depositor:
                type: string
              amount:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom method

                    signatures required by gogoproto.
            description: >-
              Deposit defines an amount deposited by an account address to an
              active

              proposal.
        pagination:
          type: object
          properties:
            next_key:
              type: string
              format: byte
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
            total:
              type: string
              format: uint64
              title: >-
                total is total number of results available if
                PageRequest.count_total

                was set, its value is undefined otherwise
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
      description: QueryDepositsResponse is the response type for the Query/Deposits
        RPC method.
    cosmos.gov.v1beta1.QueryParamsResponse:
      type: object
      properties:
        voting_params:
          description: voting_params defines the parameters related to voting.
          type: object
          properties:
            voting_period:
              type: string
              description: Length of the voting period.
        deposit_params:
          description: deposit_params defines the parameters related to deposit.
          type: object
          properties:
            min_deposit:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.
              description: Minimum deposit for a proposal to enter voting period.
            max_deposit_period:
              type: string
              description: >-
                Maximum period for Atom holders to deposit on a proposal.
                Initial value: 2
                 months.
        tally_params:
          description: tally_params defines the parameters related to tally.
          type: object
          properties:
            quorum:
              type: string
              format: byte
              description: >-
                Minimum percentage of total stake needed to vote for a result to
                be
                 considered valid.
            threshold:
              type: string
              format: byte
              description: "Minimum proportion of Yes votes for proposal to pass. Default
                value: 0.5."
            veto_threshold:
              type: string
              format: byte
              description: >-
                Minimum value of Veto votes to Total votes ratio for proposal to
                be
                 vetoed. Default value: 1/3.
      description: QueryParamsResponse is the response type for the Query/Params RPC method.
    cosmos.gov.v1beta1.QueryProposalResponse:
      type: object
      properties:
        proposal:
          type: object
          properties:
            proposal_id:
              type: string
              format: uint64
            content:
              type: object
              properties:
                type_url:
                  type: string
                value:
                  type: string
                  format: byte
            status:
              type: string
              enum:
                - PROPOSAL_STATUS_UNSPECIFIED
                - PROPOSAL_STATUS_DEPOSIT_PERIOD
                - PROPOSAL_STATUS_VOTING_PERIOD
                - PROPOSAL_STATUS_PASSED
                - PROPOSAL_STATUS_REJECTED
                - PROPOSAL_STATUS_FAILED
              default: PROPOSAL_STATUS_UNSPECIFIED
              description: >-
                ProposalStatus enumerates the valid statuses of a proposal.

                 - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.
                 - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
                period.
                 - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
                period.
                 - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
                passed.
                 - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
                been rejected.
                 - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
                failed.
            final_tally_result:
              type: object
              properties:
                yes:
                  type: string
                abstain:
                  type: string
                no:
                  type: string
                no_with_veto:
                  type: string
              description: TallyResult defines a standard tally for a governance proposal.
            submit_time:
              type: string
              format: date-time
            deposit_end_time:
              type: string
              format: date-time
            total_deposit:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.
            voting_start_time:
              type: string
              format: date-time
            voting_end_time:
              type: string
              format: date-time
          description: Proposal defines the core field members of a governance proposal.
      description: QueryProposalResponse is the response type for the Query/Proposal
        RPC method.
    cosmos.gov.v1beta1.QueryProposalsResponse:
      type: object
      properties:
        proposals:
          type: array
          items:
            type: object
            properties:
              proposal_id:
                type: string
                format: uint64
              content:
                type: object
                properties:
                  type_url:
                    type: string
                  value:
                    type: string
                    format: byte
              status:
                type: string
                enum:
                  - PROPOSAL_STATUS_UNSPECIFIED
                  - PROPOSAL_STATUS_DEPOSIT_PERIOD
                  - PROPOSAL_STATUS_VOTING_PERIOD
                  - PROPOSAL_STATUS_PASSED
                  - PROPOSAL_STATUS_REJECTED
                  - PROPOSAL_STATUS_FAILED
                default: PROPOSAL_STATUS_UNSPECIFIED
                description: >-
                  ProposalStatus enumerates the valid statuses of a proposal.

                   - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.
                   - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
                  period.
                   - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
                  period.
                   - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
                  passed.
                   - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
                  been rejected.
                   - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
                  failed.
              final_tally_result:
                type: object
                properties:
                  yes:
                    type: string
                  abstain:
                    type: string
                  no:
                    type: string
                  no_with_veto:
                    type: string
                description: TallyResult defines a standard tally for a governance proposal.
              submit_time:
                type: string
                format: date-time
              deposit_end_time:
                type: string
                format: date-time
              total_deposit:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom method

                    signatures required by gogoproto.
              voting_start_time:
                type: string
                format: date-time
              voting_end_time:
                type: string
                format: date-time
            description: Proposal defines the core field members of a governance proposal.
        pagination:
          type: object
          properties:
            next_key:
              type: string
              format: byte
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
            total:
              type: string
              format: uint64
              title: >-
                total is total number of results available if
                PageRequest.count_total

                was set, its value is undefined otherwise
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
      description: |-
        QueryProposalsResponse is the response type for the Query/Proposals RPC
        method.
    cosmos.gov.v1beta1.QueryTallyResultResponse:
      type: object
      properties:
        tally:
          type: object
          properties:
            yes:
              type: string
            abstain:
              type: string
            no:
              type: string
            no_with_veto:
              type: string
          description: TallyResult defines a standard tally for a governance proposal.
      description: QueryTallyResultResponse is the response type for the Query/Tally
        RPC method.
    cosmos.gov.v1beta1.QueryVoteResponse:
      type: object
      properties:
        vote:
          type: object
          properties:
            proposal_id:
              type: string
              format: uint64
            voter:
              type: string
            option:
              description: >-
                Deprecated: Prefer to use `options` instead. This field is set
                in queries

                if and only if `len(options) == 1` and that option has weight 1. In all

                other cases, this field will default to VOTE_OPTION_UNSPECIFIED.
              type: string
              enum:
                - VOTE_OPTION_UNSPECIFIED
                - VOTE_OPTION_YES
                - VOTE_OPTION_ABSTAIN
                - VOTE_OPTION_NO
                - VOTE_OPTION_NO_WITH_VETO
              default: VOTE_OPTION_UNSPECIFIED
            options:
              type: array
              items:
                type: object
                properties:
                  option:
                    type: string
                    enum:
                      - VOTE_OPTION_UNSPECIFIED
                      - VOTE_OPTION_YES
                      - VOTE_OPTION_ABSTAIN
                      - VOTE_OPTION_NO
                      - VOTE_OPTION_NO_WITH_VETO
                    default: VOTE_OPTION_UNSPECIFIED
                    description: >-
                      VoteOption enumerates the valid vote options for a given
                      governance proposal.

                       - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.
                       - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.
                       - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.
                       - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.
                       - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
                  weight:
                    type: string
                description: |-
                  WeightedVoteOption defines a unit of vote for vote split.

                  Since: cosmos-sdk 0.43
              title: "Since: cosmos-sdk 0.43"
          description: |-
            Vote defines a vote on a governance proposal.
            A Vote consists of a proposal ID, the voter, and the vote option.
      description: QueryVoteResponse is the response type for the Query/Vote RPC method.
    cosmos.gov.v1beta1.QueryVotesResponse:
      type: object
      properties:
        votes:
          type: array
          items:
            type: object
            properties:
              proposal_id:
                type: string
                format: uint64
              voter:
                type: string
              option:
                description: >-
                  Deprecated: Prefer to use `options` instead. This field is set
                  in queries

                  if and only if `len(options) == 1` and that option has weight 1. In all

                  other cases, this field will default to VOTE_OPTION_UNSPECIFIED.
                type: string
                enum:
                  - VOTE_OPTION_UNSPECIFIED
                  - VOTE_OPTION_YES
                  - VOTE_OPTION_ABSTAIN
                  - VOTE_OPTION_NO
                  - VOTE_OPTION_NO_WITH_VETO
                default: VOTE_OPTION_UNSPECIFIED
              options:
                type: array
                items:
                  type: object
                  properties:
                    option:
                      type: string
                      enum:
                        - VOTE_OPTION_UNSPECIFIED
                        - VOTE_OPTION_YES
                        - VOTE_OPTION_ABSTAIN
                        - VOTE_OPTION_NO
                        - VOTE_OPTION_NO_WITH_VETO
                      default: VOTE_OPTION_UNSPECIFIED
                      description: >-
                        VoteOption enumerates the valid vote options for a given
                        governance proposal.

                         - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.
                         - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.
                         - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.
                         - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.
                         - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
                    weight:
                      type: string
                  description: |-
                    WeightedVoteOption defines a unit of vote for vote split.

                    Since: cosmos-sdk 0.43
                title: "Since: cosmos-sdk 0.43"
            description: |-
              Vote defines a vote on a governance proposal.
              A Vote consists of a proposal ID, the voter, and the vote option.
          description: votes defined the queried votes.
        pagination:
          type: object
          properties:
            next_key:
              type: string
              format: byte
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
            total:
              type: string
              format: uint64
              title: >-
                total is total number of results available if
                PageRequest.count_total

                was set, its value is undefined otherwise
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
      description: QueryVotesResponse is the response type for the Query/Votes RPC method.
    cosmos.gov.v1beta1.TallyParams:
      type: object
      properties:
        quorum:
          type: string
          format: byte
          description: |-
            Minimum percentage of total stake needed to vote for a result to be
             considered valid.
        threshold:
          type: string
          format: byte
          description: "Minimum proportion of Yes votes for proposal to pass. Default
            value: 0.5."
        veto_threshold:
          type: string
          format: byte
          description: |-
            Minimum value of Veto votes to Total votes ratio for proposal to be
             vetoed. Default value: 1/3.
      description: TallyParams defines the params for tallying votes on governance
        proposals.
    cosmos.gov.v1beta1.TallyResult:
      type: object
      properties:
        yes:
          type: string
        abstain:
          type: string
        no:
          type: string
        no_with_veto:
          type: string
      description: TallyResult defines a standard tally for a governance proposal.
    cosmos.gov.v1beta1.Vote:
      type: object
      properties:
        proposal_id:
          type: string
          format: uint64
        voter:
          type: string
        option:
          description: >-
            Deprecated: Prefer to use `options` instead. This field is set in
            queries

            if and only if `len(options) == 1` and that option has weight 1. In all

            other cases, this field will default to VOTE_OPTION_UNSPECIFIED.
          type: string
          enum:
            - VOTE_OPTION_UNSPECIFIED
            - VOTE_OPTION_YES
            - VOTE_OPTION_ABSTAIN
            - VOTE_OPTION_NO
            - VOTE_OPTION_NO_WITH_VETO
          default: VOTE_OPTION_UNSPECIFIED
        options:
          type: array
          items:
            type: object
            properties:
              option:
                type: string
                enum:
                  - VOTE_OPTION_UNSPECIFIED
                  - VOTE_OPTION_YES
                  - VOTE_OPTION_ABSTAIN
                  - VOTE_OPTION_NO
                  - VOTE_OPTION_NO_WITH_VETO
                default: VOTE_OPTION_UNSPECIFIED
                description: >-
                  VoteOption enumerates the valid vote options for a given
                  governance proposal.

                   - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.
                   - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.
                   - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.
                   - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.
                   - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
              weight:
                type: string
            description: |-
              WeightedVoteOption defines a unit of vote for vote split.

              Since: cosmos-sdk 0.43
          title: "Since: cosmos-sdk 0.43"
      description: |-
        Vote defines a vote on a governance proposal.
        A Vote consists of a proposal ID, the voter, and the vote option.
    cosmos.gov.v1beta1.VoteOption:
      type: string
      enum:
        - VOTE_OPTION_UNSPECIFIED
        - VOTE_OPTION_YES
        - VOTE_OPTION_ABSTAIN
        - VOTE_OPTION_NO
        - VOTE_OPTION_NO_WITH_VETO
      default: VOTE_OPTION_UNSPECIFIED
      description: >-
        VoteOption enumerates the valid vote options for a given governance
        proposal.

         - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.
         - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.
         - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.
         - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.
         - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
    cosmos.gov.v1beta1.VotingParams:
      type: object
      properties:
        voting_period:
          type: string
          description: Length of the voting period.
      description: VotingParams defines the params for voting on governance proposals.
    cosmos.gov.v1beta1.WeightedVoteOption:
      type: object
      properties:
        option:
          type: string
          enum:
            - VOTE_OPTION_UNSPECIFIED
            - VOTE_OPTION_YES
            - VOTE_OPTION_ABSTAIN
            - VOTE_OPTION_NO
            - VOTE_OPTION_NO_WITH_VETO
          default: VOTE_OPTION_UNSPECIFIED
          description: >-
            VoteOption enumerates the valid vote options for a given governance
            proposal.

             - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.
             - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.
             - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.
             - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.
             - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
        weight:
          type: string
      description: |-
        WeightedVoteOption defines a unit of vote for vote split.

        Since: cosmos-sdk 0.43
    OmniFlix.marketplace.v1beta1.AuctionListing:
      type: object
      properties:
        id:
          type: string
          format: uint64
        nft_id:
          type: string
        denom_id:
          type: string
        start_price:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        owner:
          type: string
        increment_percentage:
          type: string
        whitelist_accounts:
          type: array
          items:
            type: string
        split_shares:
          type: array
          items:
            type: object
            properties:
              address:
                type: string
              weight:
                type: string
    OmniFlix.marketplace.v1beta1.AuctionStatus:
      type: string
      enum:
        - AUCTION_STATUS_UNSPECIFIED
        - AUCTION_STATUS_INACTIVE
        - AUCTION_STATUS_ACTIVE
      default: AUCTION_STATUS_UNSPECIFIED
    OmniFlix.marketplace.v1beta1.Bid:
      type: object
      properties:
        auction_id:
          type: string
          format: uint64
        bidder:
          type: string
        amount:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        time:
          type: string
          format: date-time
    OmniFlix.marketplace.v1beta1.Distribution:
      type: object
      properties:
        staking:
          type: string
        community_pool:
          type: string
    OmniFlix.marketplace.v1beta1.Listing:
      type: object
      properties:
        id:
          type: string
        nft_id:
          type: string
        denom_id:
          type: string
        price:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        owner:
          type: string
        split_shares:
          type: array
          items:
            type: object
            properties:
              address:
                type: string
              weight:
                type: string
    OmniFlix.marketplace.v1beta1.Params:
      type: object
      properties:
        sale_commission:
          type: string
        distribution:
          type: object
          properties:
            staking:
              type: string
            community_pool:
              type: string
        bid_close_duration:
          type: string
    OmniFlix.marketplace.v1beta1.QueryAuctionResponse:
      type: object
      properties:
        auction:
          type: object
          properties:
            id:
              type: string
              format: uint64
            nft_id:
              type: string
            denom_id:
              type: string
            start_price:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom method

                signatures required by gogoproto.
            start_time:
              type: string
              format: date-time
            end_time:
              type: string
              format: date-time
            owner:
              type: string
            increment_percentage:
              type: string
            whitelist_accounts:
              type: array
              items:
                type: string
            split_shares:
              type: array
              items:
                type: object
                properties:
                  address:
                    type: string
                  weight:
                    type: string
    OmniFlix.marketplace.v1beta1.QueryAuctionsResponse:
      type: object
      properties:
        auctions:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uint64
              nft_id:
                type: string
              denom_id:
                type: string
              start_price:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.
              start_time:
                type: string
                format: date-time
              end_time:
                type: string
                format: date-time
              owner:
                type: string
              increment_percentage:
                type: string
              whitelist_accounts:
                type: array
                items:
                  type: string
              split_shares:
                type: array
                items:
                  type: object
                  properties:
                    address:
                      type: string
                    weight:
                      type: string
        pagination:
          type: object
          properties:
            next_key:
              type: string
              format: byte
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
            total:
              type: string
              format: uint64
              title: >-
                total is total number of results available if
                PageRequest.count_total

                was set, its value is undefined otherwise
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
    OmniFlix.marketplace.v1beta1.QueryBidResponse:
      type: object
      properties:
        bid:
          type: object
          properties:
            auction_id:
              type: string
              format: uint64
            bidder:
              type: string
            amount:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom method

                signatures required by gogoproto.
            time:
              type: string
              format: date-time
    OmniFlix.marketplace.v1beta1.QueryBidsResponse:
      type: object
      properties:
        bids:
          type: array
          items:
            type: object
            properties:
              auction_id:
                type: string
                format: uint64
              bidder:
                type: string
              amount:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.
              time:
                type: string
                format: date-time
        pagination:
          type: object
          properties:
            next_key:
              type: string
              format: byte
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
            total:
              type: string
              format: uint64
              title: >-
                total is total number of results available if
                PageRequest.count_total

                was set, its value is undefined otherwise
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
    OmniFlix.marketplace.v1beta1.QueryListingResponse:
      type: object
      properties:
        listing:
          type: object
          properties:
            id:
              type: string
            nft_id:
              type: string
            denom_id:
              type: string
            price:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom method

                signatures required by gogoproto.
            owner:
              type: string
            split_shares:
              type: array
              items:
                type: object
                properties:
                  address:
                    type: string
                  weight:
                    type: string
    OmniFlix.marketplace.v1beta1.QueryListingsByOwnerResponse:
      type: object
      properties:
        listings:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              nft_id:
                type: string
              denom_id:
                type: string
              price:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.
              owner:
                type: string
              split_shares:
                type: array
                items:
                  type: object
                  properties:
                    address:
                      type: string
                    weight:
                      type: string
        pagination:
          type: object
          properties:
            next_key:
              type: string
              format: byte
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
            total:
              type: string
              format: uint64
              title: >-
                total is total number of results available if
                PageRequest.count_total

                was set, its value is undefined otherwise
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
    OmniFlix.marketplace.v1beta1.QueryListingsByPriceDenomResponse:
      type: object
      properties:
        listings:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              nft_id:
                type: string
              denom_id:
                type: string
              price:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.
              owner:
                type: string
              split_shares:
                type: array
                items:
                  type: object
                  properties:
                    address:
                      type: string
                    weight:
                      type: string
        pagination:
          type: object
          properties:
            next_key:
              type: string
              format: byte
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
            total:
              type: string
              format: uint64
              title: >-
                total is total number of results available if
                PageRequest.count_total

                was set, its value is undefined otherwise
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
    OmniFlix.marketplace.v1beta1.QueryListingsResponse:
      type: object
      properties:
        listings:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              nft_id:
                type: string
              denom_id:
                type: string
              price:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.
              owner:
                type: string
              split_shares:
                type: array
                items:
                  type: object
                  properties:
                    address:
                      type: string
                    weight:
                      type: string
        pagination:
          type: object
          properties:
            next_key:
              type: string
              format: byte
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
            total:
              type: string
              format: uint64
              title: >-
                total is total number of results available if
                PageRequest.count_total

                was set, its value is undefined otherwise
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
    OmniFlix.marketplace.v1beta1.QueryParamsResponse:
      type: object
      properties:
        params:
          description: params defines the parameters of the module.
          type: object
          properties:
            sale_commission:
              type: string
            distribution:
              type: object
              properties:
                staking:
                  type: string
                community_pool:
                  type: string
            bid_close_duration:
              type: string
      description: QueryParamsResponse is the response type for the Query/Params RPC method.
    OmniFlix.marketplace.v1beta1.WeightedAddress:
      type: object
      properties:
        address:
          type: string
        weight:
          type: string
    cosmos.upgrade.v1beta1.ModuleVersion:
      type: object
      properties:
        name:
          type: string
          title: name of the app module
        version:
          type: string
          format: uint64
          title: consensus version of the app module
      description: |-
        ModuleVersion specifies a module and its consensus version.

        Since: cosmos-sdk 0.43
    cosmos.upgrade.v1beta1.Plan:
      type: object
      properties:
        name:
          type: string
          description: >-
            Sets the name for the upgrade. This name will be used by the
            upgraded

            version of the software to apply any special "on-upgrade" commands during

            the first BeginBlock method after the upgrade is applied. It is also used

            to detect whether a software version can handle a given upgrade. If no

            upgrade handler with this name has been set in the software, it will be

            assumed that the software is out-of-date when the upgrade Time or Height is

            reached and the software will exit.
        time:
          type: string
          format: date-time
          description: >-
            Deprecated: Time based upgrades have been deprecated. Time based
            upgrade logic

            has been removed from the SDK.

            If this field is not empty, an error will be thrown.
        height:
          type: string
          format: int64
          description: |-
            The height at which the upgrade must be performed.
            Only used if Time is not set.
        info:
          type: string
          title: |-
            Any application specific upgrade info to be included on-chain
            such as a git commit that validators could automatically upgrade to
        upgraded_client_state:
          type: object
          properties:
            type_url:
              type: string
            value:
              type: string
              format: byte
          description: >-
            Deprecated: UpgradedClientState field has been deprecated. IBC
            upgrade logic has been

            moved to the IBC module in the sub module 02-client.

            If this field is not empty, an error will be thrown.
      description: Plan specifies information about a planned upgrade and when it
        should occur.
    cosmos.upgrade.v1beta1.QueryAppliedPlanResponse:
      type: object
      properties:
        height:
          type: string
          format: int64
          description: height is the block height at which the plan was applied.
      description: >-
        QueryAppliedPlanResponse is the response type for the Query/AppliedPlan
        RPC

        method.
    cosmos.upgrade.v1beta1.QueryCurrentPlanResponse:
      type: object
      properties:
        plan:
          description: plan is the current upgrade plan.
          type: object
          properties:
            name:
              type: string
              description: >-
                Sets the name for the upgrade. This name will be used by the
                upgraded

                version of the software to apply any special "on-upgrade" commands during

                the first BeginBlock method after the upgrade is applied. It is also used

                to detect whether a software version can handle a given upgrade. If no

                upgrade handler with this name has been set in the software, it will be

                assumed that the software is out-of-date when the upgrade Time or Height is

                reached and the software will exit.
            time:
              type: string
              format: date-time
              description: >-
                Deprecated: Time based upgrades have been deprecated. Time based
                upgrade logic

                has been removed from the SDK.

                If this field is not empty, an error will be thrown.
            height:
              type: string
              format: int64
              description: |-
                The height at which the upgrade must be performed.
                Only used if Time is not set.
            info:
              type: string
              title: >-
                Any application specific upgrade info to be included on-chain

                such as a git commit that validators could automatically upgrade to
            upgraded_client_state:
              type: object
              properties:
                type_url:
                  type: string
                value:
                  type: string
                  format: byte
              description: >-
                Deprecated: UpgradedClientState field has been deprecated. IBC
                upgrade logic has been

                moved to the IBC module in the sub module 02-client.

                If this field is not empty, an error will be thrown.
      description: >-
        QueryCurrentPlanResponse is the response type for the Query/CurrentPlan
        RPC

        method.
    cosmos.upgrade.v1beta1.QueryModuleVersionsResponse:
      type: object
      properties:
        module_versions:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                title: name of the app module
              version:
                type: string
                format: uint64
                title: consensus version of the app module
            description: |-
              ModuleVersion specifies a module and its consensus version.

              Since: cosmos-sdk 0.43
          description: module_versions is a list of module names with their consensus
            versions.
      description: >-
        QueryModuleVersionsResponse is the response type for the
        Query/ModuleVersions

        RPC method.


        Since: cosmos-sdk 0.43
    cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse:
      type: object
      properties:
        upgraded_consensus_state:
          type: string
          format: byte
          title: "Since: cosmos-sdk 0.43"
      description: >-
        QueryUpgradedConsensusStateResponse is the response type for the
        Query/UpgradedConsensusState

        RPC method.
    omniflix.alloc.v1beta1.DistributionProportions:
      type: object
      properties:
        staking_rewards:
          type: string
        nft_incentives:
          type: string
        node_hosts_incentives:
          type: string
        developer_rewards:
          type: string
        community_pool:
          type: string
    omniflix.alloc.v1beta1.Params:
      type: object
      properties:
        distribution_proportions:
          title: distribution_proportions defines the proportion of the minted denom
          type: object
          properties:
            staking_rewards:
              type: string
            nft_incentives:
              type: string
            node_hosts_incentives:
              type: string
            developer_rewards:
              type: string
            community_pool:
              type: string
        weighted_developer_rewards_receivers:
          type: array
          items:
            type: object
            properties:
              address:
                type: string
              weight:
                type: string
          title: address to receive developer rewards
        weighted_nft_incentives_receivers:
          type: array
          items:
            type: object
            properties:
              address:
                type: string
              weight:
                type: string
          title: address to receive nft incentives
        weighted_node_hosts_incentives_receivers:
          type: array
          items:
            type: object
            properties:
              address:
                type: string
              weight:
                type: string
          title: address to receive node host incentives
    omniflix.alloc.v1beta1.QueryParamsResponse:
      type: object
      properties:
        params:
          description: params defines the parameters of the module.
          type: object
          properties:
            distribution_proportions:
              title: distribution_proportions defines the proportion of the minted denom
              type: object
              properties:
                staking_rewards:
                  type: string
                nft_incentives:
                  type: string
                node_hosts_incentives:
                  type: string
                developer_rewards:
                  type: string
                community_pool:
                  type: string
            weighted_developer_rewards_receivers:
              type: array
              items:
                type: object
                properties:
                  address:
                    type: string
                  weight:
                    type: string
              title: address to receive developer rewards
            weighted_nft_incentives_receivers:
              type: array
              items:
                type: object
                properties:
                  address:
                    type: string
                  weight:
                    type: string
              title: address to receive nft incentives
            weighted_node_hosts_incentives_receivers:
              type: array
              items:
                type: object
                properties:
                  address:
                    type: string
                  weight:
                    type: string
              title: address to receive node host incentives
      description: QueryParamsResponse is the response type for the Query/Params RPC method.
    omniflix.alloc.v1beta1.WeightedAddress:
      type: object
      properties:
        address:
          type: string
        weight:
          type: string
    cosmos.base.node.v1beta1.ConfigResponse:
      type: object
      properties:
        minimum_gas_price:
          type: string
      description: ConfigResponse defines the response structure for the Config gRPC query.
    cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse:
      type: object
      properties:
        block_id:
          type: object
          properties:
            hash:
              type: string
              format: byte
            part_set_header:
              type: object
              properties:
                total:
                  type: integer
                  format: int64
                hash:
                  type: string
                  format: byte
              title: PartsetHeader
          title: BlockID
        block:
          type: object
          properties:
            header:
              type: object
              properties:
                version:
                  title: basic block info
                  type: object
                  properties:
                    block:
                      type: string
                      format: uint64
                    app:
                      type: string
                      format: uint64
                  description: >-
                    Consensus captures the consensus rules for processing a
                    block in the blockchain,

                    including all blockchain data structures and the rules of the application's

                    state transition machine.
                chain_id:
                  type: string
                height:
                  type: string
                  format: int64
                time:
                  type: string
                  format: date-time
                last_block_id:
                  type: object
                  properties:
                    hash:
                      type: string
                      format: byte
                    part_set_header:
                      type: object
                      properties:
                        total:
                          type: integer
                          format: int64
                        hash:
                          type: string
                          format: byte
                      title: PartsetHeader
                  title: BlockID
                last_commit_hash:
                  type: string
                  format: byte
                  title: hashes of block data
                data_hash:
                  type: string
                  format: byte
                validators_hash:
                  type: string
                  format: byte
                  title: hashes from the app output from the prev block
                next_validators_hash:
                  type: string
                  format: byte
                consensus_hash:
                  type: string
                  format: byte
                app_hash:
                  type: string
                  format: byte
                last_results_hash:
                  type: string
                  format: byte
                evidence_hash:
                  type: string
                  format: byte
                  title: consensus info
                proposer_address:
                  type: string
                  format: byte
              description: Header defines the structure of a block header.
            data:
              type: object
              properties:
                txs:
                  type: array
                  items:
                    type: string
                    format: byte
                  description: >-
                    Txs that will be applied by state @ block.Height+1.

                    NOTE: not all txs here are valid.  We're just agreeing on the order first.

                    This means that block.AppHash does not include these txs.
              title: Data contains the set of transactions included in the block
            evidence:
              type: object
              properties:
                evidence:
                  type: array
                  items:
                    type: object
                    properties:
                      duplicate_vote_evidence:
                        type: object
                        properties:
                          vote_a:
                            type: object
                            properties:
                              type:
                                type: string
                                enum:
                                  - SIGNED_MSG_TYPE_UNKNOWN
                                  - SIGNED_MSG_TYPE_PREVOTE
                                  - SIGNED_MSG_TYPE_PRECOMMIT
                                  - SIGNED_MSG_TYPE_PROPOSAL
                                default: SIGNED_MSG_TYPE_UNKNOWN
                                description: >-
                                  SignedMsgType is a type of signed message in
                                  the consensus.

                                   - SIGNED_MSG_TYPE_PREVOTE: Votes
                                   - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                              height:
                                type: string
                                format: int64
                              round:
                                type: integer
                                format: int32
                              block_id:
                                type: object
                                properties:
                                  hash:
                                    type: string
                                    format: byte
                                  part_set_header:
                                    type: object
                                    properties:
                                      total:
                                        type: integer
                                        format: int64
                                      hash:
                                        type: string
                                        format: byte
                                    title: PartsetHeader
                                title: BlockID
                              timestamp:
                                type: string
                                format: date-time
                              validator_address:
                                type: string
                                format: byte
                              validator_index:
                                type: integer
                                format: int32
                              signature:
                                type: string
                                format: byte
                            description: >-
                              Vote represents a prevote, precommit, or commit
                              vote from validators for

                              consensus.
                          vote_b:
                            type: object
                            properties:
                              type:
                                type: string
                                enum:
                                  - SIGNED_MSG_TYPE_UNKNOWN
                                  - SIGNED_MSG_TYPE_PREVOTE
                                  - SIGNED_MSG_TYPE_PRECOMMIT
                                  - SIGNED_MSG_TYPE_PROPOSAL
                                default: SIGNED_MSG_TYPE_UNKNOWN
                                description: >-
                                  SignedMsgType is a type of signed message in
                                  the consensus.

                                   - SIGNED_MSG_TYPE_PREVOTE: Votes
                                   - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                              height:
                                type: string
                                format: int64
                              round:
                                type: integer
                                format: int32
                              block_id:
                                type: object
                                properties:
                                  hash:
                                    type: string
                                    format: byte
                                  part_set_header:
                                    type: object
                                    properties:
                                      total:
                                        type: integer
                                        format: int64
                                      hash:
                                        type: string
                                        format: byte
                                    title: PartsetHeader
                                title: BlockID
                              timestamp:
                                type: string
                                format: date-time
                              validator_address:
                                type: string
                                format: byte
                              validator_index:
                                type: integer
                                format: int32
                              signature:
                                type: string
                                format: byte
                            description: >-
                              Vote represents a prevote, precommit, or commit
                              vote from validators for

                              consensus.
                          total_voting_power:
                            type: string
                            format: int64
                          validator_power:
                            type: string
                            format: int64
                          timestamp:
                            type: string
                            format: date-time
                        description: DuplicateVoteEvidence contains evidence of a validator signed two
                          conflicting votes.
                      light_client_attack_evidence:
                        type: object
                        properties:
                          conflicting_block:
                            type: object
                            properties:
                              signed_header:
                                type: object
                                properties:
                                  header:
                                    type: object
                                    properties:
                                      version:
                                        title: basic block info
                                        type: object
                                        properties:
                                          block:
                                            type: string
                                            format: uint64
                                          app:
                                            type: string
                                            format: uint64
                                        description: >-
                                          Consensus captures the consensus rules
                                          for processing a block in the
                                          blockchain,

                                          including all blockchain data structures and the rules of the application's

                                          state transition machine.
                                      chain_id:
                                        type: string
                                      height:
                                        type: string
                                        format: int64
                                      time:
                                        type: string
                                        format: date-time
                                      last_block_id:
                                        type: object
                                        properties:
                                          hash:
                                            type: string
                                            format: byte
                                          part_set_header:
                                            type: object
                                            properties:
                                              total:
                                                type: integer
                                                format: int64
                                              hash:
                                                type: string
                                                format: byte
                                            title: PartsetHeader
                                        title: BlockID
                                      last_commit_hash:
                                        type: string
                                        format: byte
                                        title: hashes of block data
                                      data_hash:
                                        type: string
                                        format: byte
                                      validators_hash:
                                        type: string
                                        format: byte
                                        title: hashes from the app output from the prev block
                                      next_validators_hash:
                                        type: string
                                        format: byte
                                      consensus_hash:
                                        type: string
                                        format: byte
                                      app_hash:
                                        type: string
                                        format: byte
                                      last_results_hash:
                                        type: string
                                        format: byte
                                      evidence_hash:
                                        type: string
                                        format: byte
                                        title: consensus info
                                      proposer_address:
                                        type: string
                                        format: byte
                                    description: Header defines the structure of a block header.
                                  commit:
                                    type: object
                                    properties:
                                      height:
                                        type: string
                                        format: int64
                                      round:
                                        type: integer
                                        format: int32
                                      block_id:
                                        type: object
                                        properties:
                                          hash:
                                            type: string
                                            format: byte
                                          part_set_header:
                                            type: object
                                            properties:
                                              total:
                                                type: integer
                                                format: int64
                                              hash:
                                                type: string
                                                format: byte
                                            title: PartsetHeader
                                        title: BlockID
                                      signatures:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            block_id_flag:
                                              type: string
                                              enum:
                                                - BLOCK_ID_FLAG_UNKNOWN
                                                - BLOCK_ID_FLAG_ABSENT
                                                - BLOCK_ID_FLAG_COMMIT
                                                - BLOCK_ID_FLAG_NIL
                                              default: BLOCK_ID_FLAG_UNKNOWN
                                              title: BlockIdFlag indicates which BlcokID the signature is for
                                            validator_address:
                                              type: string
                                              format: byte
                                            timestamp:
                                              type: string
                                              format: date-time
                                            signature:
                                              type: string
                                              format: byte
                                          description: CommitSig is a part of the Vote included in a Commit.
                                    description: Commit contains the evidence that a block was committed by a set of
                                      validators.
                              validator_set:
                                type: object
                                properties:
                                  validators:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        address:
                                          type: string
                                          format: byte
                                        pub_key:
                                          type: object
                                          properties:
                                            ed25519:
                                              type: string
                                              format: byte
                                            secp256k1:
                                              type: string
                                              format: byte
                                          title: PublicKey defines the keys available for use with Validators
                                        voting_power:
                                          type: string
                                          format: int64
                                        proposer_priority:
                                          type: string
                                          format: int64
                                  proposer:
                                    type: object
                                    properties:
                                      address:
                                        type: string
                                        format: byte
                                      pub_key:
                                        type: object
                                        properties:
                                          ed25519:
                                            type: string
                                            format: byte
                                          secp256k1:
                                            type: string
                                            format: byte
                                        title: PublicKey defines the keys available for use with Validators
                                      voting_power:
                                        type: string
                                        format: int64
                                      proposer_priority:
                                        type: string
                                        format: int64
                                  total_voting_power:
                                    type: string
                                    format: int64
                          common_height:
                            type: string
                            format: int64
                          byzantine_validators:
                            type: array
                            items:
                              type: object
                              properties:
                                address:
                                  type: string
                                  format: byte
                                pub_key:
                                  type: object
                                  properties:
                                    ed25519:
                                      type: string
                                      format: byte
                                    secp256k1:
                                      type: string
                                      format: byte
                                  title: PublicKey defines the keys available for use with Validators
                                voting_power:
                                  type: string
                                  format: int64
                                proposer_priority:
                                  type: string
                                  format: int64
                          total_voting_power:
                            type: string
                            format: int64
                          timestamp:
                            type: string
                            format: date-time
                        description: LightClientAttackEvidence contains evidence of a set of validators
                          attempting to mislead a light client.
            last_commit:
              type: object
              properties:
                height:
                  type: string
                  format: int64
                round:
                  type: integer
                  format: int32
                block_id:
                  type: object
                  properties:
                    hash:
                      type: string
                      format: byte
                    part_set_header:
                      type: object
                      properties:
                        total:
                          type: integer
                          format: int64
                        hash:
                          type: string
                          format: byte
                      title: PartsetHeader
                  title: BlockID
                signatures:
                  type: array
                  items:
                    type: object
                    properties:
                      block_id_flag:
                        type: string
                        enum:
                          - BLOCK_ID_FLAG_UNKNOWN
                          - BLOCK_ID_FLAG_ABSENT
                          - BLOCK_ID_FLAG_COMMIT
                          - BLOCK_ID_FLAG_NIL
                        default: BLOCK_ID_FLAG_UNKNOWN
                        title: BlockIdFlag indicates which BlcokID the signature is for
                      validator_address:
                        type: string
                        format: byte
                      timestamp:
                        type: string
                        format: date-time
                      signature:
                        type: string
                        format: byte
                    description: CommitSig is a part of the Vote included in a Commit.
              description: Commit contains the evidence that a block was committed by a set of
                validators.
      description: GetBlockByHeightResponse is the response type for the
        Query/GetBlockByHeight RPC method.
    cosmos.base.tendermint.v1beta1.GetLatestBlockResponse:
      type: object
      properties:
        block_id:
          type: object
          properties:
            hash:
              type: string
              format: byte
            part_set_header:
              type: object
              properties:
                total:
                  type: integer
                  format: int64
                hash:
                  type: string
                  format: byte
              title: PartsetHeader
          title: BlockID
        block:
          type: object
          properties:
            header:
              type: object
              properties:
                version:
                  title: basic block info
                  type: object
                  properties:
                    block:
                      type: string
                      format: uint64
                    app:
                      type: string
                      format: uint64
                  description: >-
                    Consensus captures the consensus rules for processing a
                    block in the blockchain,

                    including all blockchain data structures and the rules of the application's

                    state transition machine.
                chain_id:
                  type: string
                height:
                  type: string
                  format: int64
                time:
                  type: string
                  format: date-time
                last_block_id:
                  type: object
                  properties:
                    hash:
                      type: string
                      format: byte
                    part_set_header:
                      type: object
                      properties:
                        total:
                          type: integer
                          format: int64
                        hash:
                          type: string
                          format: byte
                      title: PartsetHeader
                  title: BlockID
                last_commit_hash:
                  type: string
                  format: byte
                  title: hashes of block data
                data_hash:
                  type: string
                  format: byte
                validators_hash:
                  type: string
                  format: byte
                  title: hashes from the app output from the prev block
                next_validators_hash:
                  type: string
                  format: byte
                consensus_hash:
                  type: string
                  format: byte
                app_hash:
                  type: string
                  format: byte
                last_results_hash:
                  type: string
                  format: byte
                evidence_hash:
                  type: string
                  format: byte
                  title: consensus info
                proposer_address:
                  type: string
                  format: byte
              description: Header defines the structure of a block header.
            data:
              type: object
              properties:
                txs:
                  type: array
                  items:
                    type: string
                    format: byte
                  description: >-
                    Txs that will be applied by state @ block.Height+1.

                    NOTE: not all txs here are valid.  We're just agreeing on the order first.

                    This means that block.AppHash does not include these txs.
              title: Data contains the set of transactions included in the block
            evidence:
              type: object
              properties:
                evidence:
                  type: array
                  items:
                    type: object
                    properties:
                      duplicate_vote_evidence:
                        type: object
                        properties:
                          vote_a:
                            type: object
                            properties:
                              type:
                                type: string
                                enum:
                                  - SIGNED_MSG_TYPE_UNKNOWN
                                  - SIGNED_MSG_TYPE_PREVOTE
                                  - SIGNED_MSG_TYPE_PRECOMMIT
                                  - SIGNED_MSG_TYPE_PROPOSAL
                                default: SIGNED_MSG_TYPE_UNKNOWN
                                description: >-
                                  SignedMsgType is a type of signed message in
                                  the consensus.

                                   - SIGNED_MSG_TYPE_PREVOTE: Votes
                                   - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                              height:
                                type: string
                                format: int64
                              round:
                                type: integer
                                format: int32
                              block_id:
                                type: object
                                properties:
                                  hash:
                                    type: string
                                    format: byte
                                  part_set_header:
                                    type: object
                                    properties:
                                      total:
                                        type: integer
                                        format: int64
                                      hash:
                                        type: string
                                        format: byte
                                    title: PartsetHeader
                                title: BlockID
                              timestamp:
                                type: string
                                format: date-time
                              validator_address:
                                type: string
                                format: byte
                              validator_index:
                                type: integer
                                format: int32
                              signature:
                                type: string
                                format: byte
                            description: >-
                              Vote represents a prevote, precommit, or commit
                              vote from validators for

                              consensus.
                          vote_b:
                            type: object
                            properties:
                              type:
                                type: string
                                enum:
                                  - SIGNED_MSG_TYPE_UNKNOWN
                                  - SIGNED_MSG_TYPE_PREVOTE
                                  - SIGNED_MSG_TYPE_PRECOMMIT
                                  - SIGNED_MSG_TYPE_PROPOSAL
                                default: SIGNED_MSG_TYPE_UNKNOWN
                                description: >-
                                  SignedMsgType is a type of signed message in
                                  the consensus.

                                   - SIGNED_MSG_TYPE_PREVOTE: Votes
                                   - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                              height:
                                type: string
                                format: int64
                              round:
                                type: integer
                                format: int32
                              block_id:
                                type: object
                                properties:
                                  hash:
                                    type: string
                                    format: byte
                                  part_set_header:
                                    type: object
                                    properties:
                                      total:
                                        type: integer
                                        format: int64
                                      hash:
                                        type: string
                                        format: byte
                                    title: PartsetHeader
                                title: BlockID
                              timestamp:
                                type: string
                                format: date-time
                              validator_address:
                                type: string
                                format: byte
                              validator_index:
                                type: integer
                                format: int32
                              signature:
                                type: string
                                format: byte
                            description: >-
                              Vote represents a prevote, precommit, or commit
                              vote from validators for

                              consensus.
                          total_voting_power:
                            type: string
                            format: int64
                          validator_power:
                            type: string
                            format: int64
                          timestamp:
                            type: string
                            format: date-time
                        description: DuplicateVoteEvidence contains evidence of a validator signed two
                          conflicting votes.
                      light_client_attack_evidence:
                        type: object
                        properties:
                          conflicting_block:
                            type: object
                            properties:
                              signed_header:
                                type: object
                                properties:
                                  header:
                                    type: object
                                    properties:
                                      version:
                                        title: basic block info
                                        type: object
                                        properties:
                                          block:
                                            type: string
                                            format: uint64
                                          app:
                                            type: string
                                            format: uint64
                                        description: >-
                                          Consensus captures the consensus rules
                                          for processing a block in the
                                          blockchain,

                                          including all blockchain data structures and the rules of the application's

                                          state transition machine.
                                      chain_id:
                                        type: string
                                      height:
                                        type: string
                                        format: int64
                                      time:
                                        type: string
                                        format: date-time
                                      last_block_id:
                                        type: object
                                        properties:
                                          hash:
                                            type: string
                                            format: byte
                                          part_set_header:
                                            type: object
                                            properties:
                                              total:
                                                type: integer
                                                format: int64
                                              hash:
                                                type: string
                                                format: byte
                                            title: PartsetHeader
                                        title: BlockID
                                      last_commit_hash:
                                        type: string
                                        format: byte
                                        title: hashes of block data
                                      data_hash:
                                        type: string
                                        format: byte
                                      validators_hash:
                                        type: string
                                        format: byte
                                        title: hashes from the app output from the prev block
                                      next_validators_hash:
                                        type: string
                                        format: byte
                                      consensus_hash:
                                        type: string
                                        format: byte
                                      app_hash:
                                        type: string
                                        format: byte
                                      last_results_hash:
                                        type: string
                                        format: byte
                                      evidence_hash:
                                        type: string
                                        format: byte
                                        title: consensus info
                                      proposer_address:
                                        type: string
                                        format: byte
                                    description: Header defines the structure of a block header.
                                  commit:
                                    type: object
                                    properties:
                                      height:
                                        type: string
                                        format: int64
                                      round:
                                        type: integer
                                        format: int32
                                      block_id:
                                        type: object
                                        properties:
                                          hash:
                                            type: string
                                            format: byte
                                          part_set_header:
                                            type: object
                                            properties:
                                              total:
                                                type: integer
                                                format: int64
                                              hash:
                                                type: string
                                                format: byte
                                            title: PartsetHeader
                                        title: BlockID
                                      signatures:
                                        type: array
                                        items:
                                          type: object
                                          properties:
                                            block_id_flag:
                                              type: string
                                              enum:
                                                - BLOCK_ID_FLAG_UNKNOWN
                                                - BLOCK_ID_FLAG_ABSENT
                                                - BLOCK_ID_FLAG_COMMIT
                                                - BLOCK_ID_FLAG_NIL
                                              default: BLOCK_ID_FLAG_UNKNOWN
                                              title: BlockIdFlag indicates which BlcokID the signature is for
                                            validator_address:
                                              type: string
                                              format: byte
                                            timestamp:
                                              type: string
                                              format: date-time
                                            signature:
                                              type: string
                                              format: byte
                                          description: CommitSig is a part of the Vote included in a Commit.
                                    description: Commit contains the evidence that a block was committed by a set of
                                      validators.
                              validator_set:
                                type: object
                                properties:
                                  validators:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        address:
                                          type: string
                                          format: byte
                                        pub_key:
                                          type: object
                                          properties:
                                            ed25519:
                                              type: string
                                              format: byte
                                            secp256k1:
                                              type: string
                                              format: byte
                                          title: PublicKey defines the keys available for use with Validators
                                        voting_power:
                                          type: string
                                          format: int64
                                        proposer_priority:
                                          type: string
                                          format: int64
                                  proposer:
                                    type: object
                                    properties:
                                      address:
                                        type: string
                                        format: byte
                                      pub_key:
                                        type: object
                                        properties:
                                          ed25519:
                                            type: string
                                            format: byte
                                          secp256k1:
                                            type: string
                                            format: byte
                                        title: PublicKey defines the keys available for use with Validators
                                      voting_power:
                                        type: string
                                        format: int64
                                      proposer_priority:
                                        type: string
                                        format: int64
                                  total_voting_power:
                                    type: string
                                    format: int64
                          common_height:
                            type: string
                            format: int64
                          byzantine_validators:
                            type: array
                            items:
                              type: object
                              properties:
                                address:
                                  type: string
                                  format: byte
                                pub_key:
                                  type: object
                                  properties:
                                    ed25519:
                                      type: string
                                      format: byte
                                    secp256k1:
                                      type: string
                                      format: byte
                                  title: PublicKey defines the keys available for use with Validators
                                voting_power:
                                  type: string
                                  format: int64
                                proposer_priority:
                                  type: string
                                  format: int64
                          total_voting_power:
                            type: string
                            format: int64
                          timestamp:
                            type: string
                            format: date-time
                        description: LightClientAttackEvidence contains evidence of a set of validators
                          attempting to mislead a light client.
            last_commit:
              type: object
              properties:
                height:
                  type: string
                  format: int64
                round:
                  type: integer
                  format: int32
                block_id:
                  type: object
                  properties:
                    hash:
                      type: string
                      format: byte
                    part_set_header:
                      type: object
                      properties:
                        total:
                          type: integer
                          format: int64
                        hash:
                          type: string
                          format: byte
                      title: PartsetHeader
                  title: BlockID
                signatures:
                  type: array
                  items:
                    type: object
                    properties:
                      block_id_flag:
                        type: string
                        enum:
                          - BLOCK_ID_FLAG_UNKNOWN
                          - BLOCK_ID_FLAG_ABSENT
                          - BLOCK_ID_FLAG_COMMIT
                          - BLOCK_ID_FLAG_NIL
                        default: BLOCK_ID_FLAG_UNKNOWN
                        title: BlockIdFlag indicates which BlcokID the signature is for
                      validator_address:
                        type: string
                        format: byte
                      timestamp:
                        type: string
                        format: date-time
                      signature:
                        type: string
                        format: byte
                    description: CommitSig is a part of the Vote included in a Commit.
              description: Commit contains the evidence that a block was committed by a set of
                validators.
      description: GetLatestBlockResponse is the response type for the
        Query/GetLatestBlock RPC method.
    cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse:
      type: object
      properties:
        block_height:
          type: string
          format: int64
        validators:
          type: array
          items:
            type: object
            properties:
              address:
                type: string
              pub_key:
                type: object
                properties:
                  type_url:
                    type: string
                  value:
                    type: string
                    format: byte
              voting_power:
                type: string
                format: int64
              proposer_priority:
                type: string
                format: int64
            description: Validator is the type for the validator-set.
        pagination:
          type: object
          properties:
            next_key:
              type: string
              format: byte
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
            total:
              type: string
              format: uint64
              title: >-
                total is total number of results available if
                PageRequest.count_total

                was set, its value is undefined otherwise
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
      description: GetLatestValidatorSetResponse is the response type for the
        Query/GetValidatorSetByHeight RPC method.
    cosmos.base.tendermint.v1beta1.GetNodeInfoResponse:
      type: object
      properties:
        default_node_info:
          type: object
          properties:
            protocol_version:
              type: object
              properties:
                p2p:
                  type: string
                  format: uint64
                block:
                  type: string
                  format: uint64
                app:
                  type: string
                  format: uint64
            default_node_id:
              type: string
            listen_addr:
              type: string
            network:
              type: string
            version:
              type: string
            channels:
              type: string
              format: byte
            moniker:
              type: string
            other:
              type: object
              properties:
                tx_index:
                  type: string
                rpc_address:
                  type: string
        application_version:
          type: object
          properties:
            name:
              type: string
            app_name:
              type: string
            version:
              type: string
            git_commit:
              type: string
            build_tags:
              type: string
            go_version:
              type: string
            build_deps:
              type: array
              items:
                type: object
                properties:
                  path:
                    type: string
                    title: module path
                  version:
                    type: string
                    title: module version
                  sum:
                    type: string
                    title: checksum
                title: Module is the type for VersionInfo
            cosmos_sdk_version:
              type: string
              title: "Since: cosmos-sdk 0.43"
          description: VersionInfo is the type for the GetNodeInfoResponse message.
      description: GetNodeInfoResponse is the request type for the Query/GetNodeInfo
        RPC method.
    cosmos.base.tendermint.v1beta1.GetSyncingResponse:
      type: object
      properties:
        syncing:
          type: boolean
      description: GetSyncingResponse is the response type for the Query/GetSyncing
        RPC method.
    cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse:
      type: object
      properties:
        block_height:
          type: string
          format: int64
        validators:
          type: array
          items:
            type: object
            properties:
              address:
                type: string
              pub_key:
                type: object
                properties:
                  type_url:
                    type: string
                  value:
                    type: string
                    format: byte
              voting_power:
                type: string
                format: int64
              proposer_priority:
                type: string
                format: int64
            description: Validator is the type for the validator-set.
        pagination:
          type: object
          properties:
            next_key:
              type: string
              format: byte
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
            total:
              type: string
              format: uint64
              title: >-
                total is total number of results available if
                PageRequest.count_total

                was set, its value is undefined otherwise
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
      description: GetValidatorSetByHeightResponse is the response type for the
        Query/GetValidatorSetByHeight RPC method.
    cosmos.base.tendermint.v1beta1.Module:
      type: object
      properties:
        path:
          type: string
          title: module path
        version:
          type: string
          title: module version
        sum:
          type: string
          title: checksum
      title: Module is the type for VersionInfo
    cosmos.base.tendermint.v1beta1.Validator:
      type: object
      properties:
        address:
          type: string
        pub_key:
          type: object
          properties:
            type_url:
              type: string
            value:
              type: string
              format: byte
        voting_power:
          type: string
          format: int64
        proposer_priority:
          type: string
          format: int64
      description: Validator is the type for the validator-set.
    cosmos.base.tendermint.v1beta1.VersionInfo:
      type: object
      properties:
        name:
          type: string
        app_name:
          type: string
        version:
          type: string
        git_commit:
          type: string
        build_tags:
          type: string
        go_version:
          type: string
        build_deps:
          type: array
          items:
            type: object
            properties:
              path:
                type: string
                title: module path
              version:
                type: string
                title: module version
              sum:
                type: string
                title: checksum
            title: Module is the type for VersionInfo
        cosmos_sdk_version:
          type: string
          title: "Since: cosmos-sdk 0.43"
      description: VersionInfo is the type for the GetNodeInfoResponse message.
    tendermint.p2p.DefaultNodeInfo:
      type: object
      properties:
        protocol_version:
          type: object
          properties:
            p2p:
              type: string
              format: uint64
            block:
              type: string
              format: uint64
            app:
              type: string
              format: uint64
        default_node_id:
          type: string
        listen_addr:
          type: string
        network:
          type: string
        version:
          type: string
        channels:
          type: string
          format: byte
        moniker:
          type: string
        other:
          type: object
          properties:
            tx_index:
              type: string
            rpc_address:
              type: string
    tendermint.p2p.DefaultNodeInfoOther:
      type: object
      properties:
        tx_index:
          type: string
        rpc_address:
          type: string
    tendermint.p2p.ProtocolVersion:
      type: object
      properties:
        p2p:
          type: string
          format: uint64
        block:
          type: string
          format: uint64
        app:
          type: string
          format: uint64
    OmniFlix.itc.v1.Campaign:
      type: object
      properties:
        id:
          type: string
          format: uint64
        name:
          type: string
        description:
          type: string
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        creator:
          type: string
        nft_denom_id:
          type: string
        max_allowed_claims:
          type: string
          format: uint64
        interaction:
          type: string
          enum:
            - INTERACTION_TYPE_BURN
            - INTERACTION_TYPE_TRANSFER
            - INTERACTION_TYPE_HOLD
          default: INTERACTION_TYPE_BURN
        claim_type:
          type: string
          enum:
            - CLAIM_TYPE_FT
            - CLAIM_TYPE_NFT
            - CLAIM_TYPE_FT_AND_NFT
          default: CLAIM_TYPE_FT
        tokens_per_claim:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        total_tokens:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        available_tokens:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        received_nft_ids:
          type: array
          items:
            type: string
        nft_mint_details:
          type: object
          properties:
            denom_id:
              type: string
            name:
              type: string
            description:
              type: string
            media_uri:
              type: string
            preview_uri:
              type: string
            royalty_share:
              type: string
            transferable:
              type: boolean
            extensible:
              type: boolean
            nsfw:
              type: boolean
            data:
              type: string
        distribution:
          type: object
          properties:
            type:
              type: string
              enum:
                - DISTRIBUTION_TYPE_INSTANT
                - DISTRIBUTION_TYPE_STREAM
              default: DISTRIBUTION_TYPE_INSTANT
            stream_duration:
              type: string
    OmniFlix.itc.v1.CampaignStatus:
      type: string
      enum:
        - CAMPAIGN_STATUS_UNSPECIFIED
        - CAMPAIGN_STATUS_INACTIVE
        - CAMPAIGN_STATUS_ACTIVE
      default: CAMPAIGN_STATUS_UNSPECIFIED
    OmniFlix.itc.v1.Claim:
      type: object
      properties:
        campaign_id:
          type: string
          format: uint64
        address:
          type: string
        nft_id:
          type: string
        interaction:
          type: string
          enum:
            - INTERACTION_TYPE_BURN
            - INTERACTION_TYPE_TRANSFER
            - INTERACTION_TYPE_HOLD
          default: INTERACTION_TYPE_BURN
    OmniFlix.itc.v1.ClaimType:
      type: string
      enum:
        - CLAIM_TYPE_FT
        - CLAIM_TYPE_NFT
        - CLAIM_TYPE_FT_AND_NFT
      default: CLAIM_TYPE_FT
    OmniFlix.itc.v1.Distribution:
      type: object
      properties:
        type:
          type: string
          enum:
            - DISTRIBUTION_TYPE_INSTANT
            - DISTRIBUTION_TYPE_STREAM
          default: DISTRIBUTION_TYPE_INSTANT
        stream_duration:
          type: string
    OmniFlix.itc.v1.DistributionType:
      type: string
      enum:
        - DISTRIBUTION_TYPE_INSTANT
        - DISTRIBUTION_TYPE_STREAM
      default: DISTRIBUTION_TYPE_INSTANT
    OmniFlix.itc.v1.InteractionType:
      type: string
      enum:
        - INTERACTION_TYPE_BURN
        - INTERACTION_TYPE_TRANSFER
        - INTERACTION_TYPE_HOLD
      default: INTERACTION_TYPE_BURN
    OmniFlix.itc.v1.NFTDetails:
      type: object
      properties:
        denom_id:
          type: string
        name:
          type: string
        description:
          type: string
        media_uri:
          type: string
        preview_uri:
          type: string
        royalty_share:
          type: string
        transferable:
          type: boolean
        extensible:
          type: boolean
        nsfw:
          type: boolean
        data:
          type: string
    OmniFlix.itc.v1.Params:
      type: object
      properties:
        max_campaign_duration:
          type: string
        creation_fee:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
    OmniFlix.itc.v1.QueryCampaignResponse:
      type: object
      properties:
        Campaign:
          type: object
          properties:
            id:
              type: string
              format: uint64
            name:
              type: string
            description:
              type: string
            start_time:
              type: string
              format: date-time
            end_time:
              type: string
              format: date-time
            creator:
              type: string
            nft_denom_id:
              type: string
            max_allowed_claims:
              type: string
              format: uint64
            interaction:
              type: string
              enum:
                - INTERACTION_TYPE_BURN
                - INTERACTION_TYPE_TRANSFER
                - INTERACTION_TYPE_HOLD
              default: INTERACTION_TYPE_BURN
            claim_type:
              type: string
              enum:
                - CLAIM_TYPE_FT
                - CLAIM_TYPE_NFT
                - CLAIM_TYPE_FT_AND_NFT
              default: CLAIM_TYPE_FT
            tokens_per_claim:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom method

                signatures required by gogoproto.
            total_tokens:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom method

                signatures required by gogoproto.
            available_tokens:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom method

                signatures required by gogoproto.
            received_nft_ids:
              type: array
              items:
                type: string
            nft_mint_details:
              type: object
              properties:
                denom_id:
                  type: string
                name:
                  type: string
                description:
                  type: string
                media_uri:
                  type: string
                preview_uri:
                  type: string
                royalty_share:
                  type: string
                transferable:
                  type: boolean
                extensible:
                  type: boolean
                nsfw:
                  type: boolean
                data:
                  type: string
            distribution:
              type: object
              properties:
                type:
                  type: string
                  enum:
                    - DISTRIBUTION_TYPE_INSTANT
                    - DISTRIBUTION_TYPE_STREAM
                  default: DISTRIBUTION_TYPE_INSTANT
                stream_duration:
                  type: string
      description: QueryCampaignResponse is the response type for the Query/Campaign
        RPC method.
    OmniFlix.itc.v1.QueryCampaignsResponse:
      type: object
      properties:
        campaigns:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uint64
              name:
                type: string
              description:
                type: string
              start_time:
                type: string
                format: date-time
              end_time:
                type: string
                format: date-time
              creator:
                type: string
              nft_denom_id:
                type: string
              max_allowed_claims:
                type: string
                format: uint64
              interaction:
                type: string
                enum:
                  - INTERACTION_TYPE_BURN
                  - INTERACTION_TYPE_TRANSFER
                  - INTERACTION_TYPE_HOLD
                default: INTERACTION_TYPE_BURN
              claim_type:
                type: string
                enum:
                  - CLAIM_TYPE_FT
                  - CLAIM_TYPE_NFT
                  - CLAIM_TYPE_FT_AND_NFT
                default: CLAIM_TYPE_FT
              tokens_per_claim:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.
              total_tokens:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.
              available_tokens:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.
              received_nft_ids:
                type: array
                items:
                  type: string
              nft_mint_details:
                type: object
                properties:
                  denom_id:
                    type: string
                  name:
                    type: string
                  description:
                    type: string
                  media_uri:
                    type: string
                  preview_uri:
                    type: string
                  royalty_share:
                    type: string
                  transferable:
                    type: boolean
                  extensible:
                    type: boolean
                  nsfw:
                    type: boolean
                  data:
                    type: string
              distribution:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - DISTRIBUTION_TYPE_INSTANT
                      - DISTRIBUTION_TYPE_STREAM
                    default: DISTRIBUTION_TYPE_INSTANT
                  stream_duration:
                    type: string
        pagination:
          type: object
          properties:
            next_key:
              type: string
              format: byte
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
            total:
              type: string
              format: uint64
              title: >-
                total is total number of results available if
                PageRequest.count_total

                was set, its value is undefined otherwise
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
      description: |-
        QueryCampaignsResponse is the response type for the Query/Campaigns RPC
        method.
    OmniFlix.itc.v1.QueryClaimsResponse:
      type: object
      properties:
        claims:
          type: array
          items:
            type: object
            properties:
              campaign_id:
                type: string
                format: uint64
              address:
                type: string
              nft_id:
                type: string
              interaction:
                type: string
                enum:
                  - INTERACTION_TYPE_BURN
                  - INTERACTION_TYPE_TRANSFER
                  - INTERACTION_TYPE_HOLD
                default: INTERACTION_TYPE_BURN
        pagination:
          type: object
          properties:
            next_key:
              type: string
              format: byte
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
            total:
              type: string
              format: uint64
              title: >-
                total is total number of results available if
                PageRequest.count_total

                was set, its value is undefined otherwise
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
    OmniFlix.itc.v1.QueryParamsResponse:
      type: object
      properties:
        params:
          description: params defines the parameters of the module.
          type: object
          properties:
            max_campaign_duration:
              type: string
            creation_fee:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom method

                signatures required by gogoproto.
      description: QueryParamsResponse is the response type for the Query/Params RPC method.
    cosmos.slashing.v1beta1.Params:
      type: object
      properties:
        signed_blocks_window:
          type: string
          format: int64
        min_signed_per_window:
          type: string
          format: byte
        downtime_jail_duration:
          type: string
        slash_fraction_double_sign:
          type: string
          format: byte
        slash_fraction_downtime:
          type: string
          format: byte
      description: Params represents the parameters used for by the slashing module.
    cosmos.slashing.v1beta1.QueryParamsResponse:
      type: object
      properties:
        params:
          type: object
          properties:
            signed_blocks_window:
              type: string
              format: int64
            min_signed_per_window:
              type: string
              format: byte
            downtime_jail_duration:
              type: string
            slash_fraction_double_sign:
              type: string
              format: byte
            slash_fraction_downtime:
              type: string
              format: byte
          description: Params represents the parameters used for by the slashing module.
      title: QueryParamsResponse is the response type for the Query/Params RPC method
    cosmos.slashing.v1beta1.QuerySigningInfoResponse:
      type: object
      properties:
        val_signing_info:
          type: object
          properties:
            address:
              type: string
            start_height:
              type: string
              format: int64
              title: Height at which validator was first a candidate OR was unjailed
            index_offset:
              type: string
              format: int64
              description: >-
                Index which is incremented each time the validator was a bonded

                in a block and may have signed a precommit or not. This in conjunction with the

                `SignedBlocksWindow` param determines the index in the `MissedBlocksBitArray`.
            jailed_until:
              type: string
              format: date-time
              description: Timestamp until which the validator is jailed due to liveness
                downtime.
            tombstoned:
              type: boolean
              description: >-
                Whether or not a validator has been tombstoned (killed out of
                validator set). It is set

                once the validator commits an equivocation or for any other configured misbehiavor.
            missed_blocks_counter:
              type: string
              format: int64
              description: >-
                A counter kept to avoid unnecessary array reads.

                Note that `Sum(MissedBlocksBitArray)` always equals `MissedBlocksCounter`.
          description: >-
            ValidatorSigningInfo defines a validator's signing info for
            monitoring their

            liveness activity.
          title: val_signing_info is the signing info of requested val cons address
      title: >-
        QuerySigningInfoResponse is the response type for the Query/SigningInfo
        RPC

        method
    cosmos.slashing.v1beta1.QuerySigningInfosResponse:
      type: object
      properties:
        info:
          type: array
          items:
            type: object
            properties:
              address:
                type: string
              start_height:
                type: string
                format: int64
                title: Height at which validator was first a candidate OR was unjailed
              index_offset:
                type: string
                format: int64
                description: >-
                  Index which is incremented each time the validator was a
                  bonded

                  in a block and may have signed a precommit or not. This in conjunction with the

                  `SignedBlocksWindow` param determines the index in the `MissedBlocksBitArray`.
              jailed_until:
                type: string
                format: date-time
                description: Timestamp until which the validator is jailed due to liveness
                  downtime.
              tombstoned:
                type: boolean
                description: >-
                  Whether or not a validator has been tombstoned (killed out of
                  validator set). It is set

                  once the validator commits an equivocation or for any other configured misbehiavor.
              missed_blocks_counter:
                type: string
                format: int64
                description: >-
                  A counter kept to avoid unnecessary array reads.

                  Note that `Sum(MissedBlocksBitArray)` always equals `MissedBlocksCounter`.
            description: >-
              ValidatorSigningInfo defines a validator's signing info for
              monitoring their

              liveness activity.
          title: info is the signing info of all validators
        pagination:
          type: object
          properties:
            next_key:
              type: string
              format: byte
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
            total:
              type: string
              format: uint64
              title: >-
                total is total number of results available if
                PageRequest.count_total

                was set, its value is undefined otherwise
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
      title: >-
        QuerySigningInfosResponse is the response type for the
        Query/SigningInfos RPC

        method
    cosmos.slashing.v1beta1.ValidatorSigningInfo:
      type: object
      properties:
        address:
          type: string
        start_height:
          type: string
          format: int64
          title: Height at which validator was first a candidate OR was unjailed
        index_offset:
          type: string
          format: int64
          description: >-
            Index which is incremented each time the validator was a bonded

            in a block and may have signed a precommit or not. This in conjunction with the

            `SignedBlocksWindow` param determines the index in the `MissedBlocksBitArray`.
        jailed_until:
          type: string
          format: date-time
          description: Timestamp until which the validator is jailed due to liveness
            downtime.
        tombstoned:
          type: boolean
          description: >-
            Whether or not a validator has been tombstoned (killed out of
            validator set). It is set

            once the validator commits an equivocation or for any other configured misbehiavor.
        missed_blocks_counter:
          type: string
          format: int64
          description: >-
            A counter kept to avoid unnecessary array reads.

            Note that `Sum(MissedBlocksBitArray)` always equals `MissedBlocksCounter`.
      description: >-
        ValidatorSigningInfo defines a validator's signing info for monitoring
        their

        liveness activity.
    cosmos.bank.v1beta1.DenomUnit:
      type: object
      properties:
        denom:
          type: string
          description: denom represents the string name of the given denom unit (e.g uatom).
        exponent:
          type: integer
          format: int64
          description: >-
            exponent represents power of 10 exponent that one must

            raise the base_denom to in order to equal the given DenomUnit's denom

            1 denom = 1^exponent base_denom

            (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with

            exponent = 6, thus: 1 atom = 10^6 uatom).
        aliases:
          type: array
          items:
            type: string
          title: aliases is a list of string aliases for the given denom
      description: |-
        DenomUnit represents a struct that describes a given
        denomination unit of the basic token.
    cosmos.bank.v1beta1.Metadata:
      type: object
      properties:
        description:
          type: string
        denom_units:
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
                description: denom represents the string name of the given denom unit (e.g
                  uatom).
              exponent:
                type: integer
                format: int64
                description: >-
                  exponent represents power of 10 exponent that one must

                  raise the base_denom to in order to equal the given DenomUnit's denom

                  1 denom = 1^exponent base_denom

                  (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with

                  exponent = 6, thus: 1 atom = 10^6 uatom).
              aliases:
                type: array
                items:
                  type: string
                title: aliases is a list of string aliases for the given denom
            description: |-
              DenomUnit represents a struct that describes a given
              denomination unit of the basic token.
          title: denom_units represents the list of DenomUnit's for a given coin
        base:
          type: string
          description: base represents the base denom (should be the DenomUnit with
            exponent = 0).
        display:
          type: string
          description: |-
            display indicates the suggested denom that should be
            displayed in clients.
        name:
          type: string
          description: "Since: cosmos-sdk 0.43"
          title: "name defines the name of the token (eg: Cosmos Atom)"
        symbol:
          type: string
          description: >-
            symbol is the token symbol usually shown on exchanges (eg: ATOM).
            This can

            be the same as the display.


            Since: cosmos-sdk 0.43
      description: |-
        Metadata represents a struct that describes
        a basic token.
    cosmos.bank.v1beta1.Params:
      type: object
      properties:
        send_enabled:
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              enabled:
                type: boolean
            description: >-
              SendEnabled maps coin denom to a send_enabled status (whether a
              denom is

              sendable).
        default_send_enabled:
          type: boolean
      description: Params defines the parameters for the bank module.
    cosmos.bank.v1beta1.QueryAllBalancesResponse:
      type: object
      properties:
        balances:
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom method

              signatures required by gogoproto.
          description: balances is the balances of all the coins.
        pagination:
          type: object
          properties:
            next_key:
              type: string
              format: byte
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
            total:
              type: string
              format: uint64
              title: >-
                total is total number of results available if
                PageRequest.count_total

                was set, its value is undefined otherwise
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
      description: >-
        QueryAllBalancesResponse is the response type for the Query/AllBalances
        RPC

        method.
    cosmos.bank.v1beta1.QueryBalanceResponse:
      type: object
      properties:
        balance:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
      description: QueryBalanceResponse is the response type for the Query/Balance RPC
        method.
    cosmos.bank.v1beta1.QueryDenomMetadataResponse:
      type: object
      properties:
        metadata:
          type: object
          properties:
            description:
              type: string
            denom_units:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                    description: denom represents the string name of the given denom unit (e.g
                      uatom).
                  exponent:
                    type: integer
                    format: int64
                    description: >-
                      exponent represents power of 10 exponent that one must

                      raise the base_denom to in order to equal the given DenomUnit's denom

                      1 denom = 1^exponent base_denom

                      (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with

                      exponent = 6, thus: 1 atom = 10^6 uatom).
                  aliases:
                    type: array
                    items:
                      type: string
                    title: aliases is a list of string aliases for the given denom
                description: |-
                  DenomUnit represents a struct that describes a given
                  denomination unit of the basic token.
              title: denom_units represents the list of DenomUnit's for a given coin
            base:
              type: string
              description: base represents the base denom (should be the DenomUnit with
                exponent = 0).
            display:
              type: string
              description: |-
                display indicates the suggested denom that should be
                displayed in clients.
            name:
              type: string
              description: "Since: cosmos-sdk 0.43"
              title: "name defines the name of the token (eg: Cosmos Atom)"
            symbol:
              type: string
              description: >-
                symbol is the token symbol usually shown on exchanges (eg:
                ATOM). This can

                be the same as the display.


                Since: cosmos-sdk 0.43
          description: |-
            Metadata represents a struct that describes
            a basic token.
      description: >-
        QueryDenomMetadataResponse is the response type for the
        Query/DenomMetadata RPC

        method.
    cosmos.bank.v1beta1.QueryDenomsMetadataResponse:
      type: object
      properties:
        metadatas:
          type: array
          items:
            type: object
            properties:
              description:
                type: string
              denom_units:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                      description: denom represents the string name of the given denom unit (e.g
                        uatom).
                    exponent:
                      type: integer
                      format: int64
                      description: >-
                        exponent represents power of 10 exponent that one must

                        raise the base_denom to in order to equal the given DenomUnit's denom

                        1 denom = 1^exponent base_denom

                        (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with

                        exponent = 6, thus: 1 atom = 10^6 uatom).
                    aliases:
                      type: array
                      items:
                        type: string
                      title: aliases is a list of string aliases for the given denom
                  description: |-
                    DenomUnit represents a struct that describes a given
                    denomination unit of the basic token.
                title: denom_units represents the list of DenomUnit's for a given coin
              base:
                type: string
                description: base represents the base denom (should be the DenomUnit with
                  exponent = 0).
              display:
                type: string
                description: |-
                  display indicates the suggested denom that should be
                  displayed in clients.
              name:
                type: string
                description: "Since: cosmos-sdk 0.43"
                title: "name defines the name of the token (eg: Cosmos Atom)"
              symbol:
                type: string
                description: >-
                  symbol is the token symbol usually shown on exchanges (eg:
                  ATOM). This can

                  be the same as the display.


                  Since: cosmos-sdk 0.43
            description: |-
              Metadata represents a struct that describes
              a basic token.
          description: metadata provides the client information for all the registered
            tokens.
        pagination:
          type: object
          properties:
            next_key:
              type: string
              format: byte
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
            total:
              type: string
              format: uint64
              title: >-
                total is total number of results available if
                PageRequest.count_total

                was set, its value is undefined otherwise
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
      description: >-
        QueryDenomsMetadataResponse is the response type for the
        Query/DenomsMetadata RPC

        method.
    cosmos.bank.v1beta1.QueryParamsResponse:
      type: object
      properties:
        params:
          type: object
          properties:
            send_enabled:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  enabled:
                    type: boolean
                description: >-
                  SendEnabled maps coin denom to a send_enabled status (whether
                  a denom is

                  sendable).
            default_send_enabled:
              type: boolean
          description: Params defines the parameters for the bank module.
      description: QueryParamsResponse defines the response type for querying x/bank
        parameters.
    cosmos.bank.v1beta1.QuerySpendableBalancesResponse:
      type: object
      properties:
        balances:
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom method

              signatures required by gogoproto.
          description: balances is the spendable balances of all the coins.
        pagination:
          type: object
          properties:
            next_key:
              type: string
              format: byte
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
            total:
              type: string
              format: uint64
              title: >-
                total is total number of results available if
                PageRequest.count_total

                was set, its value is undefined otherwise
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
      description: >-
        QuerySpendableBalancesResponse defines the gRPC response structure for
        querying

        an account's spendable balances.
    cosmos.bank.v1beta1.QuerySupplyOfResponse:
      type: object
      properties:
        amount:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
      description: QuerySupplyOfResponse is the response type for the Query/SupplyOf
        RPC method.
    cosmos.bank.v1beta1.QueryTotalSupplyResponse:
      type: object
      properties:
        supply:
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom method

              signatures required by gogoproto.
          title: supply is the supply of the coins
        pagination:
          type: object
          properties:
            next_key:
              type: string
              format: byte
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
            total:
              type: string
              format: uint64
              title: >-
                total is total number of results available if
                PageRequest.count_total

                was set, its value is undefined otherwise
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
      title: >-
        QueryTotalSupplyResponse is the response type for the Query/TotalSupply
        RPC

        method
    cosmos.bank.v1beta1.SendEnabled:
      type: object
      properties:
        denom:
          type: string
        enabled:
          type: boolean
      description: |-
        SendEnabled maps coin denom to a send_enabled status (whether a denom is
        sendable).
    cosmos.auth.v1beta1.Params:
      type: object
      properties:
        max_memo_characters:
          type: string
          format: uint64
        tx_sig_limit:
          type: string
          format: uint64
        tx_size_cost_per_byte:
          type: string
          format: uint64
        sig_verify_cost_ed25519:
          type: string
          format: uint64
        sig_verify_cost_secp256k1:
          type: string
          format: uint64
      description: Params defines the parameters for the auth module.
    cosmos.auth.v1beta1.QueryAccountResponse:
      type: object
      properties:
        account:
          type: object
          properties:
            type_url:
              type: string
            value:
              type: string
              format: byte
          description: account defines the account of the corresponding address.
      description: QueryAccountResponse is the response type for the Query/Account RPC
        method.
    cosmos.auth.v1beta1.QueryAccountsResponse:
      type: object
      properties:
        accounts:
          type: array
          items:
            type: object
            properties:
              type_url:
                type: string
              value:
                type: string
                format: byte
          title: accounts are the existing accounts
        pagination:
          type: object
          properties:
            next_key:
              type: string
              format: byte
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
            total:
              type: string
              format: uint64
              title: >-
                total is total number of results available if
                PageRequest.count_total

                was set, its value is undefined otherwise
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
      description: >-
        QueryAccountsResponse is the response type for the Query/Accounts RPC
        method.


        Since: cosmos-sdk 0.43
    cosmos.auth.v1beta1.QueryModuleAccountByNameResponse:
      type: object
      properties:
        account:
          type: object
          properties:
            type_url:
              type: string
            value:
              type: string
              format: byte
      description: QueryModuleAccountByNameResponse is the response type for the
        Query/ModuleAccountByName RPC method.
    cosmos.auth.v1beta1.QueryParamsResponse:
      type: object
      properties:
        params:
          description: params defines the parameters of the module.
          type: object
          properties:
            max_memo_characters:
              type: string
              format: uint64
            tx_sig_limit:
              type: string
              format: uint64
            tx_size_cost_per_byte:
              type: string
              format: uint64
            sig_verify_cost_ed25519:
              type: string
              format: uint64
            sig_verify_cost_secp256k1:
              type: string
              format: uint64
      description: QueryParamsResponse is the response type for the Query/Params RPC method.
    cosmos.authz.v1beta1.Grant:
      type: object
      properties:
        authorization:
          type: object
          properties:
            type_url:
              type: string
            value:
              type: string
              format: byte
        expiration:
          type: string
          format: date-time
      description: |-
        Grant gives permissions to execute
        the provide method with expiration time.
    cosmos.authz.v1beta1.GrantAuthorization:
      type: object
      properties:
        granter:
          type: string
        grantee:
          type: string
        authorization:
          type: object
          properties:
            type_url:
              type: string
            value:
              type: string
              format: byte
        expiration:
          type: string
          format: date-time
      description: "Since: cosmos-sdk 0.45.2"
      title: >-
        GrantAuthorization extends a grant with both the addresses of the
        grantee and granter.

        It is used in genesis.proto and query.proto
    cosmos.authz.v1beta1.QueryGranteeGrantsResponse:
      type: object
      properties:
        grants:
          type: array
          items:
            type: object
            properties:
              granter:
                type: string
              grantee:
                type: string
              authorization:
                type: object
                properties:
                  type_url:
                    type: string
                  value:
                    type: string
                    format: byte
              expiration:
                type: string
                format: date-time
            description: "Since: cosmos-sdk 0.45.2"
            title: >-
              GrantAuthorization extends a grant with both the addresses of the
              grantee and granter.

              It is used in genesis.proto and query.proto
          description: grants is a list of grants granted to the grantee.
        pagination:
          type: object
          properties:
            next_key:
              type: string
              format: byte
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
            total:
              type: string
              format: uint64
              title: >-
                total is total number of results available if
                PageRequest.count_total

                was set, its value is undefined otherwise
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
      description: QueryGranteeGrantsResponse is the response type for the
        Query/GranteeGrants RPC method.
    cosmos.authz.v1beta1.QueryGranterGrantsResponse:
      type: object
      properties:
        grants:
          type: array
          items:
            type: object
            properties:
              granter:
                type: string
              grantee:
                type: string
              authorization:
                type: object
                properties:
                  type_url:
                    type: string
                  value:
                    type: string
                    format: byte
              expiration:
                type: string
                format: date-time
            description: "Since: cosmos-sdk 0.45.2"
            title: >-
              GrantAuthorization extends a grant with both the addresses of the
              grantee and granter.

              It is used in genesis.proto and query.proto
          description: grants is a list of grants granted by the granter.
        pagination:
          type: object
          properties:
            next_key:
              type: string
              format: byte
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
            total:
              type: string
              format: uint64
              title: >-
                total is total number of results available if
                PageRequest.count_total

                was set, its value is undefined otherwise
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
      description: QueryGranterGrantsResponse is the response type for the
        Query/GranterGrants RPC method.
    cosmos.authz.v1beta1.QueryGrantsResponse:
      type: object
      properties:
        grants:
          type: array
          items:
            type: object
            properties:
              authorization:
                type: object
                properties:
                  type_url:
                    type: string
                  value:
                    type: string
                    format: byte
              expiration:
                type: string
                format: date-time
            description: |-
              Grant gives permissions to execute
              the provide method with expiration time.
          description: authorizations is a list of grants granted for grantee by granter.
        pagination:
          type: object
          properties:
            next_key:
              type: string
              format: byte
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
            total:
              type: string
              format: uint64
              title: >-
                total is total number of results available if
                PageRequest.count_total

                was set, its value is undefined otherwise
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
      description: QueryGrantsResponse is the response type for the
        Query/Authorizations RPC method.
    OmniFlix.streampay.v1.PaymentType:
      type: string
      enum:
        - PAYMENT_TYPE_DELAYED
        - PAYMENT_TYPE_CONTINUOUS
        - PAYMENT_TYPE_PERIODIC
      default: PAYMENT_TYPE_DELAYED
    OmniFlix.streampay.v1.QueryStreamPaymentResponse:
      type: object
      properties:
        stream_payment:
          type: object
          properties:
            id:
              type: string
            sender:
              type: string
            recipient:
              type: string
            total_amount:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom method

                signatures required by gogoproto.
            stream_type:
              type: string
              enum:
                - PAYMENT_TYPE_DELAYED
                - PAYMENT_TYPE_CONTINUOUS
                - PAYMENT_TYPE_PERIODIC
              default: PAYMENT_TYPE_DELAYED
            lock_height:
              type: string
              format: int64
            start_time:
              type: string
              format: date-time
            end_time:
              type: string
              format: date-time
            total_transferred:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom method

                signatures required by gogoproto.
            last_transferred_at:
              type: string
              format: date-time
    OmniFlix.streampay.v1.QueryStreamPaymentsResponse:
      type: object
      properties:
        stream_payments:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              sender:
                type: string
              recipient:
                type: string
              total_amount:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.
              stream_type:
                type: string
                enum:
                  - PAYMENT_TYPE_DELAYED
                  - PAYMENT_TYPE_CONTINUOUS
                  - PAYMENT_TYPE_PERIODIC
                default: PAYMENT_TYPE_DELAYED
              lock_height:
                type: string
                format: int64
              start_time:
                type: string
                format: date-time
              end_time:
                type: string
                format: date-time
              total_transferred:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom method

                  signatures required by gogoproto.
              last_transferred_at:
                type: string
                format: date-time
        pagination:
          type: object
          properties:
            next_key:
              type: string
              format: byte
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
            total:
              type: string
              format: uint64
              title: >-
                total is total number of results available if
                PageRequest.count_total

                was set, its value is undefined otherwise
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
    OmniFlix.streampay.v1.StreamPayment:
      type: object
      properties:
        id:
          type: string
        sender:
          type: string
        recipient:
          type: string
        total_amount:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        stream_type:
          type: string
          enum:
            - PAYMENT_TYPE_DELAYED
            - PAYMENT_TYPE_CONTINUOUS
            - PAYMENT_TYPE_PERIODIC
          default: PAYMENT_TYPE_DELAYED
        lock_height:
          type: string
          format: int64
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        total_transferred:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        last_transferred_at:
          type: string
          format: date-time
    ibc.applications.transfer.v1.DenomTrace:
      type: object
      properties:
        path:
          type: string
          description: >-
            path defines the chain of port/channel identifiers used for tracing
            the

            source of the fungible token.
        base_denom:
          type: string
          description: base denomination of the relayed fungible token.
      description: >-
        DenomTrace contains the base denomination for ICS20 fungible tokens and
        the

        source tracing information path.
    ibc.applications.transfer.v1.Params:
      type: object
      properties:
        send_enabled:
          type: boolean
          description: >-
            send_enabled enables or disables all cross-chain token transfers
            from this

            chain.
        receive_enabled:
          type: boolean
          description: >-
            receive_enabled enables or disables all cross-chain token transfers
            to this

            chain.
      description: >-
        Params defines the set of IBC transfer parameters.

        NOTE: To prevent a single token from being transferred, set the

        TransfersEnabled parameter to true and then set the bank module's SendEnabled

        parameter for the denomination to false.
    ibc.applications.transfer.v1.QueryDenomHashResponse:
      type: object
      properties:
        hash:
          type: string
          description: hash (in hex format) of the denomination trace information.
      description: |-
        QueryDenomHashResponse is the response type for the Query/DenomHash RPC
        method.
    ibc.applications.transfer.v1.QueryDenomTraceResponse:
      type: object
      properties:
        denom_trace:
          type: object
          properties:
            path:
              type: string
              description: >-
                path defines the chain of port/channel identifiers used for
                tracing the

                source of the fungible token.
            base_denom:
              type: string
              description: base denomination of the relayed fungible token.
          description: >-
            DenomTrace contains the base denomination for ICS20 fungible tokens
            and the

            source tracing information path.
      description: >-
        QueryDenomTraceResponse is the response type for the Query/DenomTrace
        RPC

        method.
    ibc.applications.transfer.v1.QueryDenomTracesResponse:
      type: object
      properties:
        denom_traces:
          type: array
          items:
            type: object
            properties:
              path:
                type: string
                description: >-
                  path defines the chain of port/channel identifiers used for
                  tracing the

                  source of the fungible token.
              base_denom:
                type: string
                description: base denomination of the relayed fungible token.
            description: >-
              DenomTrace contains the base denomination for ICS20 fungible
              tokens and the

              source tracing information path.
          description: denom_traces returns all denominations trace information.
        pagination:
          type: object
          properties:
            next_key:
              type: string
              format: byte
              title: |-
                next_key is the key to be passed to PageRequest.key to
                query the next page most efficiently
            total:
              type: string
              format: uint64
              title: >-
                total is total number of results available if
                PageRequest.count_total

                was set, its value is undefined otherwise
          description: |-
            PageResponse is to be embedded in gRPC response messages where the
            corresponding request message has used PageRequest.

             message SomeResponse {
                     repeated Bar results = 1;
                     PageResponse page = 2;
             }
      description: >-
        QueryConnectionsResponse is the response type for the Query/DenomTraces
        RPC

        method.
    ibc.applications.transfer.v1.QueryEscrowAddressResponse:
      type: object
      properties:
        escrow_address:
          type: string
          title: the escrow account address
      description: QueryEscrowAddressResponse is the response type of the
        EscrowAddress RPC method.
    ibc.applications.transfer.v1.QueryParamsResponse:
      type: object
      properties:
        params:
          description: params defines the parameters of the module.
          type: object
          properties:
            send_enabled:
              type: boolean
              description: >-
                send_enabled enables or disables all cross-chain token transfers
                from this

                chain.
            receive_enabled:
              type: boolean
              description: >-
                receive_enabled enables or disables all cross-chain token
                transfers to this

                chain.
      description: QueryParamsResponse is the response type for the Query/Params RPC method.
    ibc.applications.interchain_accounts.host.v1.Params:
      type: object
      properties:
        host_enabled:
          type: boolean
          description: host_enabled enables or disables the host submodule.
        allow_messages:
          type: array
          items:
            type: string
          description: allow_messages defines a list of sdk message typeURLs allowed to be
            executed on a host chain.
      description: |-
        Params defines the set of on-chain interchain accounts parameters.
        The following parameters may be used to disable the host submodule.
    ibc.applications.interchain_accounts.host.v1.QueryParamsResponse:
      type: object
      properties:
        params:
          description: params defines the parameters of the module.
          type: object
          properties:
            host_enabled:
              type: boolean
              description: host_enabled enables or disables the host submodule.
            allow_messages:
              type: array
              items:
                type: string
              description: allow_messages defines a list of sdk message typeURLs allowed to be
                executed on a host chain.
      description: QueryParamsResponse is the response type for the Query/Params RPC method.
