// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: omniflix/itc/v1/tx.proto

package types

import (
	fmt "fmt"
	types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgCreateCampaign struct {
	Name            string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description     string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Interaction     InteractionType        `protobuf:"varint,3,opt,name=interaction,proto3,enum=omniflix.itc.v1.InteractionType" json:"interaction,omitempty"`
	ClaimType       ClaimType              `protobuf:"varint,4,opt,name=claim_type,json=claimType,proto3,enum=omniflix.itc.v1.ClaimType" json:"claim_type,omitempty" yaml:"claim_type"`
	ClaimableTokens *Tokens                `protobuf:"bytes,5,opt,name=claimable_tokens,json=claimableTokens,proto3" json:"claimable_tokens,omitempty" yaml:"claimable_tokens"`
	TotalTokens     *Tokens                `protobuf:"bytes,6,opt,name=total_tokens,json=totalTokens,proto3" json:"total_tokens,omitempty" yaml:"total_tokens"`
	NftDetails      *NFTDetails            `protobuf:"bytes,7,opt,name=nft_details,json=nftDetails,proto3" json:"nft_details,omitempty" yaml:"nft_details"`
	StartTime       *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty" yaml:"start_time"`
	Duration        *durationpb.Duration   `protobuf:"bytes,9,opt,name=duration,proto3" json:"duration,omitempty"`
	Creator         string                 `protobuf:"bytes,10,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *MsgCreateCampaign) Reset()         { *m = MsgCreateCampaign{} }
func (m *MsgCreateCampaign) String() string { return proto.CompactTextString(m) }
func (*MsgCreateCampaign) ProtoMessage()    {}
func (*MsgCreateCampaign) Descriptor() ([]byte, []int) {
	return fileDescriptor_175246c809bd38a4, []int{0}
}
func (m *MsgCreateCampaign) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateCampaign) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateCampaign.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateCampaign) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateCampaign.Merge(m, src)
}
func (m *MsgCreateCampaign) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateCampaign) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateCampaign.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateCampaign proto.InternalMessageInfo

func (m *MsgCreateCampaign) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgCreateCampaign) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *MsgCreateCampaign) GetInteraction() InteractionType {
	if m != nil {
		return m.Interaction
	}
	return InteractionType_INTERACTION_TYPE_BURN
}

func (m *MsgCreateCampaign) GetClaimType() ClaimType {
	if m != nil {
		return m.ClaimType
	}
	return ClaimType_CLAIM_TYPE_FT
}

func (m *MsgCreateCampaign) GetClaimableTokens() *Tokens {
	if m != nil {
		return m.ClaimableTokens
	}
	return nil
}

func (m *MsgCreateCampaign) GetTotalTokens() *Tokens {
	if m != nil {
		return m.TotalTokens
	}
	return nil
}

func (m *MsgCreateCampaign) GetNftDetails() *NFTDetails {
	if m != nil {
		return m.NftDetails
	}
	return nil
}

func (m *MsgCreateCampaign) GetStartTime() *timestamppb.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *MsgCreateCampaign) GetDuration() *durationpb.Duration {
	if m != nil {
		return m.Duration
	}
	return nil
}

func (m *MsgCreateCampaign) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type MsgCancelCampaign struct {
	CampaignId string `protobuf:"bytes,1,opt,name=campaign_id,json=campaignId,proto3" json:"campaign_id,omitempty"`
	Creator    string `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *MsgCancelCampaign) Reset()         { *m = MsgCancelCampaign{} }
func (m *MsgCancelCampaign) String() string { return proto.CompactTextString(m) }
func (*MsgCancelCampaign) ProtoMessage()    {}
func (*MsgCancelCampaign) Descriptor() ([]byte, []int) {
	return fileDescriptor_175246c809bd38a4, []int{1}
}
func (m *MsgCancelCampaign) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCancelCampaign) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCancelCampaign.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCancelCampaign) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCancelCampaign.Merge(m, src)
}
func (m *MsgCancelCampaign) XXX_Size() int {
	return m.Size()
}
func (m *MsgCancelCampaign) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCancelCampaign.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCancelCampaign proto.InternalMessageInfo

func (m *MsgCancelCampaign) GetCampaignId() string {
	if m != nil {
		return m.CampaignId
	}
	return ""
}

func (m *MsgCancelCampaign) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type MsgCampaign struct {
	CampaignId  string `protobuf:"bytes,1,opt,name=campaign_id,json=campaignId,proto3" json:"campaign_id,omitempty"`
	NftId       string `protobuf:"bytes,2,opt,name=nft_id,json=nftId,proto3" json:"nft_id,omitempty"`
	Interaction string `protobuf:"bytes,3,opt,name=interaction,proto3" json:"interaction,omitempty"`
	From        string `protobuf:"bytes,4,opt,name=from,proto3" json:"from,omitempty"`
}

func (m *MsgCampaign) Reset()         { *m = MsgCampaign{} }
func (m *MsgCampaign) String() string { return proto.CompactTextString(m) }
func (*MsgCampaign) ProtoMessage()    {}
func (*MsgCampaign) Descriptor() ([]byte, []int) {
	return fileDescriptor_175246c809bd38a4, []int{2}
}
func (m *MsgCampaign) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCampaign) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCampaign.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCampaign) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCampaign.Merge(m, src)
}
func (m *MsgCampaign) XXX_Size() int {
	return m.Size()
}
func (m *MsgCampaign) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCampaign.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCampaign proto.InternalMessageInfo

func (m *MsgCampaign) GetCampaignId() string {
	if m != nil {
		return m.CampaignId
	}
	return ""
}

func (m *MsgCampaign) GetNftId() string {
	if m != nil {
		return m.NftId
	}
	return ""
}

func (m *MsgCampaign) GetInteraction() string {
	if m != nil {
		return m.Interaction
	}
	return ""
}

func (m *MsgCampaign) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

type MsgDepositCampaign struct {
	CampaignId string      `protobuf:"bytes,1,opt,name=campaign_id,json=campaignId,proto3" json:"campaign_id,omitempty"`
	Deposit    *types.Coin `protobuf:"bytes,2,opt,name=deposit,proto3" json:"deposit,omitempty"`
	From       string      `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
}

func (m *MsgDepositCampaign) Reset()         { *m = MsgDepositCampaign{} }
func (m *MsgDepositCampaign) String() string { return proto.CompactTextString(m) }
func (*MsgDepositCampaign) ProtoMessage()    {}
func (*MsgDepositCampaign) Descriptor() ([]byte, []int) {
	return fileDescriptor_175246c809bd38a4, []int{3}
}
func (m *MsgDepositCampaign) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDepositCampaign) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDepositCampaign.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDepositCampaign) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDepositCampaign.Merge(m, src)
}
func (m *MsgDepositCampaign) XXX_Size() int {
	return m.Size()
}
func (m *MsgDepositCampaign) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDepositCampaign.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDepositCampaign proto.InternalMessageInfo

func (m *MsgDepositCampaign) GetCampaignId() string {
	if m != nil {
		return m.CampaignId
	}
	return ""
}

func (m *MsgDepositCampaign) GetDeposit() *types.Coin {
	if m != nil {
		return m.Deposit
	}
	return nil
}

func (m *MsgDepositCampaign) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func init() {
	proto.RegisterType((*MsgCreateCampaign)(nil), "omniflix.itc.v1.MsgCreateCampaign")
	proto.RegisterType((*MsgCancelCampaign)(nil), "omniflix.itc.v1.MsgCancelCampaign")
	proto.RegisterType((*MsgCampaign)(nil), "omniflix.itc.v1.MsgCampaign")
	proto.RegisterType((*MsgDepositCampaign)(nil), "omniflix.itc.v1.MsgDepositCampaign")
}

func init() { proto.RegisterFile("omniflix/itc/v1/tx.proto", fileDescriptor_175246c809bd38a4) }

var fileDescriptor_175246c809bd38a4 = []byte{
	// 620 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x94, 0x4f, 0x6b, 0xdb, 0x30,
	0x18, 0xc6, 0xeb, 0xfe, 0x8f, 0x3c, 0xd6, 0x55, 0x5b, 0x57, 0x37, 0x05, 0x27, 0xf8, 0x54, 0x18,
	0xc8, 0xa4, 0x65, 0x97, 0x1d, 0x93, 0xae, 0xd0, 0x43, 0xbb, 0xe1, 0xe5, 0xb4, 0x4b, 0x90, 0x65,
	0xd9, 0x15, 0xb3, 0x25, 0x63, 0x29, 0xa5, 0x65, 0xb0, 0x8f, 0x30, 0xf6, 0xb1, 0x76, 0xec, 0x71,
	0xa7, 0x30, 0x9a, 0x6f, 0x90, 0x4f, 0x30, 0x24, 0xdb, 0x89, 0x9b, 0xc0, 0xe8, 0xed, 0x7d, 0xa5,
	0xe7, 0xf9, 0x59, 0xbc, 0x79, 0xf2, 0x02, 0x47, 0x64, 0x9c, 0xc5, 0x29, 0xbb, 0xf3, 0x99, 0x22,
	0xfe, 0x6d, 0xcf, 0x57, 0x77, 0x28, 0x2f, 0x84, 0x12, 0x70, 0xaf, 0xbe, 0x41, 0x4c, 0x11, 0x74,
	0xdb, 0x6b, 0xbb, 0x44, 0xc8, 0x4c, 0x48, 0x3f, 0xc4, 0x92, 0xfa, 0xb7, 0xbd, 0x90, 0x2a, 0xdc,
	0xf3, 0x89, 0x60, 0xbc, 0x34, 0xb4, 0xdf, 0x24, 0x22, 0x11, 0xa6, 0xf4, 0x75, 0x55, 0x9d, 0x76,
	0x12, 0x21, 0x92, 0x94, 0xfa, 0xa6, 0x0b, 0xc7, 0xb1, 0xaf, 0x58, 0x46, 0xa5, 0xc2, 0x59, 0x5e,
	0x09, 0xdc, 0x65, 0x41, 0x34, 0x2e, 0xb0, 0x62, 0xa2, 0xc6, 0x1e, 0x2d, 0xbf, 0x50, 0x3f, 0xc7,
	0x5c, 0x79, 0x3f, 0xb7, 0xc0, 0xfe, 0x95, 0x4c, 0x06, 0x05, 0xc5, 0x8a, 0x0e, 0x70, 0x96, 0x63,
	0x96, 0x70, 0x08, 0xc1, 0x26, 0xc7, 0x19, 0x75, 0xac, 0xae, 0x75, 0xd2, 0x0a, 0x4c, 0x0d, 0xbb,
	0xc0, 0x8e, 0xa8, 0x24, 0x05, 0xcb, 0x35, 0xd9, 0x59, 0x37, 0x57, 0xcd, 0x23, 0xd8, 0x07, 0x36,
	0xe3, 0x8a, 0x16, 0x98, 0x18, 0xc5, 0x46, 0xd7, 0x3a, 0x79, 0x79, 0xda, 0x45, 0x4b, 0x43, 0x40,
	0x97, 0x0b, 0xcd, 0xf0, 0x3e, 0xa7, 0x41, 0xd3, 0x04, 0x3f, 0x03, 0x40, 0x52, 0xcc, 0xb2, 0x91,
	0xba, 0xcf, 0xa9, 0xb3, 0x69, 0x10, 0xed, 0x15, 0xc4, 0x40, 0x4b, 0xb4, 0xb9, 0x7f, 0x30, 0x9b,
	0x74, 0xf6, 0xef, 0x71, 0x96, 0x7e, 0xf0, 0x16, 0x3e, 0x2f, 0x68, 0x91, 0x5a, 0x01, 0x47, 0xe0,
	0x95, 0x69, 0x70, 0x98, 0xd2, 0x91, 0x12, 0xdf, 0x28, 0x97, 0xce, 0x56, 0xd7, 0x3a, 0xb1, 0x4f,
	0x0f, 0x57, 0xb8, 0x43, 0x73, 0xdd, 0x3f, 0x9e, 0x4d, 0x3a, 0x87, 0x0d, 0x68, 0xc3, 0xea, 0x05,
	0x7b, 0xf3, 0xa3, 0x52, 0x0d, 0xbf, 0x80, 0x17, 0x4a, 0x28, 0x9c, 0xd6, 0xf0, 0xed, 0xff, 0xc3,
	0x0f, 0x67, 0x93, 0xce, 0xeb, 0x12, 0xde, 0xb4, 0x79, 0x81, 0x6d, 0xda, 0x0a, 0x3a, 0x04, 0x36,
	0x8f, 0xd5, 0x28, 0xa2, 0x0a, 0xb3, 0x54, 0x3a, 0x3b, 0x86, 0x79, 0xbc, 0xc2, 0xbc, 0xbe, 0x18,
	0x9e, 0x97, 0x92, 0xfe, 0xdb, 0xd9, 0xa4, 0x03, 0x4b, 0x6e, 0xc3, 0xe9, 0x05, 0x80, 0xc7, 0xaa,
	0xd2, 0xe8, 0xe9, 0x4a, 0x85, 0x0b, 0x35, 0xd2, 0x09, 0x72, 0x76, 0x0d, 0xb4, 0x8d, 0xca, 0xf4,
	0xa0, 0x3a, 0x3d, 0x68, 0x58, 0xc7, 0xab, 0x39, 0xdd, 0x85, 0xcf, 0x0b, 0x5a, 0xa6, 0xd1, 0x32,
	0xf8, 0x1e, 0xec, 0xd6, 0x61, 0x73, 0x5a, 0x86, 0x77, 0xb4, 0xc2, 0x3b, 0xaf, 0x04, 0xc1, 0x5c,
	0x0a, 0x1d, 0xb0, 0x43, 0x74, 0xe4, 0x44, 0xe1, 0x00, 0x13, 0xa4, 0xba, 0xf5, 0xae, 0xcb, 0x3c,
	0x62, 0x4e, 0x68, 0x3a, 0xcf, 0x63, 0x07, 0xd8, 0xa4, 0xaa, 0x47, 0x2c, 0xaa, 0x62, 0x09, 0xea,
	0xa3, 0xcb, 0xa8, 0xc9, 0x5b, 0x7f, 0xca, 0xfb, 0x0e, 0x6c, 0xc3, 0x7b, 0x2e, 0xe9, 0x00, 0x6c,
	0xeb, 0xf1, 0xb1, 0xa8, 0x02, 0x6d, 0xf1, 0x58, 0x5d, 0x46, 0x3a, 0xfd, 0xcb, 0xd9, 0x6e, 0x3d,
	0x4d, 0x2e, 0x04, 0x9b, 0x71, 0x21, 0x32, 0x93, 0xd9, 0x56, 0x60, 0x6a, 0xef, 0x07, 0x80, 0x57,
	0x32, 0x39, 0xa7, 0xb9, 0x90, 0x4c, 0x3d, 0xff, 0x0d, 0x67, 0x60, 0x27, 0x2a, 0x3d, 0xe6, 0x11,
	0x7a, 0xa6, 0xe5, 0xe2, 0x40, 0x7a, 0x71, 0xa0, 0x6a, 0x71, 0xa0, 0x81, 0x60, 0x3c, 0xa8, 0x95,
	0xf3, 0xef, 0x6f, 0x2c, 0xbe, 0xdf, 0xff, 0xf8, 0xfb, 0xd1, 0xb5, 0x1e, 0x1e, 0x5d, 0xeb, 0xef,
	0xa3, 0x6b, 0xfd, 0x9a, 0xba, 0x6b, 0x0f, 0x53, 0x77, 0xed, 0xcf, 0xd4, 0x5d, 0xfb, 0xfa, 0x2e,
	0x61, 0xea, 0x66, 0x1c, 0x22, 0x22, 0x32, 0xff, 0x53, 0xc6, 0xd9, 0x85, 0xde, 0x0e, 0x75, 0xba,
	0x6e, 0xc6, 0xa1, 0x5f, 0xee, 0x0a, 0xfd, 0x6f, 0x92, 0xe1, 0xb6, 0xf9, 0x29, 0xcf, 0xfe, 0x05,
	0x00, 0x00, 0xff, 0xff, 0x42, 0x90, 0x87, 0x6d, 0xea, 0x04, 0x00, 0x00,
}

func (m *MsgCreateCampaign) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateCampaign) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateCampaign) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x52
	}
	if m.Duration != nil {
		{
			size, err := m.Duration.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	if m.StartTime != nil {
		{
			size, err := m.StartTime.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	if m.NftDetails != nil {
		{
			size, err := m.NftDetails.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.TotalTokens != nil {
		{
			size, err := m.TotalTokens.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.ClaimableTokens != nil {
		{
			size, err := m.ClaimableTokens.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.ClaimType != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.ClaimType))
		i--
		dAtA[i] = 0x20
	}
	if m.Interaction != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Interaction))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCancelCampaign) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCancelCampaign) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCancelCampaign) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.CampaignId) > 0 {
		i -= len(m.CampaignId)
		copy(dAtA[i:], m.CampaignId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CampaignId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCampaign) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCampaign) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCampaign) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.From) > 0 {
		i -= len(m.From)
		copy(dAtA[i:], m.From)
		i = encodeVarintTx(dAtA, i, uint64(len(m.From)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Interaction) > 0 {
		i -= len(m.Interaction)
		copy(dAtA[i:], m.Interaction)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Interaction)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.NftId) > 0 {
		i -= len(m.NftId)
		copy(dAtA[i:], m.NftId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.NftId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.CampaignId) > 0 {
		i -= len(m.CampaignId)
		copy(dAtA[i:], m.CampaignId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CampaignId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDepositCampaign) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDepositCampaign) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDepositCampaign) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.From) > 0 {
		i -= len(m.From)
		copy(dAtA[i:], m.From)
		i = encodeVarintTx(dAtA, i, uint64(len(m.From)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Deposit != nil {
		{
			size, err := m.Deposit.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.CampaignId) > 0 {
		i -= len(m.CampaignId)
		copy(dAtA[i:], m.CampaignId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CampaignId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreateCampaign) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Interaction != 0 {
		n += 1 + sovTx(uint64(m.Interaction))
	}
	if m.ClaimType != 0 {
		n += 1 + sovTx(uint64(m.ClaimType))
	}
	if m.ClaimableTokens != nil {
		l = m.ClaimableTokens.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	if m.TotalTokens != nil {
		l = m.TotalTokens.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	if m.NftDetails != nil {
		l = m.NftDetails.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	if m.StartTime != nil {
		l = m.StartTime.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Duration != nil {
		l = m.Duration.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCancelCampaign) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.CampaignId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCampaign) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.CampaignId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.NftId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Interaction)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.From)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDepositCampaign) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.CampaignId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Deposit != nil {
		l = m.Deposit.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.From)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreateCampaign) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateCampaign: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateCampaign: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Interaction", wireType)
			}
			m.Interaction = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Interaction |= InteractionType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClaimType", wireType)
			}
			m.ClaimType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ClaimType |= ClaimType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClaimableTokens", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ClaimableTokens == nil {
				m.ClaimableTokens = &Tokens{}
			}
			if err := m.ClaimableTokens.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalTokens", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.TotalTokens == nil {
				m.TotalTokens = &Tokens{}
			}
			if err := m.TotalTokens.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NftDetails", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.NftDetails == nil {
				m.NftDetails = &NFTDetails{}
			}
			if err := m.NftDetails.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.StartTime == nil {
				m.StartTime = &timestamppb.Timestamp{}
			}
			if err := m.StartTime.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Duration", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Duration == nil {
				m.Duration = &durationpb.Duration{}
			}
			if err := m.Duration.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCancelCampaign) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCancelCampaign: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCancelCampaign: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampaignId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CampaignId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCampaign) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCampaign: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCampaign: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampaignId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CampaignId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NftId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NftId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Interaction", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Interaction = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field From", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.From = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDepositCampaign) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDepositCampaign: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDepositCampaign: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampaignId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CampaignId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Deposit", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Deposit == nil {
				m.Deposit = &types.Coin{}
			}
			if err := m.Deposit.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field From", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.From = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
