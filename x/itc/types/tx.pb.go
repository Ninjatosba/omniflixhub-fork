// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: OmniFlix/itc/v1/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	github_com_gogo_protobuf_types "github.com/cosmos/gogoproto/types"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	_ "google.golang.org/protobuf/types/known/durationpb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgCreateCampaign struct {
	Name             string          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description      string          `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Interaction      InteractionType `protobuf:"varint,3,opt,name=interaction,proto3,enum=OmniFlix.itc.v1.InteractionType" json:"interaction,omitempty"`
	ClaimType        ClaimType       `protobuf:"varint,4,opt,name=claim_type,json=claimType,proto3,enum=OmniFlix.itc.v1.ClaimType" json:"claim_type,omitempty" yaml:"claim_type"`
	NftDenomId       string          `protobuf:"bytes,5,opt,name=nft_denom_id,json=nftDenomId,proto3" json:"nft_denom_id,omitempty" yaml:"nft_denom_id"`
	TokensPerClaim   types.Coin      `protobuf:"bytes,6,opt,name=tokens_per_claim,json=tokensPerClaim,proto3" json:"tokens_per_claim" yaml:"tokens_per_claim"`
	MaxAllowedClaims uint64          `protobuf:"varint,7,opt,name=max_allowed_claims,json=maxAllowedClaims,proto3" json:"max_allowed_claims,omitempty" yaml:"max_allowed_claims"`
	Deposit          types.Coin      `protobuf:"bytes,8,opt,name=deposit,proto3" json:"deposit" yaml:"deposit"`
	NftMintDetails   *NFTDetails     `protobuf:"bytes,9,opt,name=nft_mint_details,json=nftMintDetails,proto3" json:"nft_mint_details,omitempty" yaml:"nft_details"`
	StartTime        time.Time       `protobuf:"bytes,10,opt,name=start_time,json=startTime,proto3,stdtime" json:"start_time" yaml:"start_time"`
	Duration         time.Duration   `protobuf:"bytes,11,opt,name=duration,proto3,stdduration" json:"duration"`
	Distribution     *Distribution   `protobuf:"bytes,12,opt,name=distribution,proto3" json:"distribution,omitempty"`
	Creator          string          `protobuf:"bytes,13,opt,name=creator,proto3" json:"creator,omitempty"`
	CreationFee      types.Coin      `protobuf:"bytes,14,opt,name=creation_fee,json=creationFee,proto3" json:"creation_fee" yaml:"creation_fee"`
}

func (m *MsgCreateCampaign) Reset()         { *m = MsgCreateCampaign{} }
func (m *MsgCreateCampaign) String() string { return proto.CompactTextString(m) }
func (*MsgCreateCampaign) ProtoMessage()    {}
func (*MsgCreateCampaign) Descriptor() ([]byte, []int) {
	return fileDescriptor_eab55ed2c687566d, []int{0}
}
func (m *MsgCreateCampaign) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateCampaign) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateCampaign.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateCampaign) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateCampaign.Merge(m, src)
}
func (m *MsgCreateCampaign) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateCampaign) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateCampaign.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateCampaign proto.InternalMessageInfo

type MsgCreateCampaignResponse struct {
}

func (m *MsgCreateCampaignResponse) Reset()         { *m = MsgCreateCampaignResponse{} }
func (m *MsgCreateCampaignResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateCampaignResponse) ProtoMessage()    {}
func (*MsgCreateCampaignResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_eab55ed2c687566d, []int{1}
}
func (m *MsgCreateCampaignResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateCampaignResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateCampaignResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateCampaignResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateCampaignResponse.Merge(m, src)
}
func (m *MsgCreateCampaignResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateCampaignResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateCampaignResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateCampaignResponse proto.InternalMessageInfo

type MsgCancelCampaign struct {
	CampaignId uint64 `protobuf:"varint,1,opt,name=campaign_id,json=campaignId,proto3" json:"campaign_id,omitempty"`
	Creator    string `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *MsgCancelCampaign) Reset()         { *m = MsgCancelCampaign{} }
func (m *MsgCancelCampaign) String() string { return proto.CompactTextString(m) }
func (*MsgCancelCampaign) ProtoMessage()    {}
func (*MsgCancelCampaign) Descriptor() ([]byte, []int) {
	return fileDescriptor_eab55ed2c687566d, []int{2}
}
func (m *MsgCancelCampaign) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCancelCampaign) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCancelCampaign.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCancelCampaign) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCancelCampaign.Merge(m, src)
}
func (m *MsgCancelCampaign) XXX_Size() int {
	return m.Size()
}
func (m *MsgCancelCampaign) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCancelCampaign.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCancelCampaign proto.InternalMessageInfo

type MsgCancelCampaignResponse struct {
}

func (m *MsgCancelCampaignResponse) Reset()         { *m = MsgCancelCampaignResponse{} }
func (m *MsgCancelCampaignResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCancelCampaignResponse) ProtoMessage()    {}
func (*MsgCancelCampaignResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_eab55ed2c687566d, []int{3}
}
func (m *MsgCancelCampaignResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCancelCampaignResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCancelCampaignResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCancelCampaignResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCancelCampaignResponse.Merge(m, src)
}
func (m *MsgCancelCampaignResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCancelCampaignResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCancelCampaignResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCancelCampaignResponse proto.InternalMessageInfo

type MsgClaim struct {
	CampaignId  uint64          `protobuf:"varint,1,opt,name=campaign_id,json=campaignId,proto3" json:"campaign_id,omitempty"`
	NftId       string          `protobuf:"bytes,2,opt,name=nft_id,json=nftId,proto3" json:"nft_id,omitempty"`
	Interaction InteractionType `protobuf:"varint,3,opt,name=interaction,proto3,enum=OmniFlix.itc.v1.InteractionType" json:"interaction,omitempty"`
	Claimer     string          `protobuf:"bytes,4,opt,name=claimer,proto3" json:"claimer,omitempty"`
}

func (m *MsgClaim) Reset()         { *m = MsgClaim{} }
func (m *MsgClaim) String() string { return proto.CompactTextString(m) }
func (*MsgClaim) ProtoMessage()    {}
func (*MsgClaim) Descriptor() ([]byte, []int) {
	return fileDescriptor_eab55ed2c687566d, []int{4}
}
func (m *MsgClaim) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgClaim) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgClaim.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgClaim) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgClaim.Merge(m, src)
}
func (m *MsgClaim) XXX_Size() int {
	return m.Size()
}
func (m *MsgClaim) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgClaim.DiscardUnknown(m)
}

var xxx_messageInfo_MsgClaim proto.InternalMessageInfo

type MsgClaimResponse struct {
}

func (m *MsgClaimResponse) Reset()         { *m = MsgClaimResponse{} }
func (m *MsgClaimResponse) String() string { return proto.CompactTextString(m) }
func (*MsgClaimResponse) ProtoMessage()    {}
func (*MsgClaimResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_eab55ed2c687566d, []int{5}
}
func (m *MsgClaimResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgClaimResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgClaimResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgClaimResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgClaimResponse.Merge(m, src)
}
func (m *MsgClaimResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgClaimResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgClaimResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgClaimResponse proto.InternalMessageInfo

type MsgDepositCampaign struct {
	CampaignId uint64     `protobuf:"varint,1,opt,name=campaign_id,json=campaignId,proto3" json:"campaign_id,omitempty"`
	Amount     types.Coin `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount"`
	Depositor  string     `protobuf:"bytes,3,opt,name=depositor,proto3" json:"depositor,omitempty"`
}

func (m *MsgDepositCampaign) Reset()         { *m = MsgDepositCampaign{} }
func (m *MsgDepositCampaign) String() string { return proto.CompactTextString(m) }
func (*MsgDepositCampaign) ProtoMessage()    {}
func (*MsgDepositCampaign) Descriptor() ([]byte, []int) {
	return fileDescriptor_eab55ed2c687566d, []int{6}
}
func (m *MsgDepositCampaign) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDepositCampaign) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDepositCampaign.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDepositCampaign) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDepositCampaign.Merge(m, src)
}
func (m *MsgDepositCampaign) XXX_Size() int {
	return m.Size()
}
func (m *MsgDepositCampaign) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDepositCampaign.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDepositCampaign proto.InternalMessageInfo

type MsgDepositCampaignResponse struct {
}

func (m *MsgDepositCampaignResponse) Reset()         { *m = MsgDepositCampaignResponse{} }
func (m *MsgDepositCampaignResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDepositCampaignResponse) ProtoMessage()    {}
func (*MsgDepositCampaignResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_eab55ed2c687566d, []int{7}
}
func (m *MsgDepositCampaignResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDepositCampaignResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDepositCampaignResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDepositCampaignResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDepositCampaignResponse.Merge(m, src)
}
func (m *MsgDepositCampaignResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDepositCampaignResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDepositCampaignResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDepositCampaignResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgCreateCampaign)(nil), "OmniFlix.itc.v1.MsgCreateCampaign")
	proto.RegisterType((*MsgCreateCampaignResponse)(nil), "OmniFlix.itc.v1.MsgCreateCampaignResponse")
	proto.RegisterType((*MsgCancelCampaign)(nil), "OmniFlix.itc.v1.MsgCancelCampaign")
	proto.RegisterType((*MsgCancelCampaignResponse)(nil), "OmniFlix.itc.v1.MsgCancelCampaignResponse")
	proto.RegisterType((*MsgClaim)(nil), "OmniFlix.itc.v1.MsgClaim")
	proto.RegisterType((*MsgClaimResponse)(nil), "OmniFlix.itc.v1.MsgClaimResponse")
	proto.RegisterType((*MsgDepositCampaign)(nil), "OmniFlix.itc.v1.MsgDepositCampaign")
	proto.RegisterType((*MsgDepositCampaignResponse)(nil), "OmniFlix.itc.v1.MsgDepositCampaignResponse")
}

func init() { proto.RegisterFile("OmniFlix/itc/v1/tx.proto", fileDescriptor_eab55ed2c687566d) }

var fileDescriptor_eab55ed2c687566d = []byte{
	// 900 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0x4f, 0x6f, 0xe3, 0x44,
	0x14, 0x8f, 0xbb, 0xe9, 0x9f, 0xbc, 0x94, 0x6c, 0x77, 0x60, 0x77, 0x9d, 0x74, 0x6b, 0x07, 0x73,
	0xa9, 0x40, 0xb2, 0xd5, 0x72, 0x40, 0x70, 0x41, 0xeb, 0x86, 0x4a, 0xd5, 0xd2, 0x65, 0x65, 0xf5,
	0x00, 0x48, 0x28, 0x4c, 0xec, 0x89, 0x77, 0x84, 0x3d, 0x63, 0x79, 0x26, 0x25, 0xfd, 0x0e, 0x1c,
	0xf6, 0xc8, 0x91, 0x8f, 0xd3, 0x03, 0x87, 0x3d, 0x72, 0x0a, 0xd0, 0x7e, 0x83, 0x48, 0xdc, 0xd1,
	0x8c, 0xed, 0x34, 0x7f, 0xba, 0xb4, 0x07, 0x6e, 0x33, 0xef, 0xfd, 0xde, 0xef, 0xfd, 0x9f, 0x01,
	0xf3, 0x9b, 0x94, 0xd1, 0xe3, 0x84, 0x8e, 0x3d, 0x2a, 0x43, 0xef, 0xfc, 0xc0, 0x93, 0x63, 0x37,
	0xcb, 0xb9, 0xe4, 0xe8, 0x61, 0xa5, 0x71, 0xa9, 0x0c, 0xdd, 0xf3, 0x83, 0x8e, 0x15, 0x72, 0x91,
	0x72, 0xe1, 0x0d, 0xb0, 0x20, 0xde, 0xf9, 0xc1, 0x80, 0x48, 0x7c, 0xe0, 0x85, 0x9c, 0xb2, 0xc2,
	0xa0, 0xf3, 0x41, 0xcc, 0x63, 0xae, 0x8f, 0x9e, 0x3a, 0x95, 0x52, 0x3b, 0xe6, 0x3c, 0x4e, 0x88,
	0xa7, 0x6f, 0x83, 0xd1, 0xd0, 0x93, 0x34, 0x25, 0x42, 0xe2, 0x34, 0x2b, 0x01, 0xd6, 0x32, 0x20,
	0x1a, 0xe5, 0x58, 0x52, 0x5e, 0xd1, 0xb6, 0x97, 0x23, 0x54, 0xe1, 0x68, 0x95, 0xf3, 0xfb, 0x26,
	0x3c, 0x3a, 0x15, 0xf1, 0x51, 0x4e, 0xb0, 0x24, 0x47, 0x38, 0xcd, 0x30, 0x8d, 0x19, 0x42, 0x50,
	0x67, 0x38, 0x25, 0xa6, 0xd1, 0x35, 0xf6, 0x1b, 0x81, 0x3e, 0xa3, 0x2e, 0x34, 0x23, 0x22, 0xc2,
	0x9c, 0x66, 0x8a, 0xd9, 0x5c, 0xd3, 0xaa, 0x79, 0x11, 0xf2, 0xa1, 0x49, 0x99, 0x24, 0x39, 0x0e,
	0x35, 0xe2, 0x41, 0xd7, 0xd8, 0x6f, 0x1d, 0x76, 0xdd, 0xa5, 0x22, 0xb8, 0x27, 0x37, 0x98, 0xb3,
	0x8b, 0x8c, 0x04, 0xf3, 0x46, 0xe8, 0x15, 0x40, 0x98, 0x60, 0x9a, 0xf6, 0xe5, 0x45, 0x46, 0xcc,
	0xba, 0xa6, 0xe8, 0xac, 0x50, 0x1c, 0x29, 0x88, 0x32, 0xf6, 0x1f, 0x4f, 0x27, 0xf6, 0xa3, 0x0b,
	0x9c, 0x26, 0x5f, 0x38, 0x37, 0x76, 0x4e, 0xd0, 0x08, 0x2b, 0x04, 0xfa, 0x1c, 0xb6, 0xd9, 0x50,
	0xf6, 0x23, 0xc2, 0x78, 0xda, 0xa7, 0x91, 0xb9, 0xae, 0x02, 0xf7, 0x9f, 0x4e, 0x27, 0xf6, 0xfb,
	0x85, 0xdd, 0xbc, 0xd6, 0x09, 0x80, 0x0d, 0x65, 0x4f, 0xdd, 0x4e, 0x22, 0x14, 0xc1, 0x8e, 0xe4,
	0x3f, 0x11, 0x26, 0xfa, 0x19, 0xc9, 0xfb, 0x9a, 0xd2, 0xdc, 0xe8, 0x1a, 0xfb, 0xcd, 0xc3, 0xb6,
	0x5b, 0x74, 0xd2, 0x55, 0x9d, 0x74, 0xcb, 0x4e, 0xba, 0x47, 0x9c, 0x32, 0xdf, 0xbe, 0x9c, 0xd8,
	0xb5, 0xe9, 0xc4, 0x7e, 0x5a, 0xb0, 0x2f, 0x13, 0x38, 0x41, 0xab, 0x10, 0xbd, 0x22, 0xb9, 0x4e,
	0x03, 0xbd, 0x00, 0x94, 0xe2, 0x71, 0x1f, 0x27, 0x09, 0xff, 0x99, 0x44, 0x05, 0x4a, 0x98, 0x9b,
	0x5d, 0x63, 0xbf, 0xee, 0xef, 0x4d, 0x27, 0x76, 0xbb, 0x20, 0x5a, 0xc5, 0x38, 0xc1, 0x4e, 0x8a,
	0xc7, 0xcf, 0x0b, 0x99, 0xe6, 0x12, 0xe8, 0x05, 0x6c, 0x46, 0x24, 0xe3, 0x82, 0x4a, 0x73, 0xeb,
	0xae, 0x48, 0x9f, 0x94, 0x91, 0xb6, 0x0a, 0x07, 0xa5, 0x9d, 0x13, 0x54, 0x0c, 0xe8, 0x07, 0xd8,
	0x51, 0xc5, 0x49, 0x29, 0x53, 0x15, 0x92, 0x98, 0x26, 0xc2, 0x6c, 0x68, 0xd6, 0xdd, 0x95, 0x96,
	0xbc, 0x3c, 0x3e, 0xeb, 0x15, 0x10, 0xff, 0xc9, 0x74, 0x62, 0xa3, 0xf9, 0xda, 0x6a, 0xb1, 0x13,
	0xb4, 0xd8, 0x50, 0x9e, 0x52, 0x26, 0x4b, 0x1c, 0xfa, 0x16, 0x40, 0x48, 0x9c, 0xcb, 0xbe, 0x9a,
	0x67, 0x13, 0x34, 0x71, 0xc7, 0x2d, 0x66, 0xd9, 0xad, 0x66, 0xd9, 0x3d, 0xab, 0x86, 0xdd, 0xdf,
	0x2b, 0xe3, 0x2d, 0xfb, 0x7d, 0x63, 0xeb, 0xbc, 0xf9, 0xd3, 0x36, 0x82, 0x86, 0x16, 0x28, 0x38,
	0xfa, 0x12, 0xb6, 0xaa, 0x15, 0x30, 0x9b, 0x65, 0x19, 0x96, 0x79, 0x7b, 0x25, 0xc0, 0xdf, 0x52,
	0xb4, 0xbf, 0x2a, 0x86, 0x99, 0x11, 0x7a, 0x0e, 0xdb, 0x11, 0x15, 0x32, 0xa7, 0x83, 0x91, 0x26,
	0xd9, 0xd6, 0x24, 0x7b, 0x2b, 0x59, 0xf7, 0xe6, 0x40, 0xc1, 0x82, 0x09, 0x32, 0x61, 0x33, 0x54,
	0x5b, 0xc5, 0x73, 0xf3, 0x3d, 0xbd, 0x2b, 0xd5, 0x15, 0x7d, 0x07, 0xdb, 0xfa, 0x48, 0x39, 0xeb,
	0x0f, 0x09, 0x31, 0x5b, 0x77, 0x35, 0x6a, 0xb7, 0x4c, 0xbc, 0x1c, 0xd8, 0x79, 0x63, 0x27, 0x68,
	0x56, 0xd7, 0x63, 0x42, 0x9c, 0x5d, 0x68, 0xaf, 0x6c, 0x73, 0x40, 0x44, 0xc6, 0x99, 0x20, 0xce,
	0xcb, 0x62, 0xd5, 0x31, 0x0b, 0x49, 0x32, 0x5b, 0x75, 0x1b, 0x9a, 0x61, 0x79, 0x56, 0xdb, 0xa1,
	0x36, 0xbe, 0x1e, 0x40, 0x25, 0x3a, 0x89, 0xe6, 0xf3, 0x58, 0x5b, 0xc8, 0xa3, 0x72, 0xb6, 0xc0,
	0x37, 0x73, 0xf6, 0x9b, 0x01, 0x5b, 0x4a, 0xab, 0x47, 0xfc, 0x4e, 0x27, 0x8f, 0x61, 0x43, 0x8d,
	0x0a, 0x8d, 0x4a, 0x1f, 0xeb, 0x6c, 0x28, 0x4f, 0xa2, 0xff, 0xe5, 0x45, 0x51, 0xf1, 0xab, 0x20,
	0x48, 0xae, 0x9f, 0x13, 0x15, 0x7f, 0x71, 0x75, 0x10, 0xec, 0x54, 0x11, 0xce, 0xc2, 0xfe, 0xc5,
	0x00, 0x74, 0x2a, 0xe2, 0x5e, 0xb1, 0x01, 0xf7, 0xaf, 0xd2, 0x67, 0xb0, 0x81, 0x53, 0x3e, 0x62,
	0x52, 0x27, 0xf0, 0x9f, 0xdd, 0xac, 0xab, 0x6e, 0x06, 0x25, 0x1c, 0x3d, 0x83, 0x46, 0xb9, 0x6e,
	0x3c, 0xd7, 0x09, 0x36, 0x82, 0x1b, 0x81, 0xf3, 0x0c, 0x3a, 0xab, 0xd1, 0x54, 0xc1, 0x1e, 0xfe,
	0xb3, 0x06, 0x0f, 0x4e, 0x45, 0x8c, 0x7e, 0x84, 0xd6, 0xd2, 0x03, 0xee, 0xac, 0xd4, 0x68, 0x65,
	0x2c, 0x3a, 0x1f, 0xdf, 0x8d, 0xa9, 0x3c, 0x69, 0x0f, 0x8b, 0x73, 0x73, 0xbb, 0x87, 0x05, 0xcc,
	0x3b, 0x3c, 0xdc, 0x3a, 0x2f, 0xe8, 0x2b, 0x58, 0x2f, 0x66, 0xa5, 0x7d, 0xab, 0x91, 0x52, 0x75,
	0x3e, 0x7c, 0xa7, 0x6a, 0x46, 0x13, 0xc2, 0xc3, 0xe5, 0xde, 0x7d, 0x74, 0x9b, 0xd5, 0x12, 0xa8,
	0xf3, 0xc9, 0x3d, 0x40, 0x95, 0x13, 0xff, 0xeb, 0xcb, 0xbf, 0xad, 0xda, 0xe5, 0x95, 0x65, 0xbc,
	0xbd, 0xb2, 0x8c, 0xbf, 0xae, 0x2c, 0xe3, 0xcd, 0xb5, 0x55, 0x7b, 0x7b, 0x6d, 0xd5, 0xfe, 0xb8,
	0xb6, 0x6a, 0xdf, 0xbb, 0x31, 0x95, 0xaf, 0x47, 0x03, 0x37, 0xe4, 0xa9, 0x37, 0xfb, 0x78, 0x79,
	0xca, 0xe8, 0x30, 0xa1, 0xe3, 0xd7, 0xa3, 0x81, 0x77, 0x7e, 0xe8, 0x15, 0x3f, 0xb1, 0xfa, 0xab,
	0xc4, 0x60, 0x43, 0x3f, 0x49, 0x9f, 0xfe, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x32, 0x15, 0xfc, 0x47,
	0x48, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	CreateCampaign(ctx context.Context, in *MsgCreateCampaign, opts ...grpc.CallOption) (*MsgCreateCampaignResponse, error)
	CancelCampaign(ctx context.Context, in *MsgCancelCampaign, opts ...grpc.CallOption) (*MsgCancelCampaignResponse, error)
	Claim(ctx context.Context, in *MsgClaim, opts ...grpc.CallOption) (*MsgClaimResponse, error)
	DepositCampaign(ctx context.Context, in *MsgDepositCampaign, opts ...grpc.CallOption) (*MsgDepositCampaignResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) CreateCampaign(ctx context.Context, in *MsgCreateCampaign, opts ...grpc.CallOption) (*MsgCreateCampaignResponse, error) {
	out := new(MsgCreateCampaignResponse)
	err := c.cc.Invoke(ctx, "/OmniFlix.itc.v1.Msg/CreateCampaign", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CancelCampaign(ctx context.Context, in *MsgCancelCampaign, opts ...grpc.CallOption) (*MsgCancelCampaignResponse, error) {
	out := new(MsgCancelCampaignResponse)
	err := c.cc.Invoke(ctx, "/OmniFlix.itc.v1.Msg/CancelCampaign", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) Claim(ctx context.Context, in *MsgClaim, opts ...grpc.CallOption) (*MsgClaimResponse, error) {
	out := new(MsgClaimResponse)
	err := c.cc.Invoke(ctx, "/OmniFlix.itc.v1.Msg/Claim", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DepositCampaign(ctx context.Context, in *MsgDepositCampaign, opts ...grpc.CallOption) (*MsgDepositCampaignResponse, error) {
	out := new(MsgDepositCampaignResponse)
	err := c.cc.Invoke(ctx, "/OmniFlix.itc.v1.Msg/DepositCampaign", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	CreateCampaign(context.Context, *MsgCreateCampaign) (*MsgCreateCampaignResponse, error)
	CancelCampaign(context.Context, *MsgCancelCampaign) (*MsgCancelCampaignResponse, error)
	Claim(context.Context, *MsgClaim) (*MsgClaimResponse, error)
	DepositCampaign(context.Context, *MsgDepositCampaign) (*MsgDepositCampaignResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) CreateCampaign(ctx context.Context, req *MsgCreateCampaign) (*MsgCreateCampaignResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCampaign not implemented")
}
func (*UnimplementedMsgServer) CancelCampaign(ctx context.Context, req *MsgCancelCampaign) (*MsgCancelCampaignResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelCampaign not implemented")
}
func (*UnimplementedMsgServer) Claim(ctx context.Context, req *MsgClaim) (*MsgClaimResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Claim not implemented")
}
func (*UnimplementedMsgServer) DepositCampaign(ctx context.Context, req *MsgDepositCampaign) (*MsgDepositCampaignResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DepositCampaign not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_CreateCampaign_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateCampaign)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateCampaign(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OmniFlix.itc.v1.Msg/CreateCampaign",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateCampaign(ctx, req.(*MsgCreateCampaign))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CancelCampaign_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCancelCampaign)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CancelCampaign(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OmniFlix.itc.v1.Msg/CancelCampaign",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CancelCampaign(ctx, req.(*MsgCancelCampaign))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_Claim_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgClaim)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Claim(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OmniFlix.itc.v1.Msg/Claim",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Claim(ctx, req.(*MsgClaim))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DepositCampaign_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDepositCampaign)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DepositCampaign(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OmniFlix.itc.v1.Msg/DepositCampaign",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DepositCampaign(ctx, req.(*MsgDepositCampaign))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "OmniFlix.itc.v1.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateCampaign",
			Handler:    _Msg_CreateCampaign_Handler,
		},
		{
			MethodName: "CancelCampaign",
			Handler:    _Msg_CancelCampaign_Handler,
		},
		{
			MethodName: "Claim",
			Handler:    _Msg_Claim_Handler,
		},
		{
			MethodName: "DepositCampaign",
			Handler:    _Msg_DepositCampaign_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "OmniFlix/itc/v1/tx.proto",
}

func (m *MsgCreateCampaign) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateCampaign) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateCampaign) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.CreationFee.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x72
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x6a
	}
	if m.Distribution != nil {
		{
			size, err := m.Distribution.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x62
	}
	n3, err3 := github_com_gogo_protobuf_types.StdDurationMarshalTo(m.Duration, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdDuration(m.Duration):])
	if err3 != nil {
		return 0, err3
	}
	i -= n3
	i = encodeVarintTx(dAtA, i, uint64(n3))
	i--
	dAtA[i] = 0x5a
	n4, err4 := github_com_gogo_protobuf_types.StdTimeMarshalTo(m.StartTime, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(m.StartTime):])
	if err4 != nil {
		return 0, err4
	}
	i -= n4
	i = encodeVarintTx(dAtA, i, uint64(n4))
	i--
	dAtA[i] = 0x52
	if m.NftMintDetails != nil {
		{
			size, err := m.NftMintDetails.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	{
		size, err := m.Deposit.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x42
	if m.MaxAllowedClaims != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.MaxAllowedClaims))
		i--
		dAtA[i] = 0x38
	}
	{
		size, err := m.TokensPerClaim.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x32
	if len(m.NftDenomId) > 0 {
		i -= len(m.NftDenomId)
		copy(dAtA[i:], m.NftDenomId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.NftDenomId)))
		i--
		dAtA[i] = 0x2a
	}
	if m.ClaimType != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.ClaimType))
		i--
		dAtA[i] = 0x20
	}
	if m.Interaction != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Interaction))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateCampaignResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateCampaignResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateCampaignResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCancelCampaign) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCancelCampaign) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCancelCampaign) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x12
	}
	if m.CampaignId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CampaignId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgCancelCampaignResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCancelCampaignResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCancelCampaignResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgClaim) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgClaim) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgClaim) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Claimer) > 0 {
		i -= len(m.Claimer)
		copy(dAtA[i:], m.Claimer)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Claimer)))
		i--
		dAtA[i] = 0x22
	}
	if m.Interaction != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Interaction))
		i--
		dAtA[i] = 0x18
	}
	if len(m.NftId) > 0 {
		i -= len(m.NftId)
		copy(dAtA[i:], m.NftId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.NftId)))
		i--
		dAtA[i] = 0x12
	}
	if m.CampaignId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CampaignId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgClaimResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgClaimResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgClaimResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDepositCampaign) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDepositCampaign) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDepositCampaign) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Depositor) > 0 {
		i -= len(m.Depositor)
		copy(dAtA[i:], m.Depositor)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Depositor)))
		i--
		dAtA[i] = 0x1a
	}
	{
		size, err := m.Amount.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if m.CampaignId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CampaignId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgDepositCampaignResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDepositCampaignResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDepositCampaignResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreateCampaign) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Interaction != 0 {
		n += 1 + sovTx(uint64(m.Interaction))
	}
	if m.ClaimType != 0 {
		n += 1 + sovTx(uint64(m.ClaimType))
	}
	l = len(m.NftDenomId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.TokensPerClaim.Size()
	n += 1 + l + sovTx(uint64(l))
	if m.MaxAllowedClaims != 0 {
		n += 1 + sovTx(uint64(m.MaxAllowedClaims))
	}
	l = m.Deposit.Size()
	n += 1 + l + sovTx(uint64(l))
	if m.NftMintDetails != nil {
		l = m.NftMintDetails.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.StartTime)
	n += 1 + l + sovTx(uint64(l))
	l = github_com_gogo_protobuf_types.SizeOfStdDuration(m.Duration)
	n += 1 + l + sovTx(uint64(l))
	if m.Distribution != nil {
		l = m.Distribution.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.CreationFee.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgCreateCampaignResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCancelCampaign) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CampaignId != 0 {
		n += 1 + sovTx(uint64(m.CampaignId))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCancelCampaignResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgClaim) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CampaignId != 0 {
		n += 1 + sovTx(uint64(m.CampaignId))
	}
	l = len(m.NftId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Interaction != 0 {
		n += 1 + sovTx(uint64(m.Interaction))
	}
	l = len(m.Claimer)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgClaimResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDepositCampaign) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CampaignId != 0 {
		n += 1 + sovTx(uint64(m.CampaignId))
	}
	l = m.Amount.Size()
	n += 1 + l + sovTx(uint64(l))
	l = len(m.Depositor)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDepositCampaignResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreateCampaign) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateCampaign: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateCampaign: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Interaction", wireType)
			}
			m.Interaction = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Interaction |= InteractionType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClaimType", wireType)
			}
			m.ClaimType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ClaimType |= ClaimType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NftDenomId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NftDenomId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TokensPerClaim", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.TokensPerClaim.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxAllowedClaims", wireType)
			}
			m.MaxAllowedClaims = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxAllowedClaims |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Deposit", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Deposit.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NftMintDetails", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.NftMintDetails == nil {
				m.NftMintDetails = &NFTDetails{}
			}
			if err := m.NftMintDetails.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(&m.StartTime, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Duration", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdDurationUnmarshal(&m.Duration, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Distribution", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Distribution == nil {
				m.Distribution = &Distribution{}
			}
			if err := m.Distribution.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreationFee", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.CreationFee.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateCampaignResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateCampaignResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateCampaignResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCancelCampaign) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCancelCampaign: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCancelCampaign: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampaignId", wireType)
			}
			m.CampaignId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CampaignId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCancelCampaignResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCancelCampaignResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCancelCampaignResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgClaim) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgClaim: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgClaim: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampaignId", wireType)
			}
			m.CampaignId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CampaignId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NftId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NftId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Interaction", wireType)
			}
			m.Interaction = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Interaction |= InteractionType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Claimer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Claimer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgClaimResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgClaimResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgClaimResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDepositCampaign) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDepositCampaign: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDepositCampaign: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CampaignId", wireType)
			}
			m.CampaignId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CampaignId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Amount.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Depositor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Depositor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDepositCampaignResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDepositCampaignResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDepositCampaignResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
