syntax = "proto3";
package omniflix.flixdrop.v1beta1;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "google/protobuf/timestamp.proto";
// this line is used by starport scaffolding #1

option go_package = "github.com/OmniFlix/omniflixhub/x/flixdrop/types";

message WeightedAction {
  uint32                    index      = 1 [(gogoproto.moretags) = "yaml:\"index\""];
  string                    name       = 2 [(gogoproto.moretags) = "yaml:\"name\""];
  google.protobuf.Timestamp start_time = 3 [
    (gogoproto.stdtime)  = true,
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"start_time\""
  ];
  string                    weight     = 4 [
    (gogoproto.moretags)   = "yaml:\"weight\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false
  ];
}

// A Claim Records is the metadata of claim data per address
message ClaimRecord {
  // address of claim user
  string                            address                  = 1 [(gogoproto.moretags) = "yaml:\"address\""];

  // total initial claimable amount for the user
  repeated cosmos.base.v1beta1.Coin initial_claimable_amount = 2 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.nullable)     = false,
    (gogoproto.moretags)     = "yaml:\"initial_claimable_amount\""
  ];

  // true if action is completed
  // index of bool in array refers to action index #
  repeated bool                     actions_completed        = 3
  [(gogoproto.moretags) = "yaml:\"actions_completed\""];
}